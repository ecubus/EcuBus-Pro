{"version":3,"file":"uds.js","mappings":"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","sources":["webpack://ecubuspro/./node_modules/workerpool/src/Promise.js","webpack://ecubuspro/./src/main/worker/secureAccess/build/Release/sa.node","webpack://ecubuspro/external node-commonjs \"worker_threads\"","webpack://ecubuspro/./node_modules/workerpool/src/Pool.js","webpack://ecubuspro/./src/main/timer/build/Release/precision_timer.node","webpack://ecubuspro/external node-commonjs \"child_process\"","webpack://ecubuspro/./node_modules/workerpool/src/generated/embeddedWorker.js","webpack://ecubuspro/./node_modules/workerpool/src/transfer.js","webpack://ecubuspro/./node_modules/workerpool/src/environment.js","webpack://ecubuspro/./node_modules/workerpool/src/worker.js","webpack://ecubuspro/./node_modules/lodash/lodash.js","webpack://ecubuspro/./node_modules/workerpool/src/debug-port-allocator.js","webpack://ecubuspro/./node_modules/workerpool/src/index.js","webpack://ecubuspro/./node_modules/workerpool/src/WorkerHandler.js","webpack://ecubuspro/external node-commonjs \"os\"","webpack://ecubuspro/./node_modules/workerpool/src/validateOptions.js","webpack://ecubuspro/external node-commonjs \"path\"","webpack://ecubuspro/webpack/bootstrap","webpack://ecubuspro/webpack/runtime/compat get default export","webpack://ecubuspro/webpack/runtime/define property getters","webpack://ecubuspro/webpack/runtime/hasOwnProperty shorthand","webpack://ecubuspro/webpack/runtime/make namespace object","webpack://ecubuspro/webpack/runtime/node module decorator","webpack://ecubuspro/webpack/runtime/publicPath","webpack://ecubuspro/./node_modules/emittery/maps.js","webpack://ecubuspro/./node_modules/emittery/index.js","webpack://ecubuspro/external node-commonjs \"crypto\"","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/native.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/rng.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/stringify.js","webpack://ecubuspro/./node_modules/uuid/dist/esm-node/v4.js","webpack://ecubuspro/./src/main/share/uds.ts","webpack://ecubuspro/./src/main/share/can.ts","webpack://ecubuspro/./src/main/worker/secureAccess/index.ts","webpack://ecubuspro/./src/main/share/lin.ts","webpack://ecubuspro/external node-commonjs \"node:assert\"","webpack://ecubuspro/./src/renderer/src/database/ldf/calc.ts","webpack://ecubuspro/./src/renderer/src/database/dbc/calc.ts","webpack://ecubuspro/./src/main/util.ts","webpack://ecubuspro/./src/main/timer/timer.ts","webpack://ecubuspro/./src/main/var/index.ts","webpack://ecubuspro/external node-commonjs \"node:test\"","webpack://ecubuspro/external node-commonjs \"node:worker_threads\"","webpack://ecubuspro/./src/main/share/someip/index.ts","webpack://ecubuspro/./src/main/share/osEvent.ts","webpack://ecubuspro/./src/main/worker/someip.ts","webpack://ecubuspro/./src/main/share/sysVar.ts","webpack://ecubuspro/./src/main/worker/uds.ts"],"sourcesContent":["'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","\ntry {\n  process.dlopen(module, require(\"path\").join(__dirname, __webpack_public_path__, \"sa.node\"));\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"worker_threads\");","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","\ntry {\n  process.dlopen(module, require(\"path\").join(__dirname, __webpack_public_path__, \"precision_timer.node\"));\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"child_process\");","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var n={};var t=function(e,n){this.message=e,this.transfer=n};return function(e){var n=t,r={exit:function(){}};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)r.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},r.send=function(e){postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var o;try{o=require(\\\"worker_threads\\\")}catch(e){if(\\\"object\\\"!=typeof e||null===e||\\\"MODULE_NOT_FOUND\\\"!==e.code)throw e}if(o&&null!==o.parentPort){var i=o.parentPort;r.send=i.postMessage.bind(i),r.on=i.on.bind(i),r.exit=process.exit.bind(process)}else r.on=process.on.bind(process),r.send=function(e){process.send(e)},r.on(\\\"disconnect\\\",(function(){process.exit(1)})),r.exit=process.exit.bind(process)}function s(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return Object.defineProperty(n,t,{value:e[t],enumerable:!0})}),{})}function d(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}r.methods={},r.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(null, arguments);\\\");return t.apply(t,n)},r.methods.methods=function(){return Object.keys(r.methods)},r.terminationHandler=void 0,r.cleanupAndExit=function(e){var n=function(){r.exit(e)};if(!r.terminationHandler)return n();var t=r.terminationHandler(e);d(t)?t.then(n,n):n()};var u=null;r.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return r.cleanupAndExit(0);try{var t=r.methods[e.method];if(!t)throw new Error('Unknown method \\\"'+e.method+'\\\"');u=e.id;var o=t.apply(t,e.params);d(o)?o.then((function(t){t instanceof n?r.send({id:e.id,result:t.message,error:null},t.transfer):r.send({id:e.id,result:t,error:null}),u=null})).catch((function(n){r.send({id:e.id,result:null,error:s(n)}),u=null})):(o instanceof n?r.send({id:e.id,result:o.message,error:null},o.transfer):r.send({id:e.id,result:o,error:null}),u=null)}catch(n){r.send({id:e.id,result:null,error:s(n)})}})),r.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(r.methods[t]=e[t]);n&&(r.terminationHandler=n.onTerminate),r.send(\\\"ready\\\")},r.emit=function(e){if(u){if(e instanceof n)return void r.send({id:u,isEvent:!0,payload:e.message},e.transfer);r.send({id:u,isEvent:!0,payload:e})}},e.add=r.register,e.emit=r.emit}(n),e(n)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\nvar Transfer = require('./transfer');\n\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message) {\n    postMessage(message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  return Object.getOwnPropertyNames(error).reduce(function(product, name) {\n    return Object.defineProperty(product, name, {\n\tvalue: error[name],\n\tenumerable: true\n    });\n  }, {});\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(null, arguments);');\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns \n */\nworker.cleanupAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n\n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n  } else {\n    _exit();\n  }\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.cleanupAndExit(0);\n  }\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err)\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","const {platform, isMainThread, cpus} = require('./environment');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  if (Object.keys(handler.processing).length !== 1) {\n    return;\n  }\n  var task = Object.values(handler.processing)[0]\n  if (task.options && typeof task.options.on === 'function') {\n    task.options.on(payload);\n  }\n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n       \n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            this.lastTask=task;\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      }else if(this.lastTask){\n        if (response.isEvent) {\n          if (this.lastTask.options && typeof this.lastTask.options.on === 'function') {\n            this.lastTask.options.on(response.payload);\n          }\n        }\n      }else if(this.globalOn){\n        if (response.isEvent) {\n          if (this.globalOn) {\n            this.globalOn(response.payload);\n          }\n        }\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      // terminate worker\n      return me.terminateAndNotify(true)\n        .then(function() {\n          throw error;\n        }, function(err) {\n          throw err;\n        });\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n    this.processing = Object.create(null);\n  }\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","module.exports = require(\"os\");","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","export const anyMap = new WeakMap();\nexport const eventsMap = new WeakMap();\nexport const producersMap = new WeakMap();\n","import {anyMap, producersMap, eventsMap} from './maps.js';\n\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\n\nconst isEventKeyType = key => typeof key === 'string' || typeof key === 'symbol' || typeof key === 'number';\n\nfunction assertEventName(eventName) {\n\tif (!isEventKeyType(eventName)) {\n\t\tthrow new TypeError('`eventName` must be a string, symbol, or number');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\treturn;\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = isEventKeyType(eventName) ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\treturn;\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t},\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tlet set = getEventProducers(instance, eventName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tconst producers = producersMap.get(instance);\n\t\t\tproducers.set(eventName, set);\n\t\t}\n\n\t\tset.add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift(),\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tconst set = getEventProducers(instance, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.delete(producer);\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tconst producers = producersMap.get(instance);\n\t\t\t\t\t\tproducers.delete(eventName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0\n\t\t\t\t? {done: true, value: await value}\n\t\t\t\t: {done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isMetaEvent = eventName => eventName === listenerAdded || eventName === listenerRemoved;\n\nfunction emitMetaEvent(emitter, eventName, eventData) {\n\tif (!isMetaEvent(eventName)) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tcanEmitMetaEvents = true;\n\t\temitter.emit(eventName, eventData);\n\t} finally {\n\t\tcanEmitMetaEvents = false;\n\t}\n}\n\nexport default class Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery(),\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty,\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\t// In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n\t\t// so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tif (typeof globalThis.process?.env !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tconst {env} = globalThis.process ?? {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\n\t\tproducersMap.get(this).set(anyProducer, new Set());\n\n\t\tthis.debug = options.debug ?? {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n\t\t\t\t\teventData = JSON.stringify(eventData);\n\t\t\t\t} catch {\n\t\t\t\t\teventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(',')}`;\n\t\t\t\t}\n\n\t\t\t\tif (typeof eventName === 'symbol' || typeof eventName === 'number') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener, {signal} = {}) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tlet set = getListeners(this, eventName);\n\t\t\tif (!set) {\n\t\t\t\tset = new Set();\n\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\tevents.set(eventName, set);\n\t\t\t}\n\n\t\t\tset.add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\tconst off = () => {\n\t\t\tthis.off(eventNames, listener);\n\t\t\tsignal?.removeEventListener('abort', off);\n\t\t};\n\n\t\tsignal?.addEventListener('abort', off, {once: true});\n\n\t\tif (signal?.aborted) {\n\t\t\toff();\n\t\t}\n\n\t\treturn off;\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tconst set = getListeners(this, eventName);\n\t\t\tif (set) {\n\t\t\t\tset.delete(listener);\n\t\t\t\tif (set.size === 0) {\n\t\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\t\tevents.delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames, predicate) {\n\t\tif (predicate !== undefined && typeof predicate !== 'function') {\n\t\t\tthrow new TypeError('predicate must be a function');\n\t\t}\n\n\t\tlet off_;\n\n\t\tconst promise = new Promise(resolve => {\n\t\t\toff_ = this.on(eventNames, data => {\n\t\t\t\tif (predicate && !predicate(data)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\toff_();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\n\t\tpromise.off = off_;\n\t\treturn promise;\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isMetaEvent(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener, {signal} = {}) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\temitMetaEvent(this, listenerAdded, {listener});\n\n\t\tconst offAny = () => {\n\t\t\tthis.offAny(listener);\n\t\t\tsignal?.removeEventListener('abort', offAny);\n\t\t};\n\n\t\tsignal?.addEventListener('abort', offAny, {once: true});\n\n\t\tif (signal?.aborted) {\n\t\t\toffAny();\n\t\t}\n\n\t\treturn offAny;\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\temitMetaEvent(this, listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tconst set = getListeners(this, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.clear();\n\t\t\t\t}\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\t\t\t\tif (producers) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const [eventName, listeners] of eventsMap.get(this).entries()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t\teventsMap.get(this).delete(eventName);\n\t\t\t\t}\n\n\t\t\t\tfor (const [eventName, producers] of producersMap.get(this).entries()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t\tproducersMap.get(this).delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tcount += anyMap.get(this).size\n\t\t\t\t\t+ (getListeners(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this)?.size ?? 0);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eventName !== undefined) {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// import { Param, param2raw, ServiceItem } from '../views/Uds/service'\r\nimport { v4 } from 'uuid'\r\nimport { CAN_ADDR_FORMAT, CAN_ID_TYPE, CanAddr, CanBaseInfo, CanVendor } from './can'\r\nimport { EthBaseInfo, EthAddr, EntityAddr } from './doip'\r\nimport { LinAddr, LinBaseInfo } from './lin'\r\nimport { SomeipInfo } from './someip'\r\n\r\nexport type DataType = 'NUM' | 'ARRAY' | 'ASCII' | 'UNICODE' | 'FLOAT' | 'DOUBLE' | 'FILE'\r\nexport type HardwareType = 'can' | 'lin' | 'eth' | 'pwm' | 'someip'\r\n//serviceDetail所有的key作为serviceId\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport interface ServiceItem {\r\n  id: string\r\n  name: string\r\n  serviceId: ServiceId\r\n  subfunc?: string\r\n  suppress?: boolean\r\n  autoSubfunc?: boolean\r\n  desc?: string\r\n  params: Param[]\r\n  respParams: Param[]\r\n  isNegativeResponse?: boolean\r\n  nrc?: number\r\n  generateConfigs?: Record<string, string>\r\n}\r\n// 使用泛型简化定义\r\n\r\nexport interface Param {\r\n  id: string\r\n  name: string\r\n  longName?: string\r\n  desc?: string\r\n  type: DataType\r\n  value: Buffer\r\n  phyValue: any\r\n  bitLen: number\r\n  bitPos?: number\r\n  meta?: {\r\n    type: string\r\n  }\r\n  deletable?: boolean\r\n  editable?: boolean\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport type ServiceId =\r\n  | '0x10'\r\n  | '0x11'\r\n  | '0x27'\r\n  | '0x28'\r\n  | '0x29'\r\n  | '0x3E'\r\n  | '0x83'\r\n  | '0x84'\r\n  | '0x85'\r\n  | '0x22'\r\n  | '0x23'\r\n  | '0x24'\r\n  | '0x2A'\r\n  | '0x2C'\r\n  | '0x2E'\r\n  | '0x3D'\r\n  | '0x14'\r\n  | '0x87'\r\n  | '0x19'\r\n  | '0x2F'\r\n  | '0x31'\r\n  | '0x34'\r\n  | '0x35'\r\n  | '0x36'\r\n  | '0x37'\r\n  | '0x38'\r\n  | 'Job'\r\n\r\nexport type ServiceDetailItem = {\r\n  name: string\r\n  hasSubFunction: boolean\r\n  fixedParam?: boolean\r\n  desc?: string\r\n  buildInScript?: string\r\n  defaultParams: {\r\n    param: Param\r\n    enum?: { name: string; value: string }[]\r\n  }[]\r\n  defaultRespParams: {\r\n    param: Param\r\n    enum?: { name: string; value: string }[]\r\n  }[]\r\n}\r\nexport type ServiceDetial = Record<ServiceId, ServiceDetailItem>\r\nexport function splitStr2(str: string) {\r\n  const result: string[] = []\r\n  for (let i = 0; i < str.length; i += 2) {\r\n    result.push(str.substring(i, i + 2))\r\n  }\r\n  return result.join(' ')\r\n}\r\n\r\nexport function checkServiceId(serviceId: ServiceId | undefined, need: ('job' | 'uds')[]) {\r\n  if (!serviceId) return false\r\n\r\n  if (need.includes('job')) {\r\n    if (!serviceId.startsWith('0x')) {\r\n      return true\r\n    }\r\n  }\r\n  if (need.includes('uds')) {\r\n    if (serviceId.startsWith('0x')) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function param2str(param: Param): string {\r\n  return param.phyValue.toString()\r\n}\r\nexport function param2raw(param: Param): Buffer {\r\n  return Buffer.from(param.value)\r\n}\r\nconst maxSIze = 65536\r\nfunction reallocBuffer(buffer: Buffer, len: number) {\r\n  const newBuffer = Buffer.alloc(len)\r\n  buffer.copy(newBuffer, 0, 0, buffer.length)\r\n  return newBuffer\r\n}\r\nexport function getParamBuffer(params: Param[]) {\r\n  let allLen = 0\r\n  let buffer = Buffer.alloc(maxSIze)\r\n  for (const p of params) {\r\n    const t = param2raw(p)\r\n    const len = Math.ceil(p.bitLen / 8)\r\n    if (allLen + len > maxSIze) {\r\n      buffer = reallocBuffer(buffer, (allLen + len) * 2)\r\n    }\r\n    t.copy(buffer, allLen)\r\n    allLen += len\r\n  }\r\n\r\n  return buffer.subarray(0, allLen)\r\n}\r\n\r\nexport function getTxPdu(service: ServiceItem) {\r\n  return Buffer.concat([Buffer.from([Number(service.serviceId)]), getParamBuffer(service.params)])\r\n}\r\n\r\nexport function getRxPdu(service: ServiceItem) {\r\n  const buffer = Buffer.alloc(maxSIze)\r\n\r\n  if (service.isNegativeResponse) {\r\n    buffer[0] = 0x7f\r\n    buffer[1] = Number(service.serviceId)\r\n    buffer[2] = service.nrc || 0x00\r\n    return buffer.subarray(0, 3)\r\n  }\r\n  return Buffer.concat([\r\n    Buffer.from([Number(service.serviceId) + 0x40]),\r\n    getParamBuffer(service.respParams)\r\n  ])\r\n}\r\nexport function applyBuffer(service: ServiceItem, data: Buffer, isReq: boolean) {\r\n  if (!data || data.length === 0) {\r\n    return\r\n  }\r\n  if (data[0] == 0x7f) {\r\n    if (!isReq) {\r\n      //Negative response\r\n      if (data[1] != Number(service.serviceId)) {\r\n        throw new Error(\r\n          `serviceId not match, expect ${service.serviceId} but got 0x${data[1].toString(16)}`\r\n        )\r\n      }\r\n      service.isNegativeResponse = true\r\n      service.nrc = data[2]\r\n    }\r\n    return\r\n  }\r\n  let sid = data[0]\r\n  if (!isReq) {\r\n    sid -= 0x40\r\n  }\r\n\r\n  if (sid != Number(service.serviceId)) {\r\n    throw new Error(\r\n      `serviceId not match, expect ${service.serviceId} but got 0x${sid.toString(16)}`\r\n    )\r\n  }\r\n  const params = isReq ? service.params : service.respParams\r\n  /* remove left param */\r\n  if (params.length > 0) {\r\n    const lastParam = params[params.length - 1]\r\n    if (lastParam.name == '__left') {\r\n      params.pop()\r\n    }\r\n  }\r\n  let len = 1\r\n  for (const param of params) {\r\n    const paramLen = Math.ceil(param.bitLen / 8)\r\n    if (len < data.length) {\r\n      const subData = data.subarray(len, len + paramLen)\r\n      //如果 subData 的长度小于paramLen，就跳过\r\n      if (subData.length < paramLen) {\r\n        return\r\n      }\r\n      paramSetValRaw(param, subData)\r\n    }\r\n    len += paramLen\r\n  }\r\n  //append left to last param\r\n  if (len < data.length) {\r\n    const param: Param = {\r\n      id: v4(),\r\n      name: '__left',\r\n      type: 'ARRAY',\r\n      value: Buffer.alloc(0),\r\n      phyValue: '',\r\n      bitLen: (data.length - len) * 8\r\n    }\r\n    paramSetValRaw(param, data.subarray(len))\r\n    params.push(param)\r\n  }\r\n}\r\nexport function getTxPduStr(service: ServiceItem) {\r\n  const str: string[] = [\r\n    Buffer.from([Number(service.serviceId)])\r\n      .toString('hex')\r\n      .toUpperCase()\r\n  ]\r\n\r\n  for (let i = 0; i < service.params.length; i++) {\r\n    const pa = service.params[i]\r\n    const s = param2raw(pa)\r\n      .toString('hex')\r\n      .toUpperCase()\r\n      .padStart(pa.bitLen / 4, '0')\r\n\r\n    str.push(splitStr2(s))\r\n  }\r\n  return str\r\n}\r\nexport function getRxPduStr(service: ServiceItem) {\r\n  const str: string[] = [\r\n    Buffer.from([Number(service.serviceId) + 0x40])\r\n      .toString('hex')\r\n      .toUpperCase()\r\n  ]\r\n  if (service.suppress) {\r\n    return ['SUPPRESS']\r\n  }\r\n  for (let i = 0; i < service.respParams.length; i++) {\r\n    const pa = service.respParams[i]\r\n    const s = param2raw(pa)\r\n      .toString('hex')\r\n      .toUpperCase()\r\n      .padStart(pa.bitLen / 4, '0')\r\n    str.push(splitStr2(s))\r\n  }\r\n  /* convert to hex */\r\n  return str\r\n}\r\nexport function param2len(param: Param): number {\r\n  return Math.ceil(param.bitLen / 8)\r\n}\r\n\r\nexport function paramSetVal(param: Param, str: string | number) {\r\n  switch (param.type) {\r\n    case 'NUM':\r\n      {\r\n        const v = Number(str)\r\n        if (Number.isNaN(v)) {\r\n          throw new Error('value should be a number')\r\n        }\r\n        const byte = Math.floor(param.bitLen / 8)\r\n        const pow = Math.pow(2, byte * 8)\r\n        if (v >= 0 && v < pow) {\r\n          param.phyValue = v\r\n          //v to hex string, 空格隔开\r\n          param.value = Buffer.alloc(byte)\r\n          //bit-endian\r\n          for (let i = 0; i < byte; i++) {\r\n            param.value.writeUInt8((v >> (8 * i)) & 0xff, byte - i - 1)\r\n          }\r\n        } else {\r\n          throw new Error(`value should be in [0,${pow - 1}]`)\r\n        }\r\n      }\r\n      break\r\n    case 'ARRAY':\r\n      {\r\n        const byte = Math.floor(param.bitLen / 8)\r\n\r\n        if (!str) {\r\n          param.phyValue = ''\r\n          param.value = Buffer.alloc(0)\r\n          break\r\n        }\r\n\r\n        //regex check hex string like '00 F4 33 5a' 中间必须要有空格，每个最大2个字符串\r\n        if (!/^[0-9a-fA-F]{2}( [0-9a-fA-F]{2})*$/.test(str.toString())) {\r\n          throw new Error('value should be a 00 F4 33 5a')\r\n        }\r\n\r\n        const s = str.toString().split(' ')\r\n        if (s.length > byte) {\r\n          throw new Error(`value length ${s.length} should less than ${byte}`)\r\n        }\r\n        for (let i = 0; i < s.length; i++) {\r\n          const v = Number('0x' + s[i])\r\n          if (Number.isNaN(v)) {\r\n            throw new Error('value should be a 00 F4 33 5a')\r\n          }\r\n          if (v < 0 && v >= 256) {\r\n            throw new Error(`value[${i}] should be in [0,255]`)\r\n          }\r\n        }\r\n        param.phyValue = str.toString()\r\n        param.value = Buffer.from(s.map((item) => parseInt(item, 16)))\r\n      }\r\n      break\r\n    case 'FILE':\r\n    case 'ASCII': {\r\n      const byte = Math.floor(param.bitLen / 8)\r\n      if (str.toString().length > byte) {\r\n        throw new Error(`value length ${str.toString().length} should less than ${byte}`)\r\n      }\r\n      param.phyValue = str.toString()\r\n      //hex string 空格隔开\r\n      param.value = Buffer.from(str.toString(), 'ascii')\r\n\r\n      break\r\n    }\r\n    case 'UNICODE': {\r\n      const byte = Math.floor(param.bitLen / 8)\r\n      const tb = Buffer.from(str.toString(), 'utf-8')\r\n      if (tb.length > byte) {\r\n        throw new Error(`value length ${tb.length} should less than ${byte}`)\r\n      }\r\n      param.phyValue = str.toString()\r\n      //hex string 空格隔开\r\n      param.value = tb\r\n      // console.log(param.value)\r\n      break\r\n    }\r\n    case 'FLOAT':\r\n      {\r\n        const v = Number(str)\r\n        if (Number.isNaN(v)) {\r\n          throw new Error('value should be a number')\r\n        }\r\n        if (v === Infinity || v === -Infinity) {\r\n          throw new Error('value should not be Infinity')\r\n        }\r\n        const b = Buffer.alloc(4).fill(0)\r\n        b.writeFloatBE(v, 0)\r\n        param.phyValue = v\r\n        //v to hex string, 空格隔开\r\n        param.value = b\r\n      }\r\n      break\r\n    case 'DOUBLE': {\r\n      const v = Number(str)\r\n      if (Number.isNaN(v)) {\r\n        throw new Error('value should be a number')\r\n      }\r\n      if (v === Infinity || v === -Infinity) {\r\n        throw new Error('value should not be Infinity')\r\n      }\r\n      const d = Buffer.alloc(8).fill(0)\r\n      d.writeDoubleBE(v, 0)\r\n      param.phyValue = v\r\n      //v to hex string, 空格隔开\r\n      param.value = d\r\n      break\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport function paramSetValRaw(param: Param, val: Buffer) {\r\n  const byte = Math.ceil(param.bitLen / 8)\r\n  if (val.length > byte) {\r\n    throw new Error(`value length ${val.length} should less than ${byte}`)\r\n  }\r\n\r\n  switch (param.type) {\r\n    case 'NUM': {\r\n      let v = 0\r\n      for (let i = 0; i < byte; i++) {\r\n        v = (v << 8) | val.readUInt8(i)\r\n      }\r\n      param.phyValue = v\r\n      param.value = val\r\n      break\r\n    }\r\n\r\n    case 'ARRAY': {\r\n      param.phyValue = splitStr2(val.toString('hex').padStart(byte * 2, '0'))\r\n      param.value = val\r\n      break\r\n    }\r\n\r\n    case 'ASCII': {\r\n      param.phyValue = val.toString('ascii')\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'UNICODE': {\r\n      param.phyValue = val.toString('utf-8')\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'FLOAT': {\r\n      param.phyValue = val.readFloatBE(0)\r\n      param.value = val\r\n      break\r\n    }\r\n    case 'DOUBLE': {\r\n      param.phyValue = val.readDoubleBE(0)\r\n      param.value = val\r\n      break\r\n    }\r\n    default:\r\n      break\r\n  }\r\n  param.value = val\r\n}\r\n\r\nexport function paramSetSize(param: Param, bitSize: number) {\r\n  const byte = Math.ceil(bitSize / 8)\r\n  const lastByte = Math.ceil(param.bitLen / 8)\r\n  const minLen = Math.min(byte, lastByte)\r\n  param.bitLen = bitSize\r\n  const newValue = Buffer.alloc(byte).fill(0)\r\n  //copy value to new buffer\r\n  param.value.copy(newValue, 0, 0, minLen)\r\n  param.value = newValue\r\n}\r\nexport interface SequenceItem {\r\n  enable: boolean\r\n  checkResp: boolean\r\n  retryNum: number\r\n  addressIndex: number\r\n  failBehavior: 'stop' | 'continue'\r\n  serviceId: string\r\n  delay: number\r\n}\r\n\r\nexport interface Sequence {\r\n  name: string\r\n  services: SequenceItem[]\r\n}\r\n\r\nexport interface Project {\r\n  device: string\r\n  scriptFileName: string\r\n}\r\n\r\nexport interface SubFunction {\r\n  name: string\r\n  subFunction: string\r\n}\r\nexport interface UdsInfo {\r\n  pTime: number\r\n  pExtTime: number\r\n  s3Time: number\r\n  testerPresentEnable: boolean\r\n  testerPresentSpecialService?: string\r\n  testerPresentAddrIndex?: number\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport interface UdsAddress {\r\n  type: HardwareType\r\n  canAddr?: CanAddr\r\n  ethAddr?: EthAddr\r\n  linAddr?: LinAddr\r\n}\r\n\r\nexport function getUdsAddrName(item?: UdsAddress) {\r\n  if (item) {\r\n    if (item.type == 'can') {\r\n      return item.canAddr?.name || ''\r\n    } else if (item.type == 'eth') {\r\n      return item.ethAddr?.name || ''\r\n    } else if (item.type == 'lin') {\r\n      return item.linAddr?.name || ''\r\n    }\r\n  }\r\n  return ''\r\n}\r\nexport function getUdsDeviceName(item: UdsDevice) {\r\n  if (item.type == 'can') {\r\n    return item.canDevice?.name || ''\r\n  }\r\n  return ''\r\n}\r\n\r\nexport interface PwmDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n}\r\n\r\nexport interface PwmBaseInfo {\r\n  id: string\r\n  device: PwmDevice\r\n  freq: number\r\n  initDuty: number\r\n  polarity: boolean\r\n  resetStatus: boolean\r\n  vendor: CanVendor\r\n  name: string\r\n  database?: string\r\n}\r\n\r\nexport interface UdsDevice {\r\n  type: HardwareType\r\n  canDevice?: CanBaseInfo\r\n  ethDevice?: EthBaseInfo\r\n  linDevice?: LinBaseInfo\r\n  pwmDevice?: PwmBaseInfo\r\n  someipDevice?: SomeipInfo\r\n}\r\n","import EventEmitter from 'events'\r\nimport { cloneDeep } from 'lodash'\r\n// import type { CanLOG } from '../log'\r\n\r\nexport interface CanBitrate {\r\n  freq: number\r\n  timeSeg1: number\r\n  timeSeg2: number\r\n  sjw: number\r\n  preScaler: number\r\n  clock?: string\r\n  zlgSpec?: string\r\n}\r\n\r\nexport type CanVendor =\r\n  | 'peak'\r\n  | 'simulate'\r\n  | 'zlg'\r\n  | 'kvaser'\r\n  | 'toomoss'\r\n  | 'vector'\r\n  | 'slcan'\r\n  | 'ecubus'\r\n  | 'candle'\r\nexport interface CanBaseInfo {\r\n  id: string\r\n  handle: any\r\n  name: string\r\n  vendor: CanVendor\r\n  canfd: boolean\r\n  bitrate: CanBitrate\r\n  bitratefd?: CanBitrate\r\n  silent?: boolean\r\n  database?: string\r\n  toomossRes?: boolean\r\n  zlgRes?: boolean\r\n  candleRes?: boolean\r\n  slcanDelay?: number\r\n}\r\n\r\n/**\r\n * Represents a CAN (Controller Area Network) message.\r\n *\r\n * @category CAN\r\n */\r\nexport interface CanMessage {\r\n  /**\r\n   * The name of the CAN message.\r\n   */\r\n  name?: string\r\n  /**\r\n   * The device associated with the CAN message.\r\n   */\r\n  device?: string\r\n\r\n  /**\r\n   * The direction of the CAN message, either 'IN' for incoming or 'OUT' for outgoing.\r\n   */\r\n  dir: 'IN' | 'OUT'\r\n\r\n  /**\r\n   * The data payload of the CAN message.\r\n   */\r\n  data: Buffer\r\n\r\n  /**\r\n   * The timestamp of when the CAN message was sent/recv.\r\n   */\r\n  ts?: number\r\n\r\n  /**\r\n   * The identifier of the CAN message.\r\n   */\r\n  id: number\r\n\r\n  /**\r\n   * The type of the CAN message.\r\n   */\r\n  msgType: CanMsgType\r\n\r\n  /**\r\n   * Indicates whether the CAN message is simulated.\r\n   * This property is optional.\r\n   */\r\n  isSimulate?: boolean\r\n  /**\r\n   * The database name of the CAN message.\r\n   */\r\n  database?: string\r\n  /**\r\n   * The children signals of the CAN message.\r\n   * internal use\r\n   */\r\n  children?: {\r\n    name: string\r\n    data: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) ID types.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ID_TYPE {\r\n  STANDARD = 'STANDARD',\r\n  EXTENDED = 'EXTENDED'\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) address types.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ADDR_TYPE {\r\n  PHYSICAL = 'PHYSICAL',\r\n  FUNCTIONAL = 'FUNCTIONAL'\r\n}\r\n\r\n/**\r\n * Enumeration representing different CAN (Controller Area Network) address formats.\r\n *\r\n * @category CAN\r\n * @enum {string}\r\n * @readonly\r\n */\r\nexport enum CAN_ADDR_FORMAT {\r\n  NORMAL = 'NORMAL',\r\n  FIXED_NORMAL = 'NORMAL_FIXED',\r\n  EXTENDED = 'EXTENDED',\r\n  MIXED = 'MIXED',\r\n  ENHANCED = 'ENHANCED'\r\n}\r\n\r\n/**\r\n * Represents a CAN (Controller Area Network) message type.\r\n * @category CAN\r\n\r\n */\r\nexport interface CanMsgType {\r\n  /**\r\n   * The type of CAN ID.\r\n   */\r\n  idType: CAN_ID_TYPE\r\n\r\n  /**\r\n   * Indicates if Bit Rate Switching (BRS) is enabled.\r\n   */\r\n  brs: boolean\r\n\r\n  /**\r\n   * Indicates if CAN FD (Flexible Data-rate) is used.\r\n   */\r\n  canfd: boolean\r\n\r\n  /**\r\n   * Indicates if the message is a remote frame.\r\n   */\r\n  remote: boolean\r\n\r\n  /**\r\n   * Optional unique identifier for the message.\r\n   */\r\n  uuid?: string\r\n}\r\n\r\nexport enum CAN_ERROR_ID {\r\n  CAN_BUS_ERROR,\r\n  CAN_READ_TIMEOUT,\r\n  CAN_BUS_BUSY,\r\n  CAN_BUS_CLOSED,\r\n  CAN_INTERNAL_ERROR,\r\n  CAN_PARAM_ERROR,\r\n  CAN_DRIVER_SILENT\r\n}\r\n\r\nconst canErrorMap: Record<CAN_ERROR_ID, string> = {\r\n  [CAN_ERROR_ID.CAN_BUS_ERROR]: 'bus error',\r\n  [CAN_ERROR_ID.CAN_READ_TIMEOUT]: 'read timeout',\r\n  [CAN_ERROR_ID.CAN_BUS_BUSY]: 'bus busy',\r\n  [CAN_ERROR_ID.CAN_INTERNAL_ERROR]: 'dll lib internal error',\r\n  [CAN_ERROR_ID.CAN_BUS_CLOSED]: 'bus closed',\r\n  [CAN_ERROR_ID.CAN_PARAM_ERROR]: 'param error',\r\n  [CAN_ERROR_ID.CAN_DRIVER_SILENT]: 'driver silent'\r\n}\r\n\r\nexport function getTsUs() {\r\n  const hrtime = process.hrtime()\r\n  const seconds = hrtime[0]\r\n  const nanoseconds = hrtime[1]\r\n  return seconds * 1000000 + Math.floor(nanoseconds / 1000)\r\n}\r\n\r\nexport interface CanInterAction {\r\n  trigger: {\r\n    type: 'manual' | 'periodic'\r\n    period?: number\r\n    onKey?: string\r\n  }\r\n  name: string\r\n  database?: string\r\n  id: string\r\n  channel: string\r\n  type: 'canfd' | 'can' | 'ecan' | 'ecanfd'\r\n  dlc: number\r\n  brs?: boolean\r\n  remote?: boolean\r\n  data: string[]\r\n}\r\nexport function formatError(error: Error) {\r\n  // Get error stack\r\n  const stack = error.stack || ''\r\n\r\n  // Get first stack line (usually contains error location)\r\n  const locationLine = stack.split('\\n')[1] || ''\r\n\r\n  // Extract file location info\r\n  const locationMatch = locationLine.match(/webpack:\\\\ecubuspro\\\\(.*):(\\d+):(\\d+)\\)$/)\r\n\r\n  let location = ''\r\n  if (locationMatch) {\r\n    const [, file, line, column] = locationMatch\r\n    //\r\n    // Convert webpack path to GitHub URL，#L${line}C${column}-L${line}C${column}\r\n    location = `https://github.com/ecubus/EcuBus-Pro/blob/master/${file}#L${line}C${column}`\r\n  } else {\r\n    // at listener (D:\\code\\ecubus-pro\\resources\\examples\\test_simple\\node.ts:5:11)\r\n    const newMatch = locationLine.match(/\\((.*):(\\d+):(\\d+)\\)/)\r\n    if (newMatch) {\r\n      const [, file, line, column] = newMatch\r\n      location = `file://${file}:${line}:${column}`\r\n    } else {\r\n      location = locationLine\r\n    }\r\n  }\r\n\r\n  // Return simplified error message\r\n  return `Error: ${error.message}, Pos: ${location}`\r\n}\r\n\r\nexport class CanError extends Error {\r\n  errorId: CAN_ERROR_ID\r\n  msgType: CanMsgType\r\n  data?: Buffer\r\n  constructor(errorId: CAN_ERROR_ID, msgType: CanMsgType, data?: Buffer, extMsg?: string) {\r\n    super(canErrorMap[errorId] + (extMsg ? `,${extMsg}` : ''))\r\n    this.errorId = errorId\r\n    this.msgType = msgType\r\n    this.data = data\r\n  }\r\n}\r\n\r\n/**\r\n * @category CAN\r\n */\r\nexport interface CanAddr extends CanMsgType {\r\n  name: string\r\n  addrFormat: CAN_ADDR_FORMAT\r\n  addrType: CAN_ADDR_TYPE\r\n  desc?: string\r\n  SA: string\r\n  TA: string\r\n  AE: string\r\n  canIdTx: string\r\n  canIdRx: string\r\n  nAs: number\r\n  nAr: number\r\n  nBs: number\r\n  nCr: number\r\n  nBr?: number\r\n  nCs?: number\r\n  stMin: number\r\n  bs: number\r\n  maxWTF: number\r\n  uuid?: string\r\n  dlc: number\r\n  padding: boolean\r\n  paddingValue: string\r\n}\r\n\r\nexport interface CanDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n  candleRes?: boolean\r\n}\r\n\r\nexport interface CanEventMap {\r\n  sendTp: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: CAN_ID_TYPE\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  sendBase: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: CAN_ID_TYPE\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  recvTp: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  recvBase: [\r\n    info: {\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n    }\r\n  ]\r\n  errorTp: [\r\n    info: {\r\n      dir: 'send' | 'recv'\r\n      data: Buffer\r\n      ts: number\r\n      id: number\r\n      idType: string\r\n      canfd: boolean\r\n      brs: boolean\r\n      remote: boolean\r\n      msg: string\r\n    }\r\n  ]\r\n}\r\n\r\nexport function getLenByDlc(dlc: number, canFd: boolean) {\r\n  const map: Record<number, number> = {\r\n    0: 8,\r\n    1: 8,\r\n    2: 8,\r\n    3: 8,\r\n    4: 8,\r\n    5: 8,\r\n    6: 8,\r\n    7: 8,\r\n    8: 8,\r\n    9: 8,\r\n    10: 8,\r\n    11: 8,\r\n    12: 8,\r\n    13: 8,\r\n    14: 8,\r\n    15: 8\r\n  }\r\n  const mapFd: Record<number, number> = {\r\n    0: 8,\r\n    1: 8,\r\n    2: 8,\r\n    3: 8,\r\n    4: 8,\r\n    5: 8,\r\n    6: 8,\r\n    7: 8,\r\n    8: 8,\r\n    9: 12,\r\n    10: 16,\r\n    11: 20,\r\n    12: 24,\r\n    13: 32,\r\n    14: 48,\r\n    15: 64\r\n  }\r\n  if (canFd) {\r\n    return mapFd[dlc] || 0\r\n  } else {\r\n    return map[dlc] || 0\r\n  }\r\n}\r\nexport function getDlcByLen(len: number, canFd: boolean) {\r\n  const map: Record<number, number> = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8\r\n  }\r\n  const mapFd: Record<number, number> = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    12: 9,\r\n    16: 10,\r\n    20: 11,\r\n    24: 12,\r\n    32: 13,\r\n    48: 14,\r\n    64: 15\r\n  }\r\n\r\n  if (canFd) {\r\n    return mapFd[len] || 0\r\n  } else {\r\n    return map[len] || 0\r\n  }\r\n}\r\nexport function addrToId(addr: CanAddr): number {\r\n  let id = Number(addr.canIdTx)\r\n  if (addr.addrFormat == CAN_ADDR_FORMAT.FIXED_NORMAL) {\r\n    id = calcCanIdNormalFixed(Number(addr.SA), Number(addr.TA), addr.addrType)\r\n  } else if (addr.addrFormat == CAN_ADDR_FORMAT.MIXED) {\r\n    if (addr.idType == CAN_ID_TYPE.EXTENDED) {\r\n      id = calcCanIdMixed(Number(addr.SA), Number(addr.TA), addr.addrType)\r\n    }\r\n  }\r\n  return id\r\n}\r\nexport function addrToStr(addr: CanAddr): string {\r\n  const cAddr = cloneDeep(addr)\r\n  delete cAddr.uuid\r\n  const jsonString = JSON.stringify(cAddr, Object.keys(cAddr).sort())\r\n  return jsonString\r\n}\r\n\r\nexport function swapAddr(addr: CanAddr): CanAddr {\r\n  const cloneAddr = cloneDeep(addr)\r\n  const tmp = cloneAddr.SA\r\n  cloneAddr.SA = cloneAddr.TA\r\n  cloneAddr.TA = tmp\r\n  const tmpid = cloneAddr.canIdTx\r\n  cloneAddr.canIdTx = cloneAddr.canIdRx\r\n  cloneAddr.canIdRx = tmpid\r\n  return cloneAddr\r\n}\r\nexport function calcCanIdMixed(sa: number, ta: number, addrType: CAN_ADDR_TYPE) {\r\n  if (addrType === CAN_ADDR_TYPE.PHYSICAL) {\r\n    //29bit 110|0|0|206|N_TA|N_SA\r\n    return 0x18ce0000 | (ta << 8) | sa\r\n  } else {\r\n    //29bit 110|0|0|205|N_TA|N_SA\r\n    return 0x18cd0000 | (ta << 8) | sa\r\n  }\r\n}\r\n\r\nexport function calcCanIdNormalFixed(sa: number, ta: number, addrType: CAN_ADDR_TYPE) {\r\n  if (addrType === CAN_ADDR_TYPE.PHYSICAL) {\r\n    //29bit 110|0|0|218|N_TA|N_SA\r\n    return 0x18da0000 | (ta << 8) | sa\r\n  } else {\r\n    //29bit 110|0|0|219|N_TA|N_SA\r\n    return 0x18db0000 | (ta << 8) | sa\r\n  }\r\n}\r\n\r\n","// 条件导入sa.node，只在Windows平台导入\r\nlet saNode: any\r\nif (process.platform == 'win32') {\r\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n  saNode = require('./build/Release/sa.node')\r\n} else {\r\n  // 非Windows平台提供空实现\r\n  saNode = {\r\n    SeedKey: class {\r\n      constructor() {}\r\n      IsLoaded() {\r\n        return false\r\n      }\r\n      LoadDLL() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n      GenerateKeyExOpt() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n      GenerateKeyEx() {\r\n        throw new Error('SecureAccessDll is only available on Windows platform')\r\n      }\r\n    },\r\n    UINT8_ARRAY: class {\r\n      constructor() {}\r\n      setitem() {}\r\n      cast() {\r\n        return this\r\n      }\r\n    },\r\n    INT8_ARRAY: class {\r\n      constructor() {}\r\n      setitem() {}\r\n      cast() {\r\n        return this\r\n      }\r\n    },\r\n    UINT32_PTR: class {\r\n      constructor() {}\r\n      assign() {}\r\n      value() {\r\n        return 0\r\n      }\r\n      cast() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport default class SecureAccessDll {\r\n  _ref: any\r\n  constructor(dllPath: string) {\r\n    this._ref = new saNode.SeedKey()\r\n    // console.log(dllPath)\r\n    this.loadDll(dllPath)\r\n    if (!this._ref.IsLoaded()) {\r\n      throw new Error('Failed to load DLL')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates a key with extended options.\r\n   *\r\n   * @param ipSeedArray - A buffer containing the seed array, for c: = ipSeedArray + iSeedArraySize\r\n   * @param iSecurityLevel - The security level to be used.\r\n   * @param ipVariant - A buffer containing the variant. for c: = ipVariant, size decide by vendor self\r\n   * @param ipOptions - A buffer containing the options. for c: = ipOptions, size decide by vendor self\r\n   * @param key - A buffer containing the input key.for c: = iopKeyArray + iMaxKeyArraySize\r\n   * @returns A buffer containing the generated key. Return is Buffer, for c: = iopKeyArray, length = oActualKeyArraySize\r\n   * @throws Will throw an error if the key generation fails.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   *\r\n   * const dllPath=path.join(__dirname,'GenerateKeyExOpt.dll')\r\n   * const sa=new SecureAccessDll(dllPath)\r\n   *\r\n   * const seed=sa.GenerateKeyExOpt(Buffer.from([1,2,3,4,5]),1,Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]))\r\n   * ```\r\n   *\r\n   */\r\n  GenerateKeyExOpt(\r\n    ipSeedArray: Buffer,\r\n    iSecurityLevel: number,\r\n    ipVariant: Buffer,\r\n    ipOptions: Buffer,\r\n    key: Buffer\r\n  ): Buffer {\r\n    const seedArray = new saNode.UINT8_ARRAY(ipSeedArray.length)\r\n    for (let i = 0; i < ipSeedArray.length; i++) {\r\n      seedArray.setitem(i, ipSeedArray.readUInt8(i))\r\n    }\r\n    const variant = new saNode.INT8_ARRAY(ipVariant.length)\r\n    for (let i = 0; i < ipVariant.length; i++) {\r\n      variant.setitem(i, ipVariant.readInt8(i))\r\n    }\r\n    const options = new saNode.INT8_ARRAY(ipOptions.length)\r\n    for (let i = 0; i < ipOptions.length; i++) {\r\n      options.setitem(i, ipOptions.readInt8(i))\r\n    }\r\n    const KeyArray = new saNode.UINT8_ARRAY(key.length)\r\n    for (let i = 0; i < key.length; i++) {\r\n      KeyArray.setitem(i, key.readUInt8(i))\r\n    }\r\n    const KeySize = new saNode.UINT32_PTR()\r\n    KeySize.assign(key.length)\r\n    const ret = this._ref.GenerateKeyExOpt(\r\n      seedArray.cast(),\r\n      ipSeedArray.length,\r\n      iSecurityLevel,\r\n      variant.cast(),\r\n      options.cast(),\r\n      KeyArray.cast(),\r\n      key.length,\r\n      KeySize.cast()\r\n    )\r\n    if (ret == 0) {\r\n      const retBuf = Buffer.alloc(KeySize.value())\r\n      for (let i = 0; i < KeySize.value(); i++) {\r\n        retBuf[i] = KeyArray.getitem(i)\r\n      }\r\n      return retBuf\r\n    } else {\r\n      throw new Error(`GenerateKeyExOpt failed with error code ${ret}`)\r\n    }\r\n  }\r\n  /**\r\n   * Generates a key with extended options.\r\n   *\r\n   * @param ipSeedArray - A buffer containing the seed array, for c: = ipSeedArray + iSeedArraySize\r\n   * @param iSecurityLevel - The security level to be used.\r\n   * @param ipVariant - A buffer containing the variant. for c: = ipVariant, size decide by vendor self\r\n   * @param key - A buffer containing the input key.for c: = ioKeyArray + iKeyArraySize\r\n   * @returns A buffer containing the generated key. Return is Buffer, for c: = ioKeyArray, length = oSize\r\n   * @throws Will throw an error if the key generation fails.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   *\r\n   * const dllPath=path.join(__dirname,'GenerateKeyEx.dll')\r\n   * const sa=new SecureAccessDll(dllPath)\r\n   *\r\n   *const seed=sa.GenerateKeyEx(Buffer.from([1,2,3,4,5]),1,Buffer.from([1,2,3,4,5]),Buffer.from([1,2,3,4,5]))\r\n   * ```\r\n   *\r\n   */\r\n  GenerateKeyEx(\r\n    ipSeedArray: Buffer,\r\n    iSecurityLevel: number,\r\n    ipVariant: Buffer,\r\n    key: Buffer\r\n  ): Buffer {\r\n    const seedArray = new saNode.UINT8_ARRAY(ipSeedArray.length)\r\n    for (let i = 0; i < ipSeedArray.length; i++) {\r\n      seedArray.setitem(i, ipSeedArray.readUInt8(i))\r\n    }\r\n    const variant = new saNode.INT8_ARRAY(ipVariant.length)\r\n    for (let i = 0; i < ipVariant.length; i++) {\r\n      variant.setitem(i, ipVariant.readInt8(i))\r\n    }\r\n\r\n    const KeyArray = new saNode.UINT8_ARRAY(key.length)\r\n    for (let i = 0; i < key.length; i++) {\r\n      KeyArray.setitem(i, key.readUInt8(i))\r\n    }\r\n    const KeySize = new saNode.UINT32_PTR()\r\n    KeySize.assign(key.length)\r\n    const ret = this._ref.GenerateKeyEx(\r\n      seedArray.cast(),\r\n      ipSeedArray.length,\r\n      iSecurityLevel,\r\n      variant.cast(),\r\n      KeyArray.cast(),\r\n      key.length,\r\n      KeySize.cast()\r\n    )\r\n    if (ret == 0) {\r\n      const retBuf = Buffer.alloc(KeySize.value())\r\n      for (let i = 0; i < KeySize.value(); i++) {\r\n        retBuf[i] = KeyArray.getitem(i)\r\n      }\r\n      return retBuf\r\n    } else {\r\n      throw new Error(`GenerateKeyEx failed with error code ${ret}`)\r\n    }\r\n  }\r\n  private loadDll(dllPath: string) {\r\n    this._ref.LoadDLL(dllPath)\r\n  }\r\n}\r\n\r\n","import { EventEmitter } from 'stream'\r\nimport { CanVendor } from './can'\r\nimport type { Frame, LDF } from 'src/renderer/src/database/ldfParse'\r\nimport { cloneDeep, isEqual } from 'lodash'\r\n\r\n// export type LinVendor = 'peak'\r\nexport interface LinDevice {\r\n  label: string\r\n  id: string\r\n  handle: any\r\n  serialNumber?: string\r\n  busy?: boolean\r\n  toomossVolt?: number\r\n  lincablePowerEnable?: boolean\r\n}\r\n\r\nexport interface LinBaseInfo {\r\n  id: string\r\n  device: LinDevice\r\n  baudRate: number\r\n  mode: LinMode\r\n  vendor: CanVendor\r\n  name: string\r\n  database?: string\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinDirection {\r\n  SEND = 'SEND',\r\n  RECV = 'RECV',\r\n  RECV_AUTO_LEN = 'RECV_AUTO_LEN'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinMode {\r\n  MASTER = 'MASTER',\r\n  SLAVE = 'SLAVE'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport enum LinChecksumType {\r\n  CLASSIC = 'CLASSIC',\r\n  ENHANCED = 'ENHANCED'\r\n}\r\n\r\nexport enum LIN_ERROR_ID {\r\n  LIN_BUS_ERROR,\r\n  LIN_READ_TIMEOUT,\r\n  LIN_BUS_BUSY,\r\n  LIN_BUS_CLOSED,\r\n  LIN_INTERNAL_ERROR,\r\n  LIN_PARAM_ERROR\r\n}\r\n\r\nconst linErrorMap: Record<LIN_ERROR_ID, string> = {\r\n  [LIN_ERROR_ID.LIN_BUS_ERROR]: 'bus error',\r\n  [LIN_ERROR_ID.LIN_READ_TIMEOUT]: 'read timeout',\r\n  [LIN_ERROR_ID.LIN_BUS_BUSY]: 'bus busy',\r\n  [LIN_ERROR_ID.LIN_INTERNAL_ERROR]: 'dll lib internal error',\r\n  [LIN_ERROR_ID.LIN_BUS_CLOSED]: 'bus closed',\r\n  [LIN_ERROR_ID.LIN_PARAM_ERROR]: 'param error'\r\n}\r\n\r\n/**\r\n * LinCable Error Inject Control. See {@link https://app.whyengineer.com/docs/um/hardware/lincable.html} for details.\r\n * @category LIN\r\n */\r\nexport interface LinCableErrorInject {\r\n  /**\r\n   * Break field length in bits\r\n   * @default 13\r\n   * @minimum 13\r\n   * @maximum 26\r\n   */\r\n  breakLength?: number\r\n\r\n  /**\r\n   * Break delimiter length in bits\r\n   * @default 1\r\n   * @minimum 0\r\n   * @maximum 14.6\r\n   */\r\n  breakDelLength?: number\r\n\r\n  /**\r\n   * Inter-byte space between sync byte field and identifier in bits\r\n   * @default 0\r\n   * @minimum 0\r\n   * @maximum 14\r\n   */\r\n  hInterLength?: number\r\n\r\n  /**\r\n   * Inter-byte spaces between data fields in bits. Array length must match data length.\r\n   * @default 0\r\n   * @minimum 0\r\n   * @maximum 4\r\n   */\r\n  dInterLength?: number[]\r\n\r\n  /**\r\n   * Custom sync byte value. Set to false to prevent master from sending sync.\r\n   * @default 0x55\r\n   */\r\n  syncVal?: number | false\r\n\r\n  /**\r\n   * Custom PID value. Set to false to prevent master from sending PID.\r\n   * @default getPID(frameId)\r\n   */\r\n  pid?: number | false\r\n\r\n  /**\r\n   * Fault injection configuration\r\n   */\r\n  errorInject?: {\r\n    /** Bit position to inject fault, starting from first break bit */\r\n    bit: number\r\n    /** Fault value: 1 for high, 0 for low */\r\n    value: 1 | 0\r\n  }\r\n\r\n  /**\r\n   * Override the checksum value\r\n   */\r\n  checkSum?: number\r\n}\r\n/**\r\n * @category LIN\r\n */\r\nexport interface LinMsg {\r\n  frameId: number\r\n  data: Buffer\r\n  direction: LinDirection\r\n  checksumType: LinChecksumType\r\n  checksum?: number\r\n  database?: string\r\n  device?: string\r\n  workNode?: string\r\n  name?: string\r\n  isEvent?: boolean\r\n  uuid?: string\r\n  ts?: number\r\n  /**\r\n   * The children signals of the CAN message.\r\n   * internal use\r\n   */\r\n  children?: {\r\n    name: string\r\n    data: string\r\n  }[]\r\n  /* advanced for ecubus lincable */\r\n  lincable?: LinCableErrorInject\r\n}\r\n\r\nexport class LinError extends Error {\r\n  errorId: LIN_ERROR_ID\r\n  msgType?: LinMsg\r\n\r\n  constructor(errorId: LIN_ERROR_ID, msg?: LinMsg, extMsg?: string) {\r\n    super(linErrorMap[errorId] + (extMsg ? `,${extMsg}` : ''))\r\n    this.errorId = errorId\r\n    this.msgType = msg\r\n  }\r\n}\r\nexport enum LIN_ADDR_TYPE {\r\n  PHYSICAL = 'PHYSICAL',\r\n  FUNCTIONAL = 'FUNCTIONAL'\r\n}\r\nexport enum LIN_SCH_TYPE {\r\n  DIAG_ONLY = 'DIAG_ONLY',\r\n  DIAG_INTERLEAVED = 'DIAG_INTERLEAVED'\r\n}\r\n\r\n/**\r\n * @category LIN\r\n */\r\nexport interface LinAddr {\r\n  name: string\r\n  addrType: LIN_ADDR_TYPE\r\n  nad: number\r\n  stMin: number\r\n  nAs: number\r\n  nCr: number\r\n  schType: LIN_SCH_TYPE\r\n}\r\n\r\nconst LinPidTable = [\r\n  0x80, 0xc1, 0x42, 0x03, 0xc4, 0x85, 0x06, 0x47, 0x08, 0x49, 0xca, 0x8b, 0x4c, 0x0d, 0x8e, 0xcf,\r\n  0x50, 0x11, 0x92, 0xd3, 0x14, 0x55, 0xd6, 0x97, 0xd8, 0x99, 0x1a, 0x5b, 0x9c, 0xdd, 0x5e, 0x1f,\r\n  0x20, 0x61, 0xe2, 0xa3, 0x64, 0x25, 0xa6, 0xe7, 0xa8, 0xe9, 0x6a, 0x2b, 0xec, 0xad, 0x2e, 0x6f,\r\n  0xf0, 0xb1, 0x32, 0x73, 0xb4, 0xf5, 0x76, 0x37, 0x78, 0x39, 0xba, 0xfb, 0x3c, 0x7d, 0xfe, 0xbf\r\n]\r\n\r\nexport function getPID(frameId: number) {\r\n  return LinPidTable[frameId]\r\n}\r\n\r\n/**\r\n * Calculate LIN frame checksum\r\n * @category LIN\r\n * @param data - Data bytes to calculate checksum for\r\n * @param checksumType - Type of checksum (CLASSIC for LIN 1.x or ENHANCED for LIN 2.x)\r\n * @param pid - Protected ID, required for enhanced checksum calculation\r\n * @returns Calculated checksum byte\r\n */\r\nexport function getCheckSum(data: Buffer, checksumType: LinChecksumType, pid?: number) {\r\n  let checksum = 0\r\n\r\n  if (checksumType === LinChecksumType.CLASSIC) {\r\n    // Classic checksum (LIN 1.x): sum all bytes with carry, then NOT\r\n    for (let i = 0; i < data.length; i++) {\r\n      checksum += data[i]\r\n      checksum = (checksum & 0xff) + (checksum >> 8)\r\n    }\r\n    checksum = ~checksum & 0xff\r\n  } else {\r\n    // Enhanced checksum (LIN 2.x): PID + data, sum with carry handling, then subtract from 0xFF\r\n    if (pid === undefined) throw new Error('pid required for enhanced checksum')\r\n    checksum = pid\r\n    for (let i = 0; i < data.length; i++) {\r\n      checksum += data[i]\r\n      checksum = (checksum & 0xff) + (checksum >> 8)\r\n    }\r\n    checksum = 0xff - checksum\r\n  }\r\n\r\n  return checksum\r\n}\r\n\r\nexport function getFrameData(db: LDF, frame: Frame): Buffer {\r\n  const data = Buffer.alloc(frame.frameSize)\r\n  for (const signal of frame.signals) {\r\n    const signalDef = cloneDeep(db.signals[signal.name])\r\n    if (!signalDef) continue\r\n\r\n    if (signalDef.singleType === 'ByteArray') {\r\n      // Handle byte array type signals\r\n      const initValues = (\r\n        signalDef.value != undefined ? signalDef.value : signalDef.initValue\r\n      ) as number[]\r\n      const bytesToCopy = Math.ceil(signalDef.signalSizeBits / 8)\r\n      initValues.reverse()\r\n      for (let i = 0; i < bytesToCopy && i < initValues.length; i++) {\r\n        const startBit = signal.offset + i * 8\r\n        const byteOffset = Math.floor(startBit / 8)\r\n        const bitOffset = startBit % 8\r\n\r\n        if (bitOffset === 0) {\r\n          // Aligned byte\r\n          data[byteOffset] = initValues[i]\r\n        } else {\r\n          // Unaligned byte\r\n          data[byteOffset] |= (initValues[i] << bitOffset) & 0xff\r\n          if (byteOffset + 1 < data.length) {\r\n            data[byteOffset + 1] = (initValues[i] >> (8 - bitOffset)) & 0xff\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // Handle scalar type signals - process bit by bit\r\n      const value = (signalDef.value != undefined ? signalDef.value : signalDef.initValue) as number\r\n      let tempValue = value\r\n\r\n      for (let i = 0; i < signalDef.signalSizeBits; i++) {\r\n        const targetBit = signal.offset + i\r\n        const byteOffset = Math.floor(targetBit / 8)\r\n        const bitOffset = targetBit % 8\r\n\r\n        if (byteOffset < data.length) {\r\n          // Clear bit\r\n          data[byteOffset] &= ~(1 << bitOffset)\r\n          // Set bit if needed\r\n          if ((tempValue & 1) === 1) {\r\n            data[byteOffset] |= 1 << bitOffset\r\n          }\r\n          tempValue >>= 1\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return data\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:assert\");","import { Frame, LDF, SignalEncodeType } from '../ldfParse'\r\n\r\nexport function getPhysicalValue(\r\n  rawValue: number,\r\n  encodingTypes: SignalEncodeType['encodingTypes'],\r\n  db: LDF\r\n): { numVal?: number; strVal?: string; usedEncode?: SignalEncodeType['encodingTypes'][0] } {\r\n  // 遍历所有编码类型\r\n  const result: {\r\n    numVal?: number\r\n    strVal?: string\r\n    usedEncode?: SignalEncodeType['encodingTypes'][0]\r\n  } = {\r\n    numVal: undefined,\r\n    strVal: undefined,\r\n    usedEncode: undefined\r\n  }\r\n  for (const encodingType of encodingTypes) {\r\n    switch (encodingType.type) {\r\n      case 'physicalValue': {\r\n        if (encodingType.physicalValue) {\r\n          const { minValue, maxValue, scale, offset } = encodingType.physicalValue\r\n          if (rawValue >= minValue && rawValue <= maxValue) {\r\n            const physValue = Number((scale * rawValue + offset).toFixed(3))\r\n            const tt = encodingType.physicalValue.textInfo\r\n              ? `${physValue}${encodingType.physicalValue.textInfo}`\r\n              : undefined\r\n            result.numVal = physValue\r\n            result.strVal = tt\r\n            result.usedEncode = encodingType\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'logicalValue': {\r\n        if (encodingType.logicalValue && encodingType.logicalValue.signalValue === rawValue) {\r\n          result.strVal = encodingType.logicalValue.textInfo || ''\r\n          result.usedEncode = encodingType\r\n        }\r\n        break\r\n      }\r\n      case 'bcdValue': {\r\n        // BCD编码：每4位表示一个十进制数字\r\n\r\n        ;(result.numVal = rawValue\r\n          .toString()\r\n          .split('')\r\n          .map(Number)\r\n          .reduce((acc, digit) => (acc << 4) | digit, 0)),\r\n          (result.usedEncode = encodingType)\r\n\r\n        break\r\n      }\r\n      case 'asciiValue': {\r\n        // ASCII编码：直接转换为字符串\r\n        result.strVal = rawValue.toString()\r\n        result.usedEncode = encodingType\r\n        break\r\n      }\r\n    }\r\n  }\r\n  // 如果没有找到匹配的编码，返回原始值\r\n  return result\r\n}\r\n\r\nexport function getRawValue(\r\n  physValue: number | string,\r\n  encodingTypes: SignalEncodeType['encodingTypes'],\r\n  db: LDF\r\n): { value?: number; usedEncode?: SignalEncodeType['encodingTypes'][0] } {\r\n  // 遍历所有编码类型\r\n  for (const encodingType of encodingTypes) {\r\n    switch (encodingType.type) {\r\n      case 'physicalValue': {\r\n        if (encodingType.physicalValue && !Number.isNaN(Number(physValue))) {\r\n          const { minValue, maxValue, scale, offset } = encodingType.physicalValue\r\n          // 反向计算：raw = (phys - offset) / scale\r\n          const rawValue = (Number(physValue) - offset) / scale\r\n          // 检查计算出的raw值是否在有效范围内\r\n          if (rawValue >= minValue && rawValue <= maxValue) {\r\n            return { value: Math.round(rawValue), usedEncode: encodingType }\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'logicalValue': {\r\n        if (encodingType.logicalValue) {\r\n          // 如果是字符串，检查是否匹配文本信息\r\n          if (typeof physValue === 'string' && encodingType.logicalValue.textInfo === physValue) {\r\n            return { value: encodingType.logicalValue.signalValue, usedEncode: encodingType }\r\n          }\r\n          // 如果是数字，检查是否匹配信号值\r\n          if (\r\n            typeof physValue === 'number' &&\r\n            encodingType.logicalValue.signalValue === physValue\r\n          ) {\r\n            return { value: encodingType.logicalValue.signalValue, usedEncode: encodingType }\r\n          }\r\n        }\r\n        break\r\n      }\r\n      case 'bcdValue': {\r\n        // BCD编码反向转换：将数字转换为BCD格式\r\n\r\n        return { value: parseInt(Number(physValue).toString(16), 10), usedEncode: encodingType }\r\n\r\n        break\r\n      }\r\n      case 'asciiValue': {\r\n        // ASCII编码反向转换：将字符串转换为数字\r\n        if (typeof physValue === 'string') {\r\n          return { value: parseInt(physValue, 10), usedEncode: encodingType }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  // 如果没有找到匹配的编码，返回undefined\r\n  return {}\r\n}\r\n\r\nexport function writeMessageData(frame: Frame, data: Buffer, db: LDF) {\r\n  for (const signal of frame.signals) {\r\n    // Find signal definition\r\n    const signalDef = db.signals[signal.name]\r\n    if (!signalDef) continue\r\n\r\n    // Calculate signal value from raw data\r\n    let value: number | string = 0\r\n    const startBit = signal.offset\r\n    const length = signalDef.signalSizeBits\r\n\r\n    if (signalDef.singleType === 'ByteArray') {\r\n      // Handle byte array type signals\r\n      const startByte = Math.floor(startBit / 8)\r\n      const byteLength = Math.ceil(length / 8)\r\n      const bitOffset = startBit % 8\r\n\r\n      if (bitOffset === 0) {\r\n        // 如果是字节对齐的情况\r\n        const tempBuffer = Buffer.alloc(8)\r\n        for (let i = 0; i < byteLength && startByte + i < data.length; i++) {\r\n          tempBuffer[i] = data[startByte + i]\r\n        }\r\n\r\n        if (length <= 8) {\r\n          value = tempBuffer[0]\r\n        } else if (length <= 16) {\r\n          value = tempBuffer.readUInt16BE(0)\r\n        } else if (length <= 24) {\r\n          value = (tempBuffer.readUInt16BE(0) << 8) | tempBuffer[2]\r\n        } else if (length <= 32) {\r\n          value = tempBuffer.readUInt32BE(0)\r\n        } else {\r\n          // 超过32位用16进制字符串表示\r\n          value = tempBuffer.subarray(0, byteLength).toString('hex')\r\n          signalDef.value = Array.prototype.slice.call(tempBuffer.subarray(0, byteLength), 0)\r\n        }\r\n      } else {\r\n        // 非字节对齐的情况\r\n        let tempBuffer = Buffer.alloc(8)\r\n        for (let i = 0; i < byteLength && startByte + i < data.length; i++) {\r\n          const currentByte = data[startByte + i]\r\n          const nextByte = startByte + i + 1 < data.length ? data[startByte + i + 1] : 0\r\n\r\n          // 组合当前字节和下一个字节的bits\r\n          tempBuffer[i] = ((currentByte >> bitOffset) | (nextByte << (8 - bitOffset))) & 0xff\r\n        }\r\n        //截断\r\n        tempBuffer = tempBuffer.subarray(0, byteLength)\r\n        //反转\r\n        tempBuffer = tempBuffer.reverse()\r\n        if (length <= 8) {\r\n          value = tempBuffer[0]\r\n        } else if (length <= 16) {\r\n          value = tempBuffer.readUInt16BE(0)\r\n        } else if (length <= 24) {\r\n          value = (tempBuffer.readUInt16BE(0) << 8) | tempBuffer[2]\r\n        } else if (length <= 32) {\r\n          value = tempBuffer.readUInt32BE(0)\r\n        } else {\r\n          // 超过32位用16进制字符串表示\r\n          value = tempBuffer.subarray(0, byteLength).toString('hex')\r\n          signalDef.value = Array.prototype.slice.call(tempBuffer.subarray(0, byteLength), 0)\r\n        }\r\n      }\r\n\r\n      // 对于数字类型，需要清除多余的位\r\n      if (typeof value === 'number') {\r\n        const mask = (1 << length) - 1\r\n        value &= mask\r\n        signalDef.value = value\r\n      }\r\n      signalDef.physValue = value\r\n    } else {\r\n      // Handle scalar type signals - process bit by bit\r\n      let tempValue = 0\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const targetBit = startBit + i\r\n        const byteOffset = Math.floor(targetBit / 8)\r\n        const bitOffset = targetBit % 8\r\n\r\n        if (byteOffset < data.length) {\r\n          // 获取对应位的值\r\n          if ((data[byteOffset] & (1 << bitOffset)) !== 0) {\r\n            tempValue |= 1 << i\r\n          }\r\n        }\r\n      }\r\n      signalDef.value = tempValue\r\n      signalDef.physValue = tempValue\r\n      //check enum\r\n      for (const encodeKey of Object.keys(db.signalRep)) {\r\n        if (db.signalRep[encodeKey].includes(signalDef.signalName)) {\r\n          const encodeInfo = db.signalEncodeTypes[encodeKey]\r\n          // 直接使用所有编码类型进行转换\r\n          const { numVal, strVal, usedEncode } = getPhysicalValue(\r\n            tempValue,\r\n            encodeInfo.encodingTypes,\r\n            db\r\n          )\r\n\r\n          if (usedEncode) {\r\n            signalDef.physValueEnum = strVal\r\n            if (numVal !== undefined) {\r\n              signalDef.physValue = numVal\r\n            }\r\n          }\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { DBC, Message, Signal } from './dbcVisitor'\r\n\r\n// Convert two's complement to signed value\r\nfunction fromTwosComplement(value: number, bits: number): number {\r\n  if (value & (1 << (bits - 1))) {\r\n    return -((~value + 1) & ((1 << bits) - 1))\r\n  }\r\n  return value\r\n}\r\n\r\n// Calculate max raw value based on signal length\r\nexport function getMaxRawValue(length: number): number {\r\n  return Math.pow(2, length) - 1\r\n}\r\n\r\n// Convert physical value to raw value\r\nfunction physToRaw(phys: number, row: Signal): number {\r\n  let rawValue = Math.round((phys - (row.offset || 0)) / (row.factor || 1))\r\n\r\n  // Get max value based on length\r\n  const maxRaw = getMaxRawValue(row.length)\r\n\r\n  if (row.isSigned) {\r\n    // For signed values, handle negative numbers with two's complement\r\n    if (rawValue < 0) {\r\n      rawValue = toTwosComplement(rawValue, row.length)\r\n    } else if (rawValue > maxRaw / 2) {\r\n      // Limit positive values to max signed value\r\n      rawValue = Math.floor(maxRaw / 2)\r\n    }\r\n  } else {\r\n    // For unsigned values, simply clamp between 0 and max\r\n    rawValue = Math.min(Math.max(rawValue, 0), maxRaw)\r\n  }\r\n\r\n  return rawValue\r\n}\r\n// Convert signed value to two's complement\r\nfunction toTwosComplement(value: number, bits: number): number {\r\n  if (value >= 0) return value\r\n  const mask = (1 << bits) - 1\r\n  return (~-value + 1) & mask\r\n}\r\n\r\n// Convert raw value to physical value\r\nexport function rawToPhys(raw: number, row: Signal): number {\r\n  let actualValue = raw\r\n\r\n  if (row.isSigned) {\r\n    // Only convert from two's complement if it's a signed value\r\n    const maxRaw = getMaxRawValue(row.length)\r\n    if (raw > maxRaw / 2) {\r\n      // If the value is in the negative range of two's complement\r\n      actualValue = fromTwosComplement(raw, row.length)\r\n    }\r\n  }\r\n\r\n  return actualValue * (row.factor || 1) + (row.offset || 0)\r\n}\r\n\r\nexport function updateSignalRaw(signal: Signal) {\r\n  if (signal.value === undefined) return\r\n  const maxRaw = getMaxRawValue(signal.length)\r\n  signal.value = Math.min(Math.max(0, signal.value), maxRaw)\r\n\r\n  if (signal.values || signal.valueTable) {\r\n    // For enum values, directly set the raw value as phys value\r\n    signal.physValue = signal.value\r\n  } else {\r\n    // Handle float value types\r\n    if (signal.valueType === 1) {\r\n      // IEEE Float (single precision)\r\n      // Create a buffer and view for the float value\r\n      const buffer = new ArrayBuffer(4)\r\n      const view = new DataView(buffer)\r\n      view.setUint32(0, signal.value, true) // true for little-endian\r\n      signal.physValue = view.getFloat32(0, true)\r\n    } else if (signal.valueType === 2) {\r\n      // IEEE Double (double precision)\r\n      const buffer = new ArrayBuffer(8)\r\n      const view = new DataView(buffer)\r\n      // For simplicity assuming the 64-bit value fits in 53 bits of JS number\r\n      view.setUint32(0, signal.value & 0xffffffff, true) // Lower 32 bits\r\n      view.setUint32(4, signal.value >> 32, true) // Upper 32 bits (might be 0 in JS)\r\n      signal.physValue = view.getFloat64(0, true)\r\n    } else {\r\n      // Calculate new physical value for regular integer signals\r\n      const newPhysValue = rawToPhys(signal.value!, signal)\r\n\r\n      // Check if this physical value would exceed limits\r\n      if (signal.minimum !== undefined && newPhysValue < signal.minimum) {\r\n        // Adjust raw value based on minimum physical value\r\n        signal.value = physToRaw(signal.minimum, signal)\r\n        signal.physValue = signal.minimum\r\n      } else if (signal.maximum !== undefined && newPhysValue > signal.maximum) {\r\n        // Adjust raw value based on maximum physical value\r\n        signal.value = physToRaw(signal.maximum, signal)\r\n        signal.physValue = signal.maximum\r\n      } else {\r\n        signal.physValue = newPhysValue\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function updateSignalPhys(row: Signal) {\r\n  if (row.physValue === undefined) return\r\n\r\n  if (row.values || row.valueTable) {\r\n    // For enum values, directly set the phys value as raw value\r\n    row.value = typeof row.physValue === 'number' ? row.physValue : 0\r\n  } else {\r\n    const physValue = typeof row.physValue === 'number' ? row.physValue : 0\r\n    // Handle float value types\r\n    if (row.valueType === 1) {\r\n      // IEEE Float (single precision)\r\n      const buffer = new ArrayBuffer(4)\r\n      const view = new DataView(buffer)\r\n      view.setFloat32(0, physValue, row.isLittleEndian) // true for little-endian\r\n      row.value = view.getUint32(0, row.isLittleEndian)\r\n    } else if (row.valueType === 2) {\r\n      // IEEE Double (double precision)\r\n      const buffer = new ArrayBuffer(8)\r\n      const view = new DataView(buffer)\r\n      view.setFloat64(0, physValue, row.isLittleEndian)\r\n      // For simplicity, we're only using the lower 32 bits\r\n      // This is a limitation as JavaScript numbers can't fully represent 64-bit integers\r\n      row.value = view.getUint32(0, row.isLittleEndian)\r\n    } else {\r\n      // Clamp physical value to min/max if defined\r\n      let clampedPhysValue = physValue\r\n      if (row.minimum !== undefined && physValue < row.minimum) {\r\n        clampedPhysValue = row.minimum\r\n      } else if (row.maximum !== undefined && physValue > row.maximum) {\r\n        clampedPhysValue = row.maximum\r\n      }\r\n\r\n      // Update physical value if it was clamped\r\n      if (clampedPhysValue !== physValue) {\r\n        row.physValue = clampedPhysValue\r\n      }\r\n\r\n      // Calculate and set raw value\r\n      row.value = physToRaw(clampedPhysValue, row)\r\n    }\r\n  }\r\n}\r\n\r\nexport function writeMessageData(message: Message, data: Buffer, db: DBC) {\r\n  // 首先找到多路复用器信号(如果存在)并更新其值\r\n  let multiplexer: Signal | undefined\r\n  let multiplexerValue: number | undefined\r\n\r\n  Object.values(message.signals).forEach((signal) => {\r\n    if (signal.multiplexerIndicator === 'M') {\r\n      multiplexer = signal\r\n      readSignalFromBuffer(signal, data, db)\r\n      multiplexerValue = signal.value\r\n    }\r\n  })\r\n\r\n  // 更新所有信号的值\r\n  Object.values(message.signals).forEach((signal) => {\r\n    // 处理多路复用信号的逻辑\r\n    if (signal.multiplexerIndicator) {\r\n      // 跳过已处理的多路复用器信号\r\n      if (signal.multiplexerIndicator === 'M') {\r\n        return\r\n      }\r\n      // 如果是被多路复用的信号，需要检查条件\r\n      if (multiplexer && multiplexerValue !== undefined) {\r\n        if (signal.multiplexerRange) {\r\n          // 处理范围多路复用\r\n          const isInRange = signal.multiplexerRange.range.some((val) => val === multiplexerValue)\r\n          if (isInRange) {\r\n            readSignalFromBuffer(signal, data, db)\r\n          }\r\n        } else {\r\n          // 处理单值多路复用\r\n          const val = Number(signal.multiplexerIndicator.slice(1))\r\n          if (val === multiplexerValue) {\r\n            readSignalFromBuffer(signal, data, db)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 非多路复用信号，直接处理\r\n      readSignalFromBuffer(signal, data, db)\r\n    }\r\n  })\r\n}\r\n\r\n// 从缓冲区读取信号值的辅助函数\r\nfunction readSignalFromBuffer(signal: Signal, data: Buffer, db: DBC) {\r\n  let rawValue = 0\r\n\r\n  if (signal.isLittleEndian) {\r\n    // Intel格式 (Little Endian)\r\n    let startByte = Math.floor(signal.startBit / 8)\r\n    let startBitInByte = signal.startBit % 8\r\n    let remainingBits = signal.length\r\n    let valueIndex = 0\r\n\r\n    while (remainingBits > 0 && startByte < data.length) {\r\n      const bitsInThisByte = Math.min(8 - startBitInByte, remainingBits)\r\n      const mask = (1 << bitsInThisByte) - 1\r\n      const value = (data[startByte] >> startBitInByte) & mask\r\n\r\n      rawValue |= value << valueIndex\r\n\r\n      remainingBits -= bitsInThisByte\r\n      valueIndex += bitsInThisByte\r\n      startByte += 1\r\n      startBitInByte = 0\r\n    }\r\n  } else {\r\n    // Motorola格式 (Big Endian) - 修改后的版本\r\n    let currentBit = signal.startBit // 从startBit开始，这是LSB的位置\r\n    let remainingBits = signal.length\r\n    let valueShift = 0 // 用于组装value的位偏移量\r\n\r\n    while (remainingBits > 0) {\r\n      const currentByte = Math.floor(currentBit / 8)\r\n      const bitInByte = currentBit % 8\r\n\r\n      if (currentByte < 0 || currentByte >= data.length) break\r\n\r\n      // 从buffer中提取当前bit\r\n      const bitValue = (data[currentByte] >> bitInByte) & 1\r\n\r\n      // 将bit添加到rawValue中\r\n      rawValue |= bitValue << valueShift\r\n\r\n      remainingBits--\r\n      valueShift++\r\n\r\n      // Motorola格式的bit遍历规则（与写入相同）\r\n      if (bitInByte === 7) {\r\n        // 当前在byte的最高位，跳转到前一个byte的最低位\r\n        currentBit -= 15 // 从bit 39跳转到bit 24\r\n      } else {\r\n        // 在byte内向高位移动\r\n        currentBit++\r\n      }\r\n    }\r\n  }\r\n\r\n  let physValue = rawValue\r\n\r\n  // 检查原始值是否合法\r\n  const maxValue = Math.pow(2, signal.length) - 1\r\n  if (rawValue > maxValue) {\r\n    return // 如果值超出信号长度允许的范围，不更新信号\r\n  }\r\n\r\n  // 对于枚举值，检查值是否在有效范围内\r\n  // if (signal.values) {\r\n  //   const validValues = Object.values(signal.values).map((v) => v.value)\r\n  //   if (!validValues.includes(rawValue)) {\r\n  //     return // 如果值不在枚举列表中，不更新信号\r\n  //   }\r\n  // } else if (signal.valueTable) {\r\n  //   // 如果有值表，检查值是否在值表范围内\r\n\r\n  //   const vt = Object.values(db.valueTables).find((vt) => vt.name === signal.valueTable)\r\n  //   if (vt) {\r\n  //     const validValues = vt.values.map((v) => v.value)\r\n  //     if (!validValues.includes(rawValue)) {\r\n  //       return // 如果值不在值表中，不更新信号\r\n  //     }\r\n  //   }\r\n  // } else\r\n\r\n  {\r\n    // 对于数值类型信号，检查是否在最小值和最大值范围内\r\n\r\n    if (signal.valueType == 1) {\r\n      //convert to IEEE Float\r\n      physValue = new Float32Array(new Uint32Array([physValue]).buffer)[0]\r\n    } else if (signal.valueType == 2) {\r\n      //convert to IEEE Double\r\n      physValue = new Float64Array(new Uint32Array([physValue]).buffer)[0]\r\n    } else if (signal.isSigned) {\r\n      // 检查最高位是否为1（负数）\r\n      const isNegative = (rawValue & (1 << (signal.length - 1))) !== 0\r\n      if (isNegative) {\r\n        // 转换为有符号值\r\n        const signBit = 1 << (signal.length - 1)\r\n        const valueMask = signBit - 1\r\n        physValue = -((~rawValue & valueMask) + 1)\r\n      }\r\n    }\r\n    // 计算物理值\r\n    physValue = physValue * (signal.factor || 1) + (signal.offset || 0)\r\n\r\n    // if (signal.minimum != signal.maximum) {\r\n    //   // 检查物理值是否在有效范围内\r\n    //   if (signal.minimum !== undefined && physValue < signal.minimum) {\r\n    //     console.log('physValue', physValue,signal.minimum,signal.attributes,signal.maximum)\r\n    //     return // 如果物理值小于最小值，不更新信号\r\n    //   }\r\n    //   if (signal.maximum !== undefined && physValue > signal.maximum) {\r\n    //     console.log('physValue', physValue,signal.minimum,signal.attributes,signal.maximum)\r\n    //     return // 如果物理值大于最大值，不更新信号\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  // 所有检查都通过后，更新信号值\r\n  signal.value = rawValue\r\n\r\n  // 更新物理值\r\n  if (signal.values || signal.valueTable) {\r\n    signal.physValue = rawValue\r\n    if (signal.values) {\r\n      signal.physValueEnum = signal.values?.find((v) => v.value === signal.value)?.label\r\n    } else if (signal.valueTable) {\r\n      const vt = Object.values(db.valueTables).find((vt) => vt.name === signal.valueTable)\r\n      if (vt) {\r\n        signal.physValueEnum = vt.values?.find((v) => v.value === signal.value)?.label\r\n      }\r\n    }\r\n  } else {\r\n    // 应用因子和偏移计算物理值\r\n    signal.physValue = physValue\r\n  }\r\n}\r\n\r\nexport function getMessageData(message: Message): Buffer {\r\n  const data = Buffer.alloc(message.length)\r\n\r\n  // 首先找到多路复用器信号(如果存在)\r\n  let multiplexer: Signal | undefined\r\n  let multiplexerValue: number | undefined\r\n\r\n  Object.values(message.signals).forEach((signal) => {\r\n    if (signal.multiplexerIndicator === 'M') {\r\n      multiplexer = signal\r\n      multiplexerValue = signal.value\r\n    }\r\n  })\r\n\r\n  // 处理所有信号\r\n  Object.values(message.signals).forEach((signal) => {\r\n    // 跳过未定义值的信号\r\n    if (signal.value === undefined) return\r\n\r\n    // 处理多路复用信号的逻辑\r\n    if (signal.multiplexerIndicator) {\r\n      // 如果是多路复用器本身，正常处理\r\n      if (signal.multiplexerIndicator === 'M') {\r\n        writeSignalToBuffer(signal, data)\r\n      }\r\n      // 如果是被多路复用的信号，需要检查条件\r\n      else if (multiplexer && multiplexerValue !== undefined) {\r\n        if (signal.multiplexerRange) {\r\n          // 处理范围多路复用\r\n          const isInRange = signal.multiplexerRange.range.some((val) => val === multiplexerValue)\r\n          if (isInRange) {\r\n            writeSignalToBuffer(signal, data)\r\n          }\r\n        } else {\r\n          // 处理单值多路复用\r\n          const val = Number(signal.multiplexerIndicator.slice(1))\r\n          if (val === multiplexerValue) {\r\n            writeSignalToBuffer(signal, data)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // 非多路复用信号，直接处理\r\n      writeSignalToBuffer(signal, data)\r\n    }\r\n  })\r\n\r\n  return data\r\n}\r\n\r\n// 将信号写入缓冲区的辅助函数\r\nfunction writeSignalToBuffer(signal: Signal, data: Buffer) {\r\n  let rawValue = signal.value\r\n  if (rawValue === undefined) return\r\n\r\n  const maxValue = Math.pow(2, signal.length) - 1\r\n  rawValue = Math.min(rawValue, maxValue)\r\n\r\n  if (signal.isLittleEndian) {\r\n    // Intel格式 (Little Endian)\r\n    let startByte = Math.floor(signal.startBit / 8)\r\n    let startBitInByte = signal.startBit % 8\r\n    let remainingBits = signal.length\r\n    let valueIndex = 0\r\n\r\n    while (remainingBits > 0) {\r\n      if (startByte >= data.length) break\r\n\r\n      const bitsInThisByte = Math.min(8 - startBitInByte, remainingBits)\r\n      const mask = (1 << bitsInThisByte) - 1\r\n      const value = (rawValue >> valueIndex) & mask\r\n\r\n      data[startByte] &= ~(mask << startBitInByte)\r\n      data[startByte] |= value << startBitInByte\r\n\r\n      remainingBits -= bitsInThisByte\r\n      valueIndex += bitsInThisByte\r\n      startByte += 1\r\n      startBitInByte = 0\r\n    }\r\n  } else {\r\n    // Motorola格式 (Big Endian) - 根据实际测试数据修正\r\n    let currentBit = signal.startBit // 从startBit开始，这是LSB的位置\r\n    let remainingBits = signal.length\r\n    let valueShift = 0 // 用于从value中提取bit的偏移量\r\n\r\n    while (remainingBits > 0) {\r\n      const currentByte = Math.floor(currentBit / 8)\r\n      const bitInByte = currentBit % 8\r\n\r\n      if (currentByte < 0 || currentByte >= data.length) break\r\n\r\n      // 从value中提取当前bit\r\n      const bitValue = (rawValue >> valueShift) & 1\r\n\r\n      // 清除目标bit并设置新值\r\n      const bitMask = 1 << bitInByte\r\n      data[currentByte] &= ~bitMask\r\n      if (bitValue) {\r\n        data[currentByte] |= bitMask\r\n      }\r\n\r\n      remainingBits--\r\n      valueShift++\r\n\r\n      // Motorola格式的bit遍历规则\r\n      if (bitInByte === 7) {\r\n        // 当前在byte的最高位，跳转到前一个byte的最低位\r\n        currentBit -= 15 // 从bit 39跳转到bit 24\r\n      } else {\r\n        // 在byte内向高位移动\r\n        currentBit++\r\n      }\r\n    }\r\n  }\r\n}\r\n","import path from 'path'\r\nimport type { Signal } from 'src/renderer/src/database/dbc/dbcVisitor'\r\nimport { updateSignalPhys, updateSignalRaw } from 'src/renderer/src/database/dbc/calc'\r\nimport type { LDF } from 'src/renderer/src/database/ldfParse'\r\nimport { isEqual } from 'lodash'\r\n\r\nexport function updateLinSignalVal(db: LDF, signalName: string, value: number | number[] | string) {\r\n  const signal = db.signals[signalName]\r\n  if (signal) {\r\n    //compare value\r\n    const lastValue = signal.value != undefined ? signal.value : signal.initValue\r\n    if (!isEqual(lastValue, value)) {\r\n      signal.update = true\r\n    }\r\n    if (typeof value === 'string') {\r\n      //find in encode\r\n      //TODO:\r\n    } else {\r\n      signal.value = value\r\n    }\r\n  }\r\n}\r\n\r\nexport function getJsPath(tsPath: string, projectPath: string) {\r\n  const outDir = path.join(projectPath, '.ScriptBuild')\r\n  const scriptNameNoExt = path.basename(tsPath, '.ts')\r\n  const jsPath = path.join(outDir, scriptNameNoExt + '.js')\r\n  return jsPath\r\n}\r\n\r\nexport function setSignal(data: { signal: string; value: number | number[] | string }) {\r\n  const s = data.signal.split('.')\r\n  // 验证数据库是否存在\r\n  const db = Object.values(global.dataSet.database.can).find((db) => db.name == s[0])\r\n  if (db) {\r\n    const signalName = s[1]\r\n    let ss: Signal | undefined\r\n    for (const msg of Object.values(db.messages)) {\r\n      for (const signal of Object.values(msg.signals)) {\r\n        if (signal.name == signalName) {\r\n          ss = signal\r\n          break\r\n        }\r\n      }\r\n      if (ss) {\r\n        break\r\n      }\r\n    }\r\n    if (!ss) {\r\n      throw new Error(`Signal ${signalName} not found`)\r\n    }\r\n    if (typeof data.value === 'string') {\r\n      updateSignalPhys(ss)\r\n    } else {\r\n      if (Array.isArray(data.value)) {\r\n        throw new Error('Can not set array value')\r\n      }\r\n      ss.value = data.value\r\n      updateSignalRaw(ss)\r\n    }\r\n  } else {\r\n    const linDb = Object.values(global.dataSet.database.lin).find((db) => db.name == s[0])\r\n    if (linDb) {\r\n      const signalName = s[1]\r\n\r\n      const signal = linDb.signals[signalName]\r\n      if (!signal) {\r\n        throw new Error(`Signal ${signalName} not found`)\r\n      }\r\n      // 更新信号值\r\n      updateLinSignalVal(linDb, signalName, data.value)\r\n    }\r\n  }\r\n}\r\n","import precisionTimer from './build/Release/precision_timer.node'\r\n\r\n/**\r\n * Timer task information interface\r\n *\r\n * @category Util\r\n */\r\nexport interface TimerTask {\r\n  /** Task ID */\r\n  taskId: number\r\n  /** Trigger time in microseconds */\r\n  triggerTime: number\r\n}\r\n\r\n/**\r\n * High-precision timer class providing microsecond-level timing functionality.\r\n * This class wraps native precision timer functionality for accurate task scheduling.\r\n *\r\n * @category Util\r\n *\r\n * @example\r\n * 1. *Basic single-shot timer*\r\n *     ```ts\r\n *     const timer = new PrecisionTimer('my-timer')\r\n *     timer.create()\r\n *\r\n *     // Add a task that runs once after 1000000 microseconds (1 second)\r\n *     const taskId = timer.addTask(1000000, 0, () => {\r\n *       console.log('Timer fired after 1 second!')\r\n *     })\r\n *     ```\r\n *\r\n * 2. *Recurring timer*\r\n *     ```ts\r\n *     // Add a task that runs every 500000 microseconds (500ms)\r\n *     const taskId = timer.addTask(500000, 500000, () => {\r\n *       console.log('This runs every 500ms')\r\n *     })\r\n *\r\n *     // Later, cancel the recurring task\r\n *     timer.cancelTask(taskId)\r\n *     ```\r\n *\r\n * 3. *High-precision timing measurement*\r\n *     ```ts\r\n *     // Get current high-precision timestamp\r\n *     const startTime = PrecisionTimer.getCurrentTimestamp()\r\n *\r\n *     // Add a task with microsecond precision (100 microseconds delay)\r\n *     timer.addTask(100, 0, () => {\r\n *       const endTime = PrecisionTimer.getCurrentTimestamp()\r\n *       console.log(`Elapsed: ${endTime - startTime} microseconds`)\r\n *     })\r\n *     ```\r\n */\r\nexport class PrecisionTimer {\r\n  private timerName: string\r\n\r\n  private isCreated: boolean = false\r\n  private timerMap: Map<number, () => void> = new Map()\r\n\r\n  /**\r\n   * Creates a new PrecisionTimer instance\r\n   * @param name - Unique name identifier for this timer instance\r\n   */\r\n  constructor(name: string) {\r\n    this.timerName = name\r\n  }\r\n\r\n  /**\r\n   * Internal callback handler for timer tasks\r\n   * @param task - Timer task information containing taskId and triggerTime\r\n   * @internal\r\n   */\r\n  callCallback(task: TimerTask) {\r\n    const callback = this.timerMap.get(task.taskId)\r\n    if (callback) {\r\n      try {\r\n        callback()\r\n      } catch (error) {\r\n        null\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates and initializes the precision timer.\r\n   * Must be called before adding any tasks.\r\n   *\r\n   * @throws {Error} If timer creation fails\r\n   */\r\n  create() {\r\n    if (this.isCreated) {\r\n      return\r\n    }\r\n\r\n    precisionTimer.createPrecisionTimer(this.timerName, this.callCallback.bind(this))\r\n    this.isCreated = true\r\n  }\r\n\r\n  /**\r\n   * Adds a new timer task with microsecond precision.\r\n   *\r\n   * @param delayMicrosec - Initial delay before first execution in microseconds\r\n   * @param intervalMicrosec - Interval between recurring executions in microseconds (0 for single execution)\r\n   * @param callback - Function to execute when timer fires\r\n   * @returns Task ID that can be used to cancel the task\r\n   * @throws {Error} If timer is not created\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Single execution after 1 second\r\n   * const taskId = timer.addTask(1000000, 0, () => console.log('Done!'))\r\n   *\r\n   * // Recurring execution every 500ms\r\n   * const intervalId = timer.addTask(500000, 500000, () => console.log('Tick'))\r\n   * ```\r\n   */\r\n  addTask(delayMicrosec: number, intervalMicrosec: number = 0, callback: () => void): number {\r\n    if (!this.isCreated) {\r\n      throw new Error('Timer not created')\r\n    }\r\n\r\n    const id = precisionTimer.addTimerTask(this.timerName, delayMicrosec, intervalMicrosec)\r\n\r\n    this.timerMap.set(id, callback)\r\n\r\n    return id\r\n  }\r\n\r\n  /**\r\n   * Cancels a previously scheduled timer task.\r\n   *\r\n   * @param taskId - The task ID returned by addTask()\r\n   * @returns True if task was successfully cancelled, false if task was not found\r\n   * @throws {Error} If timer is not created\r\n   */\r\n  cancelTask(taskId: number): boolean {\r\n    if (!this.isCreated) {\r\n      throw new Error('Timer not created')\r\n    }\r\n\r\n    return precisionTimer.cancelTimerTask(this.timerName, taskId)\r\n  }\r\n\r\n  /**\r\n   * Destroys the timer and cancels all pending tasks.\r\n   * After calling this method, the timer cannot be used until create() is called again.\r\n   *\r\n   * @note\r\n   * must call this method before the process exits,\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * Util.End(()=>{\r\n   *   timer.destroy()\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  destroy(): void {\r\n    if (!this.isCreated) {\r\n      return\r\n    }\r\n\r\n    precisionTimer.destroyPrecisionTimer(this.timerName)\r\n    this.isCreated = false\r\n  }\r\n}\r\n\r\n/**\r\n * Default export containing all timer-related classes and interfaces\r\n *\r\n * @category Util\r\n */\r\nexport default {\r\n  PrecisionTimer\r\n}\r\n","export function setVar(name: string, value: number | string | number[]) {\r\n  let found = false\r\n  const a = Object.values(global.vars)\r\n  //\r\n\r\n  //no group\r\n  const target = a.find((v) => v.name == name && v.value != undefined)\r\n  if (target) {\r\n    if (target.value == undefined) {\r\n      return { found: false, target }\r\n    }\r\n    //type check\r\n    if (target.value.type == 'number' && !Number.isNaN(Number(value))) {\r\n      target.value.value = Number(value)\r\n      found = true\r\n    } else if (target.value.type == 'string' && typeof value === 'string') {\r\n      target.value.value = value\r\n      found = true\r\n    } else if (target.value.type == 'array' && Array.isArray(value)) {\r\n      target.value.value = value\r\n      found = true\r\n    }\r\n  }\r\n\r\n  return { found, target }\r\n}\r\nexport function getVar(name: string): number | string | number[] {\r\n  const target = Object.values(global.vars).find((v) => v.name == name)\r\n  if (target && target.value) {\r\n    if (target.value.type == 'number') {\r\n      if (target.value.value == undefined) {\r\n        return Number(target.value.initValue)\r\n      } else {\r\n        return Number(target.value.value)\r\n      }\r\n    } else if (target.value.type == 'string') {\r\n      if (target.value.value == undefined) {\r\n        return target.value.initValue || ''\r\n      } else {\r\n        return target.value.value || ''\r\n      }\r\n    } else if (target.value.type == 'array') {\r\n      if (target.value.value == undefined) {\r\n        return (target.value.initValue || []).map((v) => Number(v))\r\n      } else {\r\n        return (target.value.value || []).map((v) => Number(v))\r\n      }\r\n    }\r\n  }\r\n  throw new Error(`var ${name} not found`)\r\n}\r\n\r\nexport function setVarByKey(key: string, value: number | string | number[]) {\r\n  const target = global.vars[key]\r\n  if (target && target.value) {\r\n    if (target.value.type == 'number' && typeof value === 'number') {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    } else if (target.value.type == 'string' && typeof value === 'string') {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    } else if (target.value.type == 'array' && Array.isArray(value)) {\r\n      target.value.value = value\r\n      return { found: true, target }\r\n    }\r\n  }\r\n  return { found: false, target }\r\n}\r\n\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:test\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:worker_threads\");","/**\r\n * vSomeIP Configuration Interfaces\r\n *\r\n * This module contains comprehensive TypeScript interfaces for vSomeIP 3.5.5 configuration.\r\n * The main interface is split into multiple sub-interfaces for better organization and maintainability.\r\n *\r\n * @see {@link https://github.com/GENIVI/vsomeip/wiki/vsomeip-in-10-minutes#configuration}\r\n */\r\n\r\n// Import all sub-interfaces\r\nimport type {\r\n  GlobalPayloadConfig,\r\n  GlobalQueueConfig,\r\n  TcpRestartConfig,\r\n  FilePermissionsConfig\r\n} from './payload-config'\r\n\r\nimport type { SecurityConfig } from './security-config'\r\n\r\nimport type { ServiceDiscoveryConfig, TracingConfig } from './service-discovery-config'\r\n\r\nimport type { ServiceConfig, InternalServiceConfig, ClientConfig } from './service-config'\r\n\r\nimport type {\r\n  WatchdogConfig,\r\n  LocalClientsKeepaliveConfig,\r\n  SelectiveBroadcastsConfig,\r\n  E2EConfig,\r\n  DebounceConfig,\r\n  AcceptanceConfig,\r\n  SecureServiceConfig,\r\n  PartitionConfig,\r\n  SuppressMissingEventLogConfig,\r\n  NpduDefaultTimingsConfig\r\n} from './other-config'\r\n\r\n/**\r\n * Logging configuration for vSomeIP\r\n * Used to configure the log messages of vSomeIP\r\n */\r\nexport interface LoggingConfig {\r\n  /**\r\n   * Specifies whether logging via console is enabled\r\n   * @default true\r\n   */\r\n  console?: boolean\r\n\r\n  /**\r\n   * File logging configuration\r\n   */\r\n  file?: {\r\n    /**\r\n     * Specifies whether a log file should be created\r\n     * @default false\r\n     */\r\n    enable?: boolean\r\n\r\n    /**\r\n     * The absolute path of the log file\r\n     * @default \"/tmp/vsomeip.log\"\r\n     */\r\n    path?: string\r\n  }\r\n\r\n  /**\r\n   * Specifies whether Diagnostic Log and Trace (DLT) is enabled\r\n   * @default false\r\n   */\r\n  dlt?: boolean\r\n\r\n  /**\r\n   * Specifies the log level\r\n   * @default \"info\"\r\n   */\r\n  level?: 'trace' | 'debug' | 'info' | 'warning' | 'error' | 'fatal'\r\n\r\n  /**\r\n   * Configures logging of the vsomeip version\r\n   */\r\n  version?: {\r\n    /**\r\n     * Enable or disable cyclic logging of vsomeip version\r\n     * @default true\r\n     */\r\n    enable?: boolean\r\n\r\n    /**\r\n     * Configures interval in seconds to log the vsomeip version\r\n     * @default 10\r\n     */\r\n    interval?: number\r\n  }\r\n\r\n  /**\r\n   * Configures interval in seconds in which the routing manager logs its used memory.\r\n   * Setting a value greater than zero enables the logging.\r\n   * @default 0\r\n   */\r\n  memory_log_interval?: number\r\n\r\n  /**\r\n   * Configures interval in seconds in which the routing manager logs its internal status.\r\n   * Setting a value greater than zero enables the logging.\r\n   * @default 0\r\n   */\r\n  status_log_interval?: number\r\n\r\n  /**\r\n   * Statistics logging configuration\r\n   */\r\n  statistics?: {\r\n    /**\r\n     * How often to report statistics data (received messages/events) in ms.\r\n     * The minimum possible interval is 1000, for configured values below, 1000 will be used.\r\n     * @default 10000\r\n     */\r\n    interval?: number\r\n\r\n    /**\r\n     * Minimum frequency of reported events\r\n     * @default 50\r\n     */\r\n    'min-frequency'?: number\r\n\r\n    /**\r\n     * Maximum number of different messages that are reported\r\n     * @default 50\r\n     */\r\n    'max-messages'?: number\r\n  }\r\n}\r\n\r\n/**\r\n * Routing host configuration\r\n */\r\nexport interface RoutingHost {\r\n  /**\r\n   * Name of the application that hosts the routing component\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * User identifier of the process that runs the routing component.\r\n   * Must be specified if credential checks are enabled by check_credentials set to true.\r\n   */\r\n  uid?: number\r\n\r\n  /**\r\n   * Group identifier of the process that runs the routing component.\r\n   * Must be specified if credential checks are enabled by check_credentials set to true.\r\n   */\r\n  gid?: number\r\n\r\n  /**\r\n   * The unicast address that shall be used by the routing manager,\r\n   * if the internal communication shall be done by using TCP connections.\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * The port that shall be used by the routing manager,\r\n   * if the internal communication shall be done by using TCP connections.\r\n   */\r\n  port?: number\r\n}\r\n\r\n/**\r\n * Routing guest configuration\r\n */\r\nexport interface RoutingGuest {\r\n  /**\r\n   * The unicast address that shall be used by the applications to connect to the routing manager.\r\n   * If not set, the unicast address of the host entry is used.\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * A set of port ranges that shall be used to connect to the routing manager per user identifier/group identifier.\r\n   * Either specify uid, gid and ranges, or only a set of port ranges.\r\n   * If uid and gid are not explicitly specified, they default to any.\r\n   * Each client application requires two ports, one for receiving messages from other applications\r\n   * and one to send messages to other applications.\r\n   */\r\n  ports?: Array<{\r\n    /**\r\n     * User identifier\r\n     */\r\n    uid?: number\r\n\r\n    /**\r\n     * Group identifier\r\n     */\r\n    gid?: number\r\n\r\n    /**\r\n     * Set of port ranges. Each entry consists of a first, last pair that determines\r\n     * the first and the last port of a port range.\r\n     */\r\n    ranges?: Array<{\r\n      /**\r\n       * First port of a port range\r\n       */\r\n      first: number\r\n\r\n      /**\r\n       * Last port of a port range\r\n       */\r\n      last: number\r\n    }>\r\n\r\n    /**\r\n     * First port of a port range (legacy format)\r\n     */\r\n    first?: number\r\n\r\n    /**\r\n     * Last port of a port range (legacy format)\r\n     */\r\n    last?: number\r\n  }>\r\n}\r\n\r\n/**\r\n * Routing configuration\r\n * Specifies the properties of the routing. Either a string that specifies the application\r\n * that hosts the routing component or a structure that specifies all properties of the routing.\r\n * If the routing is not specified, the first started application will host the routing component.\r\n */\r\nexport interface RoutingConfig {\r\n  /**\r\n   * Properties of the routing manager\r\n   */\r\n  host?: RoutingHost\r\n\r\n  /**\r\n   * Properties of all applications that do not host the routing component,\r\n   * if the internal communication shall be done using TCP connections.\r\n   */\r\n  guests?: RoutingGuest\r\n}\r\n\r\n/**\r\n * The UID / GID of the application acting as routing manager.\r\n * @deprecated Use routing.host.uid and routing.host.gid instead\r\n * Must be specified if credentials checks are enabled using check_credentials set to true\r\n * in order to successfully check the routing managers credentials passed on connect\r\n */\r\nexport interface RoutingCredentials {\r\n  /**\r\n   * The routing managers UID\r\n   */\r\n  uid: number\r\n\r\n  /**\r\n   * The routing managers GID\r\n   */\r\n  gid: number\r\n}\r\n\r\n/**\r\n * Application plugin configuration\r\n */\r\nexport interface ApplicationPlugin {\r\n  /**\r\n   * The name of the plug-in\r\n   */\r\n  name: string\r\n\r\n  /**\r\n   * The plug-in type. An application plug-in extends the functionality on application level.\r\n   * It gets informed by vsomeip over the basic application states (INIT/START/STOP) and can,\r\n   * based on these notifications, access the standard \"application\"-API via the runtime.\r\n   */\r\n  type: 'application_plugin'\r\n\r\n  /**\r\n   * Generic way to define configuration data for plugins\r\n   */\r\n  additional?: Record<string, any>\r\n}\r\n\r\n/**\r\n * Application configuration\r\n */\r\nexport interface ApplicationConfig {\r\n  /**\r\n   * The id of the application. Usually its high byte is equal to the diagnosis address.\r\n   * In this case the low byte must be different from zero. Thus, if the diagnosis address is 0x63,\r\n   * valid values range from 0x6301 until 0x63FF. It is also possible to use id values with\r\n   * a high byte different from the diagnosis address.\r\n   */\r\n  id: string\r\n\r\n  /**\r\n   * The maximum number of threads that shall be used to execute the application callbacks\r\n   * @default 10\r\n   */\r\n  max_dispatchers?: number\r\n\r\n  /**\r\n   * The maximum time in ms that an application callback may consume before the callback\r\n   * is considered to be blocked (and an additional thread is used to execute pending callbacks\r\n   * if max_dispatchers is configured greater than 0)\r\n   * @default 100\r\n   */\r\n  max_dispatch_time?: number\r\n\r\n  /**\r\n   * The maximum time in seconds that an application will wait for a detached dispatcher\r\n   * thread to finish executing\r\n   * @default 5\r\n   */\r\n  max_detached_thread_wait_time?: number\r\n\r\n  /**\r\n   * The number of internal threads to process messages and events within an application.\r\n   * Valid values are 1-255\r\n   * @default 2\r\n   */\r\n  threads?: number\r\n\r\n  /**\r\n   * The nice level for internal threads processing messages and events. POSIX/Linux only.\r\n   * For actual values refer to nice() documentation\r\n   * @default 0\r\n   */\r\n  io_thread_nice?: number\r\n\r\n  /**\r\n   * Specifies a debounce-time interval in ms in which request-service messages are sent\r\n   * to the routing manager. If an application requests many services in short same time\r\n   * the load of sent messages to the routing manager and furthermore the replies from\r\n   * the routing manager (which contains the routing info for the requested service if available)\r\n   * can be heavily reduced\r\n   */\r\n  request_debounce_time?: number\r\n\r\n  /**\r\n   * Contains the plug-ins that should be loaded to extend the functionality of vsomeip\r\n   */\r\n  plugins?: ApplicationPlugin[]\r\n\r\n  /**\r\n   * Client/Application specific configuration of debouncing\r\n   */\r\n  debounce?: any\r\n\r\n  /**\r\n   * Configures the session handling. Mostly used for E2E use cases when the application\r\n   * handles the CRC calculation over the SOME/IP header by themself, and need the ability\r\n   * to switch off the session handling as otherwise their calculated checksum does not\r\n   * match reality after vsomeip inserts the session identifier\r\n   * @default true\r\n   */\r\n  has_session_handling?: boolean\r\n\r\n  /**\r\n   * If set to a positive value, it enables the io_context object's event processing\r\n   * run_for implementation to run the loop based on duration instead of running it\r\n   * until the work queue has work to be done\r\n   * @default 0\r\n   */\r\n  event_loop_periodicity?: number\r\n}\r\n\r\n/**\r\n * Network configuration\r\n */\r\nexport interface NetworkConfig {\r\n  /**\r\n   * Network identifier used to support multiple routing managers on one host.\r\n   * This setting changes the name of the unix domain sockets in /tmp/.\r\n   * @default \"vsomeip\"\r\n   */\r\n  network?: string\r\n\r\n  /**\r\n   * The diagnosis address (byte) that will be used to build client identifiers.\r\n   * The diagnosis address is assigned to the most significant byte in all client identifiers\r\n   * if not specified otherwise (for example through a predefined client ID)\r\n   * @default 0x01\r\n   */\r\n  diagnosis?: string\r\n\r\n  /**\r\n   * The diagnosis mask (2 byte) is used to control the maximum amount of allowed\r\n   * concurrent vsomeip clients on an ECU and the start value of the client IDs.\r\n   * @default 0xFF00\r\n   */\r\n  diagnosis_mask?: string\r\n\r\n  /**\r\n   * The IP address of the host system\r\n   */\r\n  unicast?: string\r\n\r\n  /**\r\n   * The netmask to specify the subnet of the host system\r\n   */\r\n  netmask?: string\r\n\r\n  /**\r\n   * If specified, IP endpoints will be bound to this device\r\n   */\r\n  device?: string\r\n}\r\n\r\n/**\r\n * Dispatching configuration\r\n * Define default settings for the maximum number of (additional) dispatchers\r\n * and the maximum dispatch time. These default values are overwritten by\r\n * application specific definitions.\r\n */\r\nexport interface DispatchingConfig {\r\n  /**\r\n   * The maximum number of threads that shall be used to execute the application callbacks\r\n   * @default 10\r\n   */\r\n  max_dispatchers?: number\r\n\r\n  /**\r\n   * The maximum time in ms that an application callback may consume before the callback\r\n   * is considered to be blocked (and an additional thread is used to execute pending\r\n   * callbacks if max_dispatchers is configured greater than 0)\r\n   * @default 100\r\n   */\r\n  max_dispatch_time?: number\r\n}\r\n\r\n/**\r\n * Main vSomeIP Configuration Interface\r\n *\r\n * This interface represents the complete configuration structure for vSomeIP 3.5.5.\r\n * It combines all sub-interfaces to provide a comprehensive type-safe configuration.\r\n *\r\n * @see {@link https://github.com/GENIVI/vsomeip/wiki/vsomeip-in-10-minutes#configuration}\r\n */\r\nexport interface SomeipConfig\r\n  extends GlobalPayloadConfig,\r\n    GlobalQueueConfig,\r\n    TcpRestartConfig,\r\n    FilePermissionsConfig {\r\n  /**\r\n   * Logging configuration for vSomeIP\r\n   * Used to configure the log messages of vSomeIP\r\n   */\r\n  logging?: LoggingConfig\r\n\r\n  /**\r\n   * Routing configuration\r\n   * Specifies the properties of the routing. Either a string that specifies the application\r\n   * that hosts the routing component or a structure that specifies all properties of the routing.\r\n   * If the routing is not specified, the first started application will host the routing component.\r\n   */\r\n  routing?: string | RoutingConfig\r\n\r\n  /**\r\n   * The UID / GID of the application acting as routing manager.\r\n   * @deprecated Use routing.host.uid and routing.host.gid instead\r\n   * Must be specified if credentials checks are enabled using check_credentials set to true\r\n   * in order to successfully check the routing managers credentials passed on connect\r\n   */\r\n  'routing-credentials'?: RoutingCredentials\r\n\r\n  /**\r\n   * Contains the applications of the host system that use this config file\r\n   */\r\n  applications?: ApplicationConfig[]\r\n\r\n  /**\r\n   * Network configuration\r\n   */\r\n  network?: NetworkConfig\r\n\r\n  /**\r\n   * Configures the time in milliseconds local clients wait for acknowledgement\r\n   * of their deregistration from the routing manager during shutdown\r\n   * @default 5000\r\n   */\r\n  shutdown_timeout?: number\r\n\r\n  /**\r\n   * Define default settings for the maximum number of (additional) dispatchers\r\n   * and the maximum dispatch time. These default values are overwritten by\r\n   * application specific definitions.\r\n   */\r\n  dispatching?: DispatchingConfig\r\n\r\n  /**\r\n   * Security configuration based on UNIX credentials.\r\n   * If activated every local connection is authenticated during connect using\r\n   * the standard UNIX credential passing mechanism.\r\n   */\r\n  security?: SecurityConfig\r\n\r\n  /**\r\n   * Tracing configuration for the Trace Connector\r\n   * Used to forward the internal messages that are sent over the Unix Domain Sockets (UDS) to DLT.\r\n   */\r\n  tracing?: TracingConfig\r\n\r\n  /**\r\n   * Specifies the size of the socket receive buffer (SO_RCVBUF) used for UDP client\r\n   * and server endpoints in bytes. Requires CAP_NET_ADMIN to be successful.\r\n   * @default 1703936\r\n   */\r\n  'udp-receive-buffer-size'?: number\r\n\r\n  /**\r\n   * Contains settings related to the Service Discovery of the host application\r\n   */\r\n  'service-discovery'?: ServiceDiscoveryConfig\r\n\r\n  /**\r\n   * Global nPDU default timings configuration\r\n   * The nPDU feature can be used to reduce network load as it enables the vsomeip stack\r\n   * to combine multiple vsomeip messages in one single ethernet frame.\r\n   */\r\n  'npdu-default-timings'?: NpduDefaultTimingsConfig\r\n\r\n  /**\r\n   * Contains the services of the service provider\r\n   */\r\n  services?: ServiceConfig[]\r\n\r\n  /**\r\n   * Specifies service/instance ranges for pure internal service-instances.\r\n   * This information is used by vsomeip to avoid sending Find-Service messages\r\n   * via the Service-Discovery when a client is requesting a not available service-instance.\r\n   * Its can either be done on service/instance level or on service level only which\r\n   * then includes all instance from 0x0000-0xffff.\r\n   */\r\n  internal_services?: InternalServiceConfig[]\r\n\r\n  /**\r\n   * The client-side ports that shall be used to connect to a specific service.\r\n   * For each service, an array of ports to be used for reliable/unreliable communication\r\n   * can be specified. vsomeip will take the first free port of the list. If no free port\r\n   * can be found, the connection will fail. If vsomeip is asked to connect to a service\r\n   * instance without specified port(s), the port will be selected by the system. This\r\n   * implies that the user has to ensure that the ports configured here do not overlap\r\n   * with the ports automatically selected by the IP stack.\r\n   */\r\n  clients?: ClientConfig[]\r\n\r\n  /**\r\n   * The Watchdog sends periodically pings to all known local clients. If a client\r\n   * isn't responding within a configured time/amount of pongs the watchdog deregisters\r\n   * this application/client. If not configured the watchdog isn't activated.\r\n   */\r\n  watchdog?: WatchdogConfig\r\n\r\n  /**\r\n   * The Local Clients Keepalive option activates the sending of periodic ping messages\r\n   * from the routing manager clients to the routing host. The routing manager host shall\r\n   * reply to the ping with a pong. The idea is to have a simpler alternetive to the\r\n   * TCP_KEEPALIVE, particularly for systems where this option can not be configured.\r\n   */\r\n  'local-clients-keepalive'?: LocalClientsKeepaliveConfig\r\n\r\n  /**\r\n   * This nodes allow to add a list of IP addresses on which CAPI-Selective-Broadcasts\r\n   * feature is supported. If not specified the feature can't be used and the subscription\r\n   * behavior of the stack is same as with normal events.\r\n   */\r\n  supports_selective_broadcasts?: SelectiveBroadcastsConfig[]\r\n\r\n  /**\r\n   * Used to configure the E2E protection for the specified events\r\n   */\r\n  e2e?: E2EConfig\r\n\r\n  /**\r\n   * Events/fields sent by external devices will be forwarded to the applications\r\n   * only if a configurable function evaluates to true. The function checks whether\r\n   * the event/field payload has changed and whether a specified interval has been\r\n   * elapsed since the last forwarding.\r\n   */\r\n  debounce?: DebounceConfig[]\r\n\r\n  /**\r\n   * Service requests done by an application can be debounced to be more efficient\r\n   * if many services are requested simultaneously (e.g. at startup). This configuration\r\n   * variable specified the maximum request debounce time in milliseconds.\r\n   * @default 10\r\n   */\r\n  request_debounce_time?: number\r\n\r\n  /**\r\n   * Can be used to modify the assignment of ports to the unsecure, optional and secure ranges.\r\n   */\r\n  acceptances?: AcceptanceConfig[]\r\n\r\n  /**\r\n   * List of service instances that are only accepted, if being offered on a secure port.\r\n   */\r\n  'secure-services'?: SecureServiceConfig[]\r\n\r\n  /**\r\n   * Allows to group service instances that are offered on the same port into partitions.\r\n   * For each partition, a separate client port will be used. The goal is to enable faster\r\n   * processing of specific events if a single server port is used to offer many services\r\n   * that send many messages, especially at startup.\r\n   */\r\n  partitions?: PartitionConfig[][]\r\n\r\n  /**\r\n   * Used to filter the log message \"deliver_notification: Event [1234.5678.80f3]\r\n   * is not registered. The message is dropped.\" that occurs whenever vSomeIP\r\n   * receives an event without having a corresponding object being registered.\r\n   */\r\n  suppress_missing_event_logs?: SuppressMissingEventLogConfig[]\r\n}\r\n\r\nexport interface SomeipInfo {\r\n  id: string\r\n  name: string\r\n  services: ServiceConfig[]\r\n  device: string\r\n  application: ApplicationConfig\r\n  serviceDiscovery: ServiceDiscoveryConfig\r\n}\r\n\r\nexport enum SomeipMessageType {\r\n  REQUEST = 0,\r\n  REQUEST_NO_RETURN = 1,\r\n  NOTIFICATION = 2,\r\n  RESPONSE = 0x80,\r\n  REQUEST_ACK = 0x40,\r\n  NOTIFICATION_ACK = 0x42,\r\n  ERROR = 0x81,\r\n  RESPONSE_ACK = 0xc0,\r\n  ERROR_ACK = 0xc1,\r\n  UNKNOWN = 255\r\n}\r\n\r\nexport interface SomeipMessage {\r\n  uuid?: string\r\n  service: number\r\n  instance: number\r\n  method: number\r\n  client: number\r\n  session: number\r\n  payload: Buffer\r\n  messageType: SomeipMessageType\r\n  returnCode: number\r\n  protocolVersion: number\r\n  interfaceVersion: number\r\n  ts: number\r\n  reliable?: boolean\r\n  sending: boolean\r\n  protocol?: string\r\n  ip?: string\r\n  port?: number\r\n  database?: string\r\n  device?: string\r\n}\r\n\r\nexport interface VsomeipAvailabilityInfo {\r\n  service: number\r\n  instance: number\r\n  available: boolean\r\n}\r\n\r\nexport interface VsomeipSubscriptionInfo {\r\n  client: number\r\n  uid: number\r\n  gid: number\r\n  subscribed: boolean\r\n}\r\n\r\nexport interface VsomeipSubscriptionStatusInfo {\r\n  service: number\r\n  instance: number\r\n  eventgroup: number\r\n  event: number\r\n  status: number\r\n}\r\n\r\nexport const SomeipMessageTypeMap: Record<SomeipMessageType, string> = {\r\n  [SomeipMessageType.REQUEST]: 'Request',\r\n  [SomeipMessageType.REQUEST_NO_RETURN]: 'Request No Return',\r\n  [SomeipMessageType.NOTIFICATION]: 'Notification',\r\n  [SomeipMessageType.RESPONSE]: 'Response',\r\n  [SomeipMessageType.REQUEST_ACK]: 'Request Ack',\r\n  [SomeipMessageType.NOTIFICATION_ACK]: 'Notification Ack',\r\n  [SomeipMessageType.ERROR]: 'Error',\r\n  [SomeipMessageType.RESPONSE_ACK]: 'Response Ack',\r\n  [SomeipMessageType.ERROR_ACK]: 'Error Ack',\r\n  [SomeipMessageType.UNKNOWN]: 'Unknown'\r\n}\r\n\r\n// Re-export imported sub-interfaces for convenience\r\nexport type {\r\n  GlobalPayloadConfig,\r\n  GlobalQueueConfig,\r\n  TcpRestartConfig,\r\n  FilePermissionsConfig,\r\n  SecurityConfig,\r\n  ServiceDiscoveryConfig,\r\n  TracingConfig,\r\n  ServiceConfig,\r\n  InternalServiceConfig,\r\n  ClientConfig,\r\n  WatchdogConfig,\r\n  LocalClientsKeepaliveConfig,\r\n  SelectiveBroadcastsConfig,\r\n  E2EConfig,\r\n  DebounceConfig,\r\n  AcceptanceConfig,\r\n  SecureServiceConfig,\r\n  PartitionConfig,\r\n  SuppressMissingEventLogConfig,\r\n  NpduDefaultTimingsConfig\r\n}\r\n","export enum TaskStatus {\r\n  ACTIVE = 0,\r\n  START = 1,\r\n  WAIT = 2,\r\n  RELEASE = 3,\r\n  PREEMPT = 4,\r\n  TERMINATE = 5\r\n}\r\n\r\nexport interface VisibleBlock {\r\n  type: TaskType\r\n  id: number\r\n  start: number\r\n  end?: number\r\n  coreId: number\r\n  status: number\r\n  endStatus?: number\r\n}\r\n\r\nexport interface TaskEvent {\r\n  status: TaskStatus\r\n  taskId: number\r\n  coreId: number\r\n}\r\n\r\nexport enum IsrStatus {\r\n  START = 0,\r\n  STOP = 1\r\n}\r\n\r\nexport enum TaskType {\r\n  TASK = 0,\r\n  ISR = 1,\r\n  SPINLOCK = 2,\r\n  RESOURCE = 3,\r\n  HOOK = 4,\r\n  SERVICE = 5,\r\n  LINE = -1\r\n}\r\n\r\nexport enum SpinlockStatus {\r\n  LOCKED = 0,\r\n  UNLOCKED = 1\r\n}\r\n\r\nexport enum ResourceStatus {\r\n  START = 0,\r\n  STOP = 1\r\n}\r\n\r\nexport interface IsrEvent {\r\n  status: IsrStatus\r\n  isrId: number\r\n  coreId: number\r\n}\r\n\r\nexport interface SpinlockEvent {\r\n  status: SpinlockStatus\r\n  spinlockId: number\r\n  coreId: number\r\n}\r\n\r\nexport interface ResourceEvent {\r\n  status: ResourceStatus\r\n  resourceId: number\r\n  coreId: number\r\n}\r\n\r\nexport interface HookEvent {\r\n  hookParam: number\r\n  hookType: number\r\n  coreId: number\r\n}\r\n\r\nexport interface ServiceEvent {\r\n  serviceParam: number\r\n  serviceId: number\r\n  coreId: number\r\n}\r\n\r\nexport interface LineEvent {\r\n  from: string\r\n  to: string\r\n  coreId: number\r\n}\r\n\r\nexport const taskStatusRecord: Record<TaskStatus, string> = {\r\n  [TaskStatus.ACTIVE]: 'Active',\r\n  [TaskStatus.START]: 'Start',\r\n  [TaskStatus.WAIT]: 'Wait',\r\n  [TaskStatus.RELEASE]: 'Release',\r\n  [TaskStatus.PREEMPT]: 'Preempt',\r\n  [TaskStatus.TERMINATE]: 'Terminate'\r\n}\r\n\r\nexport const taskTypeRecord: Record<TaskType, string> = {\r\n  [TaskType.TASK]: 'Task',\r\n  [TaskType.ISR]: 'ISR',\r\n  [TaskType.SPINLOCK]: 'Spinlock',\r\n  [TaskType.RESOURCE]: 'Resource',\r\n  [TaskType.HOOK]: 'Hook',\r\n  [TaskType.SERVICE]: 'Service',\r\n  [TaskType.LINE]: 'Line'\r\n}\r\nexport const isrStatusRecord: Record<IsrStatus, string> = {\r\n  [IsrStatus.START]: 'Start',\r\n  [IsrStatus.STOP]: 'Stop'\r\n}\r\nexport function parseInfo(type: TaskType, status: number, br?: string): string {\r\n  let str = ''\r\n  switch (type) {\r\n    case TaskType.TASK:\r\n      str = `Task: ${taskStatusRecord[status as TaskStatus]}`\r\n      break\r\n    case TaskType.ISR:\r\n      str = `ISR: ${isrStatusRecord[status as IsrStatus]}`\r\n      break\r\n    default:\r\n      return ''\r\n  }\r\n  if (br) {\r\n    str += br\r\n  }\r\n  return str\r\n}\r\n\r\n// Unified event structure to reduce computational overhead\r\nexport interface OsEvent {\r\n  database?: string\r\n  index?: number\r\n  type: TaskType\r\n  id: number\r\n  status: number\r\n  coreId: number\r\n  ts: number\r\n  comment: string\r\n}\r\n","/**\n * SOME/IP Worker Module\n *\n * This module provides SOME/IP (Scalable service-Oriented MiddlewarE over IP) message handling classes.\n * SOME/IP is an automotive communication protocol used for service-oriented communication in vehicles.\n *\n * Catalog: SOME/IP - Handles SOME/IP protocol message types and operations\n */\n\nimport { SomeipMessage, SomeipMessageType } from '../share/someip'\n\n/**\n * @catalog SOME/IP\n * Base class for SOME/IP messages\n * This class provides the foundation for all SOME/IP message types.\n * It encapsulates the basic SOME/IP message structure and common functionality.\n */\nclass SomeipMessageBase {\n  /**\n   * Creates a new SOME/IP message base instance\n   * @param msg - The SOME/IP message data\n   */\n  constructor(public msg: SomeipMessage) {}\n\n  setPayload(payload: Buffer) {\n    this.msg.payload = payload\n  }\n}\n\n/**\n * SOME/IP Request Message Handler\n *\n * @catalog SOME/IP\n * This class handles SOME/IP request messages specifically.\n * It validates that the message type is REQUEST and provides request-specific functionality.\n */\nclass SomeipMessageRequest extends SomeipMessageBase {\n  /**\n   * Creates a new SOME/IP request message instance\n   * @param msg - The SOME/IP message data (must be of type REQUEST)\n   * @throws {Error} If the message type is not REQUEST\n   */\n  constructor(public msg: SomeipMessage) {\n    if (msg.messageType != SomeipMessageType.REQUEST) {\n      throw new Error('SomeipMessageRequest must be SomeipMessageType.REQUEST')\n    }\n    super(msg)\n  }\n}\n\n/**\n * SOME/IP Response Message Handler\n * @catalog SOME/IP\n * This class handles SOME/IP response messages specifically.\n * It validates that the message type is RESPONSE and provides response-specific functionality,\n * including the ability to create responses from requests.\n */\nclass SomeipMessageResponse extends SomeipMessageBase {\n  /**\n   * Creates a new SOME/IP response message instance\n   * @param msg - The SOME/IP message data (must be of type RESPONSE)\n   * @throws {Error} If the message type is not RESPONSE\n   */\n  constructor(public msg: SomeipMessage) {\n    if (msg.messageType != SomeipMessageType.RESPONSE) {\n      throw new Error('SomeipMessageResponse must be SomeipMessageType.RESPONSE')\n    }\n    super(msg)\n  }\n\n  /**\n   * Creates a SOME/IP response message from a request message\n   *\n   * This static method takes a request message and creates a corresponding response message\n   * by copying the request data and changing the message type to RESPONSE.\n   *\n   * @param request - The SOME/IP request message to create a response from\n   * @returns A new SomeipMessageResponse instance based on the request\n   */\n  static fromSomeipRequest(request: SomeipMessageRequest, payload: Buffer = Buffer.from([])) {\n    const response = new SomeipMessageResponse({\n      ...request.msg,\n      messageType: SomeipMessageType.RESPONSE\n    })\n    response.setPayload(payload)\n    return response\n  }\n}\n\n// Export all SOME/IP message classes for use in other modules\nexport { SomeipMessageBase, SomeipMessageRequest, SomeipMessageResponse }\n","import { VarItem } from 'src/preload/data'\nimport { UdsDevice } from './uds'\nimport { TesterInfo } from './tester'\nimport type { ORTIFile } from 'src/renderer/src/database/ortiParse'\nimport { IsrStatus, ResourceStatus, TaskStatus, TaskType } from './osEvent'\n\ninterface Item {\n  type: 'string' | 'number'\n  min?: number\n  max?: number\n  unit?: string\n  desc?: string\n  enum?: { name: string; value: number }[]\n}\nexport const MonitorVar: VarItem[] = [\n  {\n    type: 'system',\n    id: 'EventLoopDelay.min',\n    name: `EventLoopDelayMin`,\n    parentId: 'EventLoopDelay',\n    desc: 'Minimum event loop delay - lower values indicate better performance',\n    value: {\n      type: 'number',\n      initValue: 0,\n      unit: 'ms'\n    }\n  },\n  {\n    type: 'system',\n    id: 'EventLoopDelay.max',\n    name: `EventLoopDelayMax`,\n    desc: 'Maximum event loop delay - higher values indicate potential performance issues',\n    parentId: 'EventLoopDelay',\n    value: {\n      type: 'number',\n      initValue: 0,\n      unit: 'ms'\n    }\n  },\n  {\n    type: 'system',\n    id: 'EventLoopDelay.avg',\n    name: `EventLoopDelayAvg`,\n    desc: 'Average event loop delay - a good balance between performance and stability',\n    parentId: 'EventLoopDelay',\n    value: {\n      type: 'number',\n      initValue: 0,\n      unit: 'ms'\n    }\n  }\n]\n\nexport function getAllSysVar(\n  devices: Record<string, UdsDevice>,\n  testers: Record<string, TesterInfo>,\n  orti: Record<string, ORTIFile>\n): Record<string, VarItem> {\n  const list: Record<string, VarItem> = {\n    Statistics: {\n      type: 'system',\n      id: 'Statistics',\n      name: `Statistics`\n    },\n    OsTrace: {\n      type: 'system',\n      id: 'OsTrace',\n      name: `OsTrace`\n    }\n  }\n\n  for (const device of Object.values(devices)) {\n    const buslist: Record<string, { min: number; max?: number; unit?: string }> = {\n      BusLoad: {\n        min: 0,\n        max: 100,\n        unit: '%'\n      },\n      BusLoadMin: {\n        min: 0,\n        max: 100,\n        unit: '%'\n      },\n      BusLoadMax: {\n        min: 0,\n        max: 100,\n        unit: '%'\n      },\n      BusLoadAvg: {\n        min: 0,\n        max: 100,\n        unit: '%'\n      },\n      FrameSentFreq: {\n        min: 0,\n        max: 100,\n        unit: 'f/s'\n      },\n      FrameRecvFreq: {\n        min: 0,\n        max: 100,\n        unit: 'f/s'\n      },\n      FrameFreq: {\n        min: 0,\n        max: 100,\n        unit: 'f/s'\n      },\n      SentCnt: {\n        min: 0\n      },\n      RecvCnt: {\n        min: 0\n      }\n    }\n\n    if (device.type === 'can' && device.canDevice) {\n      list[`Statistics.${device.canDevice.id}`] = {\n        type: 'system',\n        id: `Statistics.${device.canDevice.id}`,\n        name: device.canDevice.name,\n        parentId: 'Statistics'\n      }\n      for (const key of Object.keys(buslist)) {\n        const item = buslist[key as keyof typeof buslist]\n\n        list[`Statistics.${device.canDevice.id}.${key}`] = {\n          type: 'system',\n          id: `Statistics.${device.canDevice.id}.${key}`,\n          name: `${key}`,\n          parentId: `Statistics.${device.canDevice.id}`,\n          value: {\n            type: 'number',\n            initValue: 0,\n            min: item.min,\n            max: item.max,\n            unit: item.unit\n          }\n        }\n      }\n    }\n  }\n\n  for (const tester of Object.values(testers)) {\n    list[`Statistics.${tester.id}`] = {\n      type: 'system',\n      id: `Statistics.${tester.id}`,\n      name: tester.name,\n      parentId: 'Statistics',\n      desc: 'UDS Tester'\n    }\n    if (tester.seqList.length > 0) {\n      for (const [index, seq] of tester.seqList.entries()) {\n        list[`Statistics.${tester.id}.${index}`] = {\n          type: 'system',\n          id: `Statistics.${tester.id}.${index}`,\n          name: `Seq #${index}`,\n          parentId: `Statistics.${tester.id}`,\n          value: {\n            type: 'number',\n            initValue: 0,\n            min: 0,\n            max: 100,\n            unit: '%'\n          },\n          desc: `UDS sequence download progress`\n        }\n      }\n    }\n  }\n\n  for (const item of Object.values(orti)) {\n    const Ortilist: Record<string, Item> = {\n      DelayTimeMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活成功（Start）到任务运行（Runninng）的最小时间'\n      },\n      DelayTimeMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活成功（Start）到任务运行（Runninng）的最大时间'\n      },\n      DelayTimeAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活成功（Start）到任务运行（Runninng）的平均时间'\n      },\n      ActivationIntervalMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活间隔最小时间'\n      },\n      ActivationIntervalMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活间隔最大时间'\n      },\n      ActivationIntervalAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务激活间隔平均时间'\n      },\n      StartIntervalMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务开始间隔最小时间'\n      },\n      StartIntervalMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务开始间隔最大时间'\n      },\n      StartIntervalAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务开始间隔平均时间'\n      },\n      ExecutionTimeMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务执行时间最小时间'\n      },\n      ExecutionTimeMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务执行时间最大时间'\n      },\n      ExecutionTimeAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: '任务执行时间平均时间'\n      },\n      StartCount: {\n        type: 'number',\n        min: 0,\n        desc: '任务开始次数'\n      },\n      Status: {\n        type: 'number',\n        desc: 'Task当前状态',\n        max: 5,\n        min: 0,\n        enum: [\n          { name: 'Active', value: TaskStatus.ACTIVE },\n          { name: 'Start', value: TaskStatus.START },\n          { name: 'Suspended', value: TaskStatus.WAIT },\n          { name: 'Release', value: TaskStatus.RELEASE },\n          { name: 'Preempt', value: TaskStatus.PREEMPT },\n          { name: 'Terminate', value: TaskStatus.TERMINATE }\n        ]\n      },\n      ActiveCount: {\n        type: 'number',\n        min: 0,\n        desc: '任务激活次数'\n      },\n      RunningRate: {\n        type: 'number',\n        min: 0,\n        max: 100,\n        unit: '%',\n        desc: 'Task实际运行次数与被激活次数的百分比'\n      },\n      Jitter: {\n        type: 'number',\n        min: 0,\n        max: 100,\n        unit: '%',\n        desc: '（实际任务开始间隔时间-实际激活间隔时间）/实际激活间隔时间'\n      }\n    }\n\n    const ISRList: Record<string, Item> = {\n      ExecutionTimeMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR执行时间最小时间'\n      },\n      ExecutionTimeMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR执行时间最大时间'\n      },\n      ExecutionTimeAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR执行时间平均时间'\n      },\n      RunCount: {\n        type: 'number',\n        min: 0,\n        desc: 'ISR运行次数'\n      },\n      Status: {\n        type: 'number',\n        desc: 'ISR当前状态',\n        max: 1,\n        min: 0,\n        enum: [\n          { name: 'Start', value: IsrStatus.START },\n          { name: 'Stop', value: IsrStatus.STOP }\n        ]\n      },\n      CallIntervalMin: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR调用间隔最小时间'\n      },\n      CallIntervalMax: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR调用间隔最大时间'\n      },\n      CallIntervalAvg: {\n        type: 'number',\n        min: 0,\n        unit: 'us',\n        desc: 'ISR调用间隔平均时间'\n      }\n    }\n\n    const ResourceList: Record<string, Item> = {\n      Status: {\n        type: 'number',\n        desc: 'Resource当前状态',\n        max: 1,\n        min: 0,\n        enum: [\n          { name: 'Start', value: ResourceStatus.START },\n          { name: 'Stop', value: ResourceStatus.STOP }\n        ]\n      },\n      AcquireCount: {\n        type: 'number',\n        min: 0,\n        desc: 'Resource获取次数'\n      },\n      ReleaseCount: {\n        type: 'number',\n        min: 0,\n        desc: 'Resource释放次数'\n      }\n    }\n\n    const ServiceList: Record<string, Item> = {\n      Count: {\n        type: 'number',\n        min: 0,\n        desc: 'Service调用次数'\n      },\n      LastStatus: {\n        type: 'number',\n        min: 0,\n        desc: 'Service最后状态'\n      }\n    }\n\n    const HookList: Record<string, Item> = {\n      Count: {\n        type: 'number',\n        min: 0,\n        desc: 'Hook触发次数'\n      },\n      LastStatus: {\n        type: 'number',\n        min: 0,\n        desc: 'Hook最后状态参数'\n      }\n    }\n    list[`OsTrace.${item.id}`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}`,\n      name: item.name,\n      parentId: 'OsTrace'\n    }\n    let coreNum = 0\n    list[`OsTrace.${item.id}.Task`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}.Task`,\n      name: `Task`,\n      parentId: `OsTrace.${item.id}`\n    }\n    list[`OsTrace.${item.id}.ISR`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}.ISR`,\n      name: `ISR`,\n      parentId: `OsTrace.${item.id}`\n    }\n\n    for (const core of item.coreConfigs) {\n      coreNum = Math.max(coreNum, core.coreId + 1)\n      if (core.type == TaskType.TASK) {\n        list[`OsTrace.${item.id}.Task.${core.type}_${core.id}_${core.coreId}`] = {\n          type: 'system',\n          id: `OsTrace.${item.id}.Task.${core.type}_${core.id}_${core.coreId}`,\n          name: core.name,\n          parentId: `OsTrace.${item.id}.Task`\n        }\n        for (const key of Object.keys(Ortilist)) {\n          const vitem = Ortilist[key as keyof typeof Ortilist]\n          const vkey = `OsTrace.${item.id}.Task.${core.type}_${core.id}_${core.coreId}.${key}`\n          list[vkey] = {\n            type: 'system',\n            id: vkey,\n            name: `${key}`,\n            parentId: `OsTrace.${item.id}.Task.${core.type}_${core.id}_${core.coreId}`,\n            value: {\n              type: vitem.type,\n              min: vitem.min,\n              max: vitem.max,\n              unit: vitem.unit,\n              enum: vitem.enum\n            },\n            desc: vitem.desc\n          }\n        }\n      } else if (core.type == TaskType.ISR) {\n        list[`OsTrace.${item.id}.ISR.${core.type}_${core.id}_${core.coreId}`] = {\n          type: 'system',\n          id: `OsTrace.${item.id}.ISR.${core.type}_${core.id}_${core.coreId}`,\n          name: core.name,\n          parentId: `OsTrace.${item.id}.ISR`\n        }\n        for (const key of Object.keys(ISRList)) {\n          const vitem = ISRList[key as keyof typeof ISRList]\n          const vkey = `OsTrace.${item.id}.ISR.${core.type}_${core.id}_${core.coreId}.${key}`\n          list[vkey] = {\n            type: 'system',\n            id: vkey,\n            name: `${key}`,\n            parentId: `OsTrace.${item.id}.ISR.${core.type}_${core.id}_${core.coreId}`,\n            value: {\n              type: vitem.type,\n              min: vitem.min,\n              max: vitem.max,\n              unit: vitem.unit,\n              enum: vitem.enum\n            },\n            desc: vitem.desc\n          }\n        }\n      }\n    }\n\n    list[`OsTrace.${item.id}.Resource`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}.Resource`,\n      name: `Resource`,\n      parentId: `OsTrace.${item.id}`\n    }\n\n    // Process Resource configs\n    for (const resource of item.resourceConfigs || []) {\n      const resourceKey = `OsTrace.${item.id}.Resource.${TaskType.RESOURCE}_${resource.id}_${resource.coreId}`\n      list[resourceKey] = {\n        type: 'system',\n        id: resourceKey,\n        name: resource.name,\n        parentId: `OsTrace.${item.id}.Resource`\n      }\n      for (const key of Object.keys(ResourceList)) {\n        const vitem = ResourceList[key as keyof typeof ResourceList]\n        const vkey = `OsTrace.${item.id}.Resource.${resourceKey}.${key}`\n        list[vkey] = {\n          type: 'system',\n          id: vkey,\n          name: `${key}`,\n          parentId: resourceKey,\n          value: {\n            type: vitem.type,\n            min: vitem.min,\n            max: vitem.max,\n            unit: vitem.unit,\n            enum: vitem.enum\n          },\n          desc: vitem.desc\n        }\n      }\n    }\n    list[`OsTrace.${item.id}.Service`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}.Service`,\n      name: `Service`,\n      parentId: `OsTrace.${item.id}`\n    }\n\n    // Process Service configs\n    for (const service of item.serviceConfigs || []) {\n      const serviceKey = `OsTrace.${item.id}.Service.${TaskType.SERVICE}_${service.id}_0`\n      list[serviceKey] = {\n        type: 'system',\n        id: serviceKey,\n        name: service.name,\n        parentId: `OsTrace.${item.id}.Service`\n      }\n      for (const key of Object.keys(ServiceList)) {\n        const vitem = ServiceList[key as keyof typeof ServiceList]\n        const vkey = `OsTrace.${item.id}.Service.${serviceKey}.${key}`\n        list[vkey] = {\n          type: 'system',\n          id: vkey,\n          name: `${key}`,\n          parentId: serviceKey,\n          value: {\n            type: vitem.type,\n            min: vitem.min,\n            max: vitem.max,\n            unit: vitem.unit,\n            enum: vitem.enum\n          },\n          desc: vitem.desc\n        }\n      }\n    }\n    list[`OsTrace.${item.id}.Hook`] = {\n      type: 'system',\n      id: `OsTrace.${item.id}.Hook`,\n      name: `Hook`,\n      parentId: `OsTrace.${item.id}`\n    }\n    // Process Hook configs\n    for (const hook of item.hostConfigs || []) {\n      const hookKey = `OsTrace.${item.id}.Hook.${TaskType.HOOK}_${hook.id}_0`\n      list[hookKey] = {\n        type: 'system',\n        id: hookKey,\n        name: hook.name,\n        parentId: `OsTrace.${item.id}.Hook`\n      }\n      for (const key of Object.keys(HookList)) {\n        const vitem = HookList[key as keyof typeof HookList]\n        const vkey = `OsTrace.${item.id}.Hook.${hookKey}.${key}`\n        list[vkey] = {\n          type: 'system',\n          id: vkey,\n          name: `${key}`,\n          parentId: hookKey,\n          value: {\n            type: vitem.type,\n            min: vitem.min,\n            max: vitem.max,\n            unit: vitem.unit,\n            enum: vitem.enum\n          },\n          desc: vitem.desc\n        }\n      }\n    }\n\n    for (let i = 0; i < coreNum; i++) {\n      list[`OsTrace.${item.id}.Core${i}`] = {\n        type: 'system',\n        id: `OsTrace.${item.id}.Core${i}`,\n        name: `Core${i}`,\n        parentId: `OsTrace.${item.id}`\n      }\n      const coreList: Record<\n        string,\n        { type: 'string' | 'number'; min?: number; max?: number; unit?: string; desc?: string }\n      > = {\n        LoadPercent: {\n          type: 'number',\n          min: 0,\n          max: 100,\n          unit: '%',\n          desc: 'Core负载百分比'\n        },\n        ExecutionTime: {\n          type: 'number',\n          min: 0,\n          unit: 'ms',\n          desc: 'Core执行时间'\n        },\n        TotalTime: {\n          type: 'number',\n          min: 0,\n          unit: 'ms',\n          desc: 'Core总时间'\n        }\n      }\n      for (const key of Object.keys(coreList)) {\n        const vitem = coreList[key as keyof typeof coreList]\n        const vkey = `OsTrace.${item.id}.Core${i}.${key}`\n        list[vkey] = {\n          type: 'system',\n          id: vkey,\n          name: `${key}`,\n          parentId: `OsTrace.${item.id}.Core${i}`,\n          value: {\n            type: vitem.type,\n            min: vitem.min,\n            max: vitem.max,\n            unit: vitem.unit\n          },\n          desc: vitem.desc\n        }\n      }\n    }\n  }\n  //monitor var\n  list[`EventLoopDelay`] = {\n    type: 'system',\n    id: 'EventLoopDelay',\n    name: `EventLoopDelay`\n  }\n  for (const item of MonitorVar) {\n    list[item.id] = item\n  }\n  return list\n}\n","/**\r\n * @module Util\r\n */\r\nimport Emittery from 'emittery'\r\nimport {\r\n  getRxPdu,\r\n  getTxPdu,\r\n  Param,\r\n  paramSetVal,\r\n  paramSetSize,\r\n  paramSetValRaw,\r\n  Sequence,\r\n  ServiceItem,\r\n  applyBuffer,\r\n  UdsAddress\r\n} from '../share/uds'\r\nexport { CAN_ID_TYPE, CAN_ADDR_TYPE, CAN_ADDR_FORMAT } from '../share/can'\r\nexport type { ServiceItem }\r\nexport type { TesterInfo } from '../share/tester'\r\nexport type { ServiceId }\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n//@ts-ignore\r\nimport workerpool, { worker } from 'workerpool'\r\nimport { cloneDeep } from 'lodash'\r\nimport { v4 } from 'uuid'\r\nimport { checkServiceId, ServiceId } from './../share/uds'\r\nimport { CAN_ID_TYPE, CanMessage } from '../share/can'\r\nimport SecureAccessDll from './secureAccess'\r\nimport { EntityAddr, VinInfo } from '../share/doip'\r\nimport {\r\n  LinMsg,\r\n  LinCableErrorInject,\r\n  LinDirection,\r\n  LinChecksumType,\r\n  getFrameData\r\n} from '../share/lin'\r\nexport { LinDirection, LinChecksumType, LinMode } from '../share/lin'\r\nexport { SecureAccessDll }\r\nexport type { CanMessage }\r\nexport type { EntityAddr }\r\nexport type { LinMsg, LinCableErrorInject }\r\nexport type { CanAddr } from '../share/can'\r\nexport type { EthAddr } from '../share/doip'\r\nexport type { LinAddr } from '../share/lin'\r\nexport type { CanMsgType } from '../share/can'\r\nexport type { UdsAddress }\r\nimport { dot } from 'node:test/reporters'\r\nimport assert, { AssertionError } from 'node:assert'\r\nimport { writeMessageData as writeLinMessageData } from 'src/renderer/src/database/ldf/calc'\r\nimport { setSignal as setSignalNode } from '../util'\r\nexport { PrecisionTimer } from '../timer/timer'\r\nexport type { TimerTask } from '../timer/timer'\r\nimport { setVar as setVarMain, getVar as getVarMain } from '../var'\r\n/**\r\n * Node.js built-in assertion library for testing.\r\n * Provides various assertion methods to validate test expectations.\r\n * Throws AssertionError when assertions fail, causing the test to fail.\r\n *\r\n * @category TEST\r\n *\r\n * @example\r\n * ```ts\r\n * import { assert } from './worker/uds';\r\n *\r\n * // Basic equality assertions\r\n * assert.equal(actual, expected);\r\n * assert.strictEqual(actual, expected);\r\n * assert.notEqual(actual, unexpected);\r\n *\r\n * // Boolean assertions\r\n * assert.ok(value); // truthy check\r\n * assert.equal(value, true);\r\n *\r\n * // Array and object assertions\r\n * assert.deepEqual(actualObject, expectedObject);\r\n * assert.deepStrictEqual(actualArray, expectedArray);\r\n *\r\n * // Error assertions\r\n * assert.throws(() => {\r\n *   throw new Error('Expected error');\r\n * });\r\n *\r\n * // CAN message validation example\r\n * test('should validate CAN message structure', () => {\r\n *   const canMsg = { id: 0x123, data: [0x01, 0x02] };\r\n *   assert.ok(canMsg.id);\r\n *   assert.equal(typeof canMsg.id, 'number');\r\n *   assert.ok(Array.isArray(canMsg.data));\r\n *   assert.equal(canMsg.data.length, 2);\r\n * });\r\n *\r\n * // UDS response validation example\r\n * test('should validate UDS positive response', () => {\r\n *   const response = [0x50, 0x01]; // Positive response to service 0x10\r\n *   assert.equal(response.length, 2);\r\n *   assert.equal(response[0], 0x50);\r\n *   assert.equal(response[1], 0x01);\r\n * });\r\n * ```\r\n */\r\nexport { assert }\r\n\r\nimport { test as nodeTest, TestContext } from 'node:test'\r\n\r\nexport { getCheckSum as getLinCheckSum } from '../share/lin'\r\n\r\nlet init = process.env.ONLY == 'true' ? true : false\r\nlet initPromiseResolve: () => void = () => {}\r\nlet initPromiseReject: (e: any) => void = () => {}\r\nconst initPromise = new Promise<void>((resolve, reject) => {\r\n  initPromiseResolve = resolve\r\n  initPromiseReject = reject\r\n})\r\n\r\nlet testCnt = 0\r\nconst testEnableControl: Record<number, boolean> = {}\r\n\r\n/**\r\n * 辅助函数：保留原始错误的堆栈信息\r\n * @param fn 要执行的函数\r\n * @returns 执行结果\r\n */\r\nasync function preserveErrorStack<T>(fn: () => T | Promise<T>): Promise<T> {\r\n  try {\r\n    return await fn()\r\n  } catch (error) {\r\n    // 保留原始错误的堆栈信息，但过滤掉 uds.ts 相关的帧\r\n    if (error instanceof Error) {\r\n      const stack = error.stack?.split('\\n')\r\n      //fisrt at line\r\n      const atLine = stack?.find((line) => /\\d+:\\d+/.test(line))\r\n\r\n      const newError = new Error(`${error.message}, pos: ${atLine}`)\r\n\r\n      throw newError\r\n    }\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Test function for writing test cases with conditional execution based on enable control.\r\n * Provides test context, automatic logging, and supports both synchronous and asynchronous operations.\r\n * Test execution is controlled by the testEnableControl configuration.\r\n *\r\n * @category TEST\r\n * @param {string} name - The name of the test case\r\n * @param {Function} fn - The test function to execute (can be sync or async)\r\n * @property {Function} skip - Skip a test case, marking it as pending. The test will be reported as skipped and not executed.\r\n *\r\n * @example\r\n * ```ts\r\n * // Basic synchronous test case\r\n * test('should validate CAN message format', () => {\r\n *   const canMsg = { id: 0x123, data: [0x01, 0x02] };\r\n *   assert.equal(canMsg.id, 0x123);\r\n *   assert.equal(canMsg.data.length, 2);\r\n * });\r\n *\r\n * // Asynchronous test case for UDS communication\r\n * test('should perform UDS diagnostic session', async () => {\r\n *   await uds.service(0x10, 0x01); // DiagnosticSessionControl\r\n *   const response = await uds.getResponse();\r\n *   assert.equal(response[0], 0x50); // Positive response\r\n * });\r\n *\r\n * // Test with CAN bus operations\r\n * test('should send and receive CAN messages', async () => {\r\n *   await can.send({ id: 0x7E0, data: [0x02, 0x10, 0x01] });\r\n *   const msg = await can.recv(1000);\r\n *   assert.notEqual(msg, null);\r\n * });\r\n *\r\n * // Skip a test case when feature is not ready\r\n * test.skip('LIN transport protocol test', () => {\r\n *   // Test code that will be skipped\r\n *   lin.sendMessage(0x3C, [0x01, 0x02, 0x03]);\r\n * });\r\n * ```\r\n */\r\n\r\nexport function test(name: string, fn: () => void | Promise<void>) {\r\n  selfTest(name, async (t) => {\r\n    if (!init) {\r\n      try {\r\n        await initPromise\r\n      } catch (e: any) {\r\n        console.error(`Util.Init function failed: ${e}`)\r\n        process.exit(-1)\r\n      }\r\n      init = true\r\n    }\r\n\r\n    t.before(async () => {\r\n      if (testEnableControl[testCnt] != true) {\r\n        t.skip()\r\n        return\r\n      }\r\n      console.log(`<<< TEST START ${name}>>>`)\r\n    })\r\n    t.after(() => {\r\n      console.log(`<<< TEST END ${name}>>>`)\r\n      testCnt++\r\n    })\r\n\r\n    if (testEnableControl[testCnt] != true) {\r\n      t.skip()\r\n    } else {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\ntest.skip = function (name: string, fn: () => void | Promise<void>) {\r\n  selfTest(name, (t) => {\r\n    t.before(() => {\r\n      console.log(`<<< TEST START ${name}>>>`)\r\n    })\r\n    t.after(() => {\r\n      console.log(`<<< TEST END ${name}>>>`)\r\n      testCnt++\r\n    })\r\n    t.skip()\r\n  })\r\n}\r\n\r\n/**\r\n * Node.js built-in test hook functions.\r\n * These are aliased and re-exported as custom functions with conditional execution.\r\n *\r\n * @category TEST\r\n */\r\nimport {\r\n  beforeEach as nodeBeforeEach,\r\n  afterEach as nodeAfterEach,\r\n  before as nodeBefore,\r\n  after as nodeAfter\r\n} from 'node:test'\r\n\r\n/**\r\n * Run setup code before each test in the current suite.\r\n * **MUST be used within a describe block.** Only executes if the corresponding test is enabled through testEnableControl.\r\n * Useful for initializing test data, establishing connections, or setting up mock objects.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run before each test (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('CAN Communication Tests', () => {\r\n *   // ✅ Correct: beforeEach inside describe block\r\n *   beforeEach(async () => {\r\n *     await can.open('kvaser', 0);\r\n *     await can.setBitrate(500000);\r\n *   });\r\n *\r\n *   beforeEach(() => {\r\n *     uds.setTesterPresent(true);\r\n *     uds.setTimeout(5000);\r\n *   });\r\n *\r\n *   test('should send CAN message', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: beforeEach outside describe block\r\n * // beforeEach(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function beforeEach(fn: () => void | Promise<void>) {\r\n  nodeBeforeEach(async () => {\r\n    // Use current testCnt to determine if this hook should run\r\n    if (testEnableControl[testCnt] === true) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run cleanup code after each test in the current suite.\r\n * **MUST be used within a describe block.** Only executes if the corresponding test is enabled through testEnableControl.\r\n * Used for cleaning up resources, closing connections, or resetting state after each test.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run after each test (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('UDS Diagnostic Tests', () => {\r\n *   // ✅ Correct: afterEach inside describe block\r\n *   afterEach(async () => {\r\n *     await can.close();\r\n *   });\r\n *\r\n *   afterEach(() => {\r\n *     uds.setTesterPresent(false);\r\n *     uds.clearDtc();\r\n *     testData = null;\r\n *   });\r\n *\r\n *   test('should perform diagnostics', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: afterEach outside describe block\r\n * // afterEach(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function afterEach(fn: () => void | Promise<void>) {\r\n  nodeAfterEach(async () => {\r\n    // Use current testCnt to determine if this hook should run\r\n    if (testEnableControl[testCnt] === true) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run setup code before all tests in the current suite.\r\n * **MUST be used within a describe block.** Only executes if any test in the suite is enabled through testEnableControl.\r\n * Used for one-time setup operations like initializing hardware, loading configuration, or establishing database connections.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run before all tests (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('Hardware Integration Tests', () => {\r\n *   // ✅ Correct: before inside describe block\r\n *   before(async () => {\r\n *     await hardware.initialize();\r\n *     await hardware.selfTest();\r\n *   });\r\n *\r\n *   before(() => {\r\n *     config = loadTestConfig('test-settings.json');\r\n *     process.env.TEST_MODE = 'true';\r\n *   });\r\n *\r\n *   test('should connect to ECU', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: before outside describe block\r\n * // before(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function before(fn: () => void | Promise<void>) {\r\n  nodeBefore(async () => {\r\n    // Check if any test is enabled - if so, run the before hook\r\n    const hasEnabledTests = Object.values(testEnableControl).some((enabled) => enabled === true)\r\n    if (hasEnabledTests) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Run cleanup code after all tests in the current suite.\r\n * **MUST be used within a describe block.** Only executes if any test in the suite was enabled through testEnableControl.\r\n * Used for final cleanup operations like closing hardware connections, saving test reports, or cleaning up temporary files.\r\n *\r\n * @category TEST\r\n * @param {Function} fn - Function to run after all tests (can be sync or async)\r\n *\r\n * @example\r\n * ```ts\r\n * describe('System Integration Tests', () => {\r\n *   // ✅ Correct: after inside describe block\r\n *   after(async () => {\r\n *     await hardware.shutdown();\r\n *     await hardware.disconnect();\r\n *   });\r\n *\r\n *   after(() => {\r\n *     saveTestReport(testResults);\r\n *     delete process.env.TEST_MODE;\r\n *     console.log('All tests completed');\r\n *   });\r\n *\r\n *   test('should perform system check', () => {\r\n *     // Test implementation\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: after outside describe block\r\n * // after(() => { // This will not work properly });\r\n * ```\r\n */\r\nexport function after(fn: () => void | Promise<void>) {\r\n  nodeAfter(async () => {\r\n    // Check if any test was enabled - if so, run the after hook\r\n    const hasEnabledTests = Object.values(testEnableControl).some((enabled) => enabled === true)\r\n    if (hasEnabledTests) {\r\n      return preserveErrorStack(fn)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Node.js built-in describe function for creating test groups.\r\n * Aliased to support conditional execution based on environment variables.\r\n *\r\n * @category TEST\r\n */\r\nimport { describe as nodeDescribe } from 'node:test'\r\nimport { VarUpdateItem } from '../global'\r\nimport { DataSet, VarItem } from 'src/preload/data'\r\nimport { workerData } from 'node:worker_threads'\r\nimport { getMessageData, writeMessageData } from 'src/renderer/src/database/dbc/calc'\r\nimport type { Signal } from 'src/renderer/src/database/dbc/dbcVisitor'\r\nimport { SomeipMessageBase, SomeipMessageRequest, SomeipMessageResponse } from './someip'\r\nimport { SomeipMessage, SomeipMessageType } from '../share/someip'\r\nimport { getAllSysVar } from '../share/sysVar'\r\nglobal.dataSet = workerData as DataSet\r\nconst selfDescribe = process.env.ONLY == 'true' ? nodeDescribe.only : nodeDescribe\r\nconst selfTest = process.env.ONLY == 'true' ? nodeTest.only : nodeTest\r\n// export { selfDescribe as describe }\r\n\r\n/**\r\n * Create a test group to organize related test cases.\r\n * **Required container for all test hook functions** (before, after, beforeEach, afterEach).\r\n * Groups tests logically and provides a scope for shared setup/teardown operations.\r\n * Automatically increments test counter for proper test enable control tracking.\r\n *\r\n * @category TEST\r\n * @param {string} name - Test group name that describes the functionality being tested\r\n * @param {Function} fn - Test group function containing test cases and hooks\r\n *\r\n * @example\r\n * ```ts\r\n * // ✅ Correct: All hooks must be inside describe blocks\r\n * describe('CAN Communication Tests', () => {\r\n *   before(async () => {\r\n *     // One-time setup for the entire test suite\r\n *     await hardware.initialize();\r\n *   });\r\n *\r\n *   beforeEach(async () => {\r\n *     // Setup before each test\r\n *     await can.open('kvaser', 0);\r\n *   });\r\n *\r\n *   test('should send CAN message', () => {\r\n *     const result = can.send({ id: 0x123, data: [0x01, 0x02] });\r\n *     assert.equal(result, true);\r\n *   });\r\n *\r\n *   test('should receive CAN message', async () => {\r\n *     const msg = await can.recv(1000);\r\n *     assert.notEqual(msg, null);\r\n *   });\r\n *\r\n *   afterEach(async () => {\r\n *     // Cleanup after each test\r\n *     await can.close();\r\n *   });\r\n *\r\n *   after(() => {\r\n *     // Final cleanup for the entire test suite\r\n *     console.log('All CAN tests completed');\r\n *   });\r\n * });\r\n *\r\n * // ❌ Wrong: Hooks outside describe blocks will not work\r\n * // before(() => { // This is invalid });\r\n * // beforeEach(() => { // This is invalid });\r\n * // test('standalone test', () => { // This works but hooks don't apply });\r\n * ```\r\n */\r\nexport function describe(name: string, fn: () => void | Promise<void>) {\r\n  selfDescribe(name, async (t) => {\r\n    before(() => {\r\n      testCnt++\r\n    })\r\n\r\n    return preserveErrorStack(fn)\r\n  })\r\n}\r\n\r\nconst testerList = ['{{{testerName}}}'] as const\r\nconst serviceList = ['{{{serviceName}}}'] as const\r\nconst allServicesSend = ['{{{serviceName}}}.send'] as const\r\nconst allServicesRecv = ['{{{serviceName}}}.recv'] as const\r\nconst allSignal = ['{{{signalName}}}'] as const\r\nconst allUdsSeq = ['{{{udsSeqName}}}'] as const\r\n\r\ninterface Jobs {\r\n  string: (data: Buffer) => string\r\n}\r\n/**\r\n * All services name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceName = (typeof serviceList)[number]\r\n/**\r\n * All testers name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type TesterName = (typeof testerList)[number]\r\n/**\r\n * All services name(.send) config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceNameSend = (typeof allServicesSend)[number]\r\n/**\r\n * All services name(.recv) config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type ServiceNameRecv = (typeof allServicesRecv)[number]\r\n\r\n/**\r\n * All UDS sequence names configured in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type UdsSeqName = (typeof allUdsSeq)[number]\r\n\r\n/**\r\n * All signals name config in Diagnostic Service.\r\n * @category LIN\r\n * @category CAN\r\n */\r\nexport type SignalName = (typeof allSignal)[number]\r\n\r\n/**\r\n * All variables name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type VariableMap = {\r\n  stub: number\r\n}\r\n\r\n/**\r\n * All jobs name config in Diagnostic Service.\r\n * @category UDS\r\n */\r\nexport type JobName = keyof Jobs\r\ntype ServiceNameAll = ServiceNameSend | ServiceNameRecv\r\n\r\ntype EventMapSend = {\r\n  [key in ServiceNameSend]: DiagRequest\r\n}\r\n\r\ntype EventMapRecv = {\r\n  [key in ServiceNameRecv]: DiagResponse\r\n}\r\n\r\ntype EventMap = EventMapSend & EventMapRecv\r\n\r\nconst emitMap = new Map<number, { resolve: any; reject: any }>()\r\nconst serviceMap = new Map<string, ServiceItem>()\r\n\r\nlet id = 0\r\n/**\r\n * @category UDS\r\n */\r\nexport type ServiceEvent = {\r\n  send: DiagRequest\r\n  recv: DiagResponse\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nclass Service {\r\n  service: ServiceItem\r\n  private params: Param[]\r\n  private isRequest: boolean\r\n  testerName: string\r\n  constructor(testerName: string, service: ServiceItem, isRequest: boolean) {\r\n    this.testerName = testerName\r\n    this.service = service\r\n    this.isRequest = isRequest\r\n    if (isRequest) {\r\n      this.params = this.service.params\r\n    } else {\r\n      this.params = this.service.respParams\r\n    }\r\n  }\r\n  valueOf() {\r\n    return this.isRequest\r\n      ? getTxPdu(this.service).toString('hex')\r\n      : getRxPdu(this.service).toString('hex')\r\n  }\r\n  /**\r\n   * Sync service params to tester sequence, after change, the sequence params will be updated.\r\n   *\r\n   * @returns {Promise<void>} A promise that resolves when the event has been emitted.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(async () => {\r\n   *    const testService0 = DiagRequest.from('Can.testService')\r\n   *    testService.diagSetParameter('key', 0x01)\r\n   *    const testService1 = DiagRequest.from('Can.testService')\r\n   *    console.log(testService0 == testService1) // false\r\n   *    await testService0.syncService()\r\n   *    const testService2 = DiagRequest.from('Can.testService')\r\n   *    console.log(testService0 == testService2) // true\r\n   *\r\n   * })\r\n   * ```\r\n   */\r\n  async changeService() {\r\n    await this.asyncEmit('set', {\r\n      service: this.service,\r\n      isRequest: this.isRequest,\r\n      testerName: this.testerName\r\n    })\r\n    serviceMap.set(this.getServiceName(), this.service)\r\n  }\r\n  /**\r\n   * Subscribe to an event. When the event occurs, the listener function will be invoked.\r\n   *\r\n   * The valid event name should be:\r\n   * - `'send'`: will be happen before the msg is send\r\n   * - `'recv'`: will be happen when the response msg is recv\r\n   *\r\n   * @param event The event to be listened.\r\n   * @param listener the function when event\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *     testService.On('send', ()=>{\r\n   *         console.log('send event happened.')\r\n   *     })\r\n   *\r\n   *     testService.On('recv', ()=>{\r\n   *         console.log('recv event happened.')\r\n   *     })\r\n   * })\r\n   * ```\r\n   */\r\n  On<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.On(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  /**\r\n   * Subscribe to an event, only once.\r\n   *\r\n   * @param event - The event type.\r\n   * @param listener - The function to subscribe.\r\n   */\r\n  Once<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.OnOnce(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  /**\r\n   * Unsubscribe from an event.\r\n   * \r\n   * @param event - The event type.\r\n   * @param listener - The function to unsubscribe.\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     testService.On('send', () => {\r\n   *         console.log('send event happened.');\r\n   *     });\r\n   \r\n   *     // The following code will not work\r\n   *     testService.Off('send', () => {\r\n   *         console.log('send event happened.');\r\n   *     });\r\n   * });\r\n   * ```\r\n   * \r\n   * > **Note**: To unsubscribe from an event, you must provide a non-anonymous function.\r\n   */\r\n  Off<T extends keyof ServiceEvent>(\r\n    event: T,\r\n    listener: (data: ServiceEvent[T]) => void | Promise<void>\r\n  ) {\r\n    Util.Off(`${this.getServiceName()}.${event}` as any, listener)\r\n  }\r\n  private async asyncEmit(event: string, data: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      workerpool.workerEmit({\r\n        id: id,\r\n        event: event,\r\n        data: data\r\n      })\r\n      emitMap.set(id, { resolve, reject })\r\n      id++\r\n    })\r\n  }\r\n  /**\r\n   * This function will return the service name\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('ServiceName:', testService.getServiceName())\r\n   * })\r\n   * ```\r\n   */\r\n  getServiceName() {\r\n    return `${this.testerName}.${this.service.name}`\r\n  }\r\n\r\n  /**\r\n   * This function will return the service describe setting in Service.\r\n   * @returns service describe.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('Desc:', testService.getServiceDesc())\r\n   * })\r\n   * ```\r\n   */\r\n  getServiceDesc() {\r\n    return this.service.desc\r\n  }\r\n\r\n  /**\r\n   * This function will return the value of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns param value\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID Buffer:', testService.diagGetParameter('SERVICE-ID'))\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetParameter(paramName: string): string | number {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return param.phyValue\r\n    } else {\r\n      throw new Error(\r\n        `param ${paramName} not found in ${this.isRequest ? 'DiagRequest' : 'DiagResponse'} ${this.service.name}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will return the `Buffer` of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns `Buffer` value of provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID:', testService.diagGetParameterRaw('SERVICE-ID'))\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetParameterRaw(paramName: string): Buffer {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return Buffer.from(param.value)\r\n    } else {\r\n      throw new Error(\r\n        `param ${paramName} not found in ${this.isRequest ? 'DiagRequest' : 'DiagResponse'} ${this.service.name}`\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will return the bit size of the provided parameter.\r\n   * @param paramName param name\r\n   * @returns param bit size\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('SERVICE-ID Size:', testService.diagGetParameterSize('SERVICE-ID'))\r\n   * })\r\n   */\r\n  diagGetParameterSize(paramName: string): number {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      return param.bitLen\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function returns the names of all parameters associated with the given diag.\r\n   *\r\n   * @returns {string[]} An array of strings storing the names of all parameters.\r\n   *\r\n   * @example\r\n   *\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     console.log('parameter names:', testService.diagGetParameterNames())\r\n   * })\r\n   */\r\n  diagGetParameterNames(): string[] {\r\n    return this.params.map((item) => item.name)\r\n  }\r\n\r\n  /**\r\n   * This function will change the parameter's bit size.\r\n   * @param paramName parameter name\r\n   * @param bitLen new bit size of the provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * > It is only advisable to specify the size of num and array parameters.\r\n   *\r\n   * ```ts\r\n   * Util.Init(()=>{\r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *     // array parameter\r\n   *     console.log('arrayParam bit size:', testService.diagGetParameterSize('arrayParam'))\r\n   *     testService.diagSetParameterSize('arrayParam', 64)\r\n   *     console.log('arrayParam bit size:', testService.diagGetParameterSize('arrayParam'))\r\n   *\r\n   *     // num parameter\r\n   *     console.log('numParam bit size:', testService.diagGetParameterSize('numParam'))\r\n   *     testService.diagSetParameterSize('numParam', 16)\r\n   *     console.log('numParam bit size:', testService.diagGetParameterSize('numParam'))\r\n   *\r\n   *     console.log('ascii bit size:', testService.diagGetParameterSize('asciiParam'))\r\n   *     testService.diagSetParameterSize('asciiParam', 16)\r\n   *     console.log('ascii bit size:', testService.diagGetParameterSize('asciiParam'))\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  diagSetParameterSize(paramName: string, bitLen: number) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetSize(param, bitLen)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function will change the provided parameter's value.\r\n   * @param paramName parameter's name need to be changed.\r\n   * @param value new value of the provided parameter.\r\n   *\r\n   * @example\r\n   *\r\n   * > Add relative param in Service.\r\n   *\r\n   * 1. **array parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         console.log('arrayParam:', testService.diagGetParameter('arrayParam'))\r\n   *         testService.diagSetParameter('arrayParam', '12 34 56 78')\r\n   *         console.log('arrayParam:', testService.diagGetParameter('arrayParam'))\r\n   *     })\r\n   *     ```\r\n   *\r\n   * 2. **num parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameter('numParam'))\r\n   *         testService.diagSetParameter('numParam', '12')\r\n   *         console.log('set parameter with str:', testService.diagGetParameter('numParam'))\r\n   *         testService.diagSetParameter('numParam', 99)\r\n   *         console.log('set parameter with number:', testService.diagGetParameter('numParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameterSize('numParam', 16)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameter('numParam', '257')\r\n   *         console.log('set parameter with str', testService.diagGetParameterRaw('numParam'))\r\n   *         testService.diagSetParameter('numParam', 65534)\r\n   *         console.log('set parameter with number', testService.diagGetParameterRaw('numParam'))\r\n   *     })\r\n   *     ```\r\n   * 3. **ascii parameter**\r\n   *\r\n   *     > The ascii parameter formats the input value into a string. It is advisable to avoid using numbers as input.\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         testService.diagSetParameter('asciiParam', 'A')\r\n   *         console.log('set parameter with str:', testService.diagGetParameterRaw('asciiParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('8 bits num:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         await testService.diagSetParameterSize('asciiParam', 16)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameterRaw('asciiParam'))\r\n   *         await testService.diagSetParameter('asciiParam', 'AB')\r\n   *         console.log('set parameter with str', testService.diagGetParameterRaw('asciiParam'))\r\n   *     })\r\n   *     ```\r\n   * 4. **unicode parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('24 bits num:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameter('unicodeParam', '❤')\r\n   *         console.log('set parameter with str:', testService.diagGetParameter('unicodeParam'))\r\n   *\r\n   *         // 16 bit number\r\n   *         console.log('48 bits num:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameterSize('unicodeParam', 48)\r\n   *         console.log('change size to 16 bits:', testService.diagGetParameter('unicodeParam'))\r\n   *         testService.diagSetParameter('unicodeParam', '❤️')\r\n   *         console.log('set parameter with str', testService.diagGetParameter('unicodeParam'))\r\n   *     })\r\n   *     ```\r\n   *\r\n   * 5. **float parameter**\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *\r\n   *         // 8 bit number\r\n   *         console.log('32 bits num:', testService.diagGetParameter('floatParam'))\r\n   *         testService.diagSetParameter('floatParam', 0.12345)\r\n   *         console.log('set parameter with float:', testService.diagGetParameter('floatParam'))\r\n   *     })\r\n   *     ```\r\n   */\r\n  diagSetParameter(paramName: string, value: string | number) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetVal(param, value)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n  /**\r\n   * This function will change the provided parameter's value with provided `Buffer` value.\r\n   * \r\n   * @param paramName parameter's name need to be changed.\r\n   * @param {Buffer} value new `Buffer` value of the provided parameter.\r\n   * \r\n   * @example\r\n   * \r\n   * > Add relative param in Service.\r\n   * \r\n   * This function modifies the value of a parameter using a Buffer. The Buffer's value will be transferred at the TP layer.\r\n   * You can generate a Buffer using the following methods:\r\n   * \r\n   * ```ts\r\n   * const newValue1 = Buffer.from([0x12, 0x34, 0x56, 0x78]);\r\n   * \r\n   * const newValue2 = Buffer.alloc(4);\r\n   * newValue2.writeUInt8(0x01, 0);\r\n   * newValue2.writeUInt8(0x02, 1);\r\n   * newValue2.writeUInt8(0x03, 2);\r\n   * newValue2.writeUInt8(0x04, 3);\r\n   * \r\n   * const newValue3 = Buffer.from('11223344', 'hex');\r\n   * ```\r\n   * \r\n   * To modify an array parameter, you can use the following example:\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     \r\n   *     console.log('arrayParam:', testService.diagGetParameter('arrayParam'));\r\n   *     const newValue1 = Buffer.from([0x12, 0x34, 0x56, 0x78]);\r\n   * \r\n   *     testService.diagSetParameterRaw('arrayParam', newValue1);\r\n   *     console.log('arrayParam:', testService.diagGetParameter('arrayParam'));\r\n   * });\r\n   * ```\r\n   * \r\n   * > For more examples on changing different parameter types, please refer to the {@link diagSetParameter | `diagSetParameter`} function.\r\n   * \r\n   */\r\n  diagSetParameterRaw(paramName: string, value: Buffer) {\r\n    const param = this.params.find((item) => item.name === paramName)\r\n    if (param) {\r\n      paramSetValRaw(param, value)\r\n    } else {\r\n      throw new Error(`param ${paramName} not found in DiagRequest ${this.service.name}`)\r\n    }\r\n  }\r\n  /**\r\n   * Sends a diagnostic output command to the specified device.\r\n   *\r\n   * @param deviceName - The name of the device to send the diagnostic command to.\r\n   * @param addressName - The address name associated with the device.\r\n   * @returns The diagnostic output timestamp.\r\n   */\r\n  async outputDiag(deviceName?: string, addressName?: string): Promise<number> {\r\n    const ts = await this.asyncEmit('sendDiag', {\r\n      device: deviceName,\r\n      address: addressName,\r\n      service: this.service,\r\n      isReq: this.isRequest,\r\n      testerName: this.testerName\r\n    })\r\n    return ts\r\n  }\r\n\r\n  /**\r\n   * This function modifies all values of a service.\r\n   * \r\n   * @param data - The new data's buffer value.\r\n   * \r\n   * @example\r\n   * \r\n   * This function is typically used by a job to modify all data of a service. The following code demonstrates how to generate a new service and set its raw data:\r\n   * \r\n   * ```ts\r\n   * Util.Register('Can.testJob', async (v) => {\r\n   *     //create a new DiagRequest in Can tester\r\n   *     const testService = new DiagRequest('Can');\r\n   *     const newData = Buffer.from([0x10, 0x01, 0x00, 0x01, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   *     return [testService];\r\n   * });\r\n   * ```\r\n   * \r\n   * > - Ensure that the job `Can.testJob` is already configured in Service.\r\n   * > - The return type of a job should be a array.\r\n   * \r\n   * You can also modify the raw data of an existing service with the following code:\r\n   * \r\n   * ```ts\r\n   * Util.Init(() => {\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService');\r\n   *     const newData = Buffer.from([0x10, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   * });\r\n   * ```\r\n   * \r\n   *\r\n   * > - Ensure that the service `Can.testService` is already configured in Service.\r\n   * > - The new raw data size should be equal to the old raw data size.\r\n   */\r\n  diagSetRaw(data: Buffer) {\r\n    applyBuffer(this.service, data, this.isRequest)\r\n  }\r\n\r\n  /**\r\n   * This function will return a raw data of one service.\r\n   * @returns raw data of one service.\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Init(()=>{\r\n  \r\n   *     const testService = DiagRequest.from('Can.testService')\r\n   *     console.log('get raw data:', testService.diagGetRaw())\r\n   * })\r\n   * ```\r\n   */\r\n  diagGetRaw() {\r\n    if (this.isRequest) {\r\n      return getTxPdu(this.service)\r\n    } else {\r\n      return getRxPdu(this.service)\r\n    }\r\n  }\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagJob extends Service {\r\n  constructor(testerName: string, service: ServiceItem) {\r\n    super(testerName, cloneDeep(service), true)\r\n  }\r\n  from(jobName: keyof Jobs) {\r\n    const testerName = jobName.split('.')[0]\r\n    const service = serviceMap.get(jobName)\r\n    if (service && checkServiceId(service.serviceId, ['job'])) {\r\n      return new DiagJob(testerName, service)\r\n    } else {\r\n      throw new Error(`job ${jobName} not found`)\r\n    }\r\n  }\r\n}\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagResponse extends Service {\r\n  private addr?: UdsAddress\r\n  constructor(testerName: string, service: ServiceItem, addr?: UdsAddress) {\r\n    super(testerName, cloneDeep(service), false)\r\n    this.addr = addr\r\n  }\r\n  /**\r\n   * Get the UDS address of the response. The address may be undefined if not set.\r\n   * @returns {UdsAddress | undefined} The UDS address if set, undefined otherwise\r\n   */\r\n  getUdsAddress() {\r\n    return this.addr\r\n  }\r\n  /**\r\n   * @param {string} serviceName\r\n   *\r\n   * > serviceName's type '{{{serviceName}}}' is the string configured by Service.\r\n   *\r\n   * @example\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *         testService.On('send', ()=>{\r\n   *             console.log('send event happened.')\r\n   *         })\r\n   *     }\r\n   *     ```\r\n   */\r\n  static from(serviceName: ServiceName) {\r\n    const testerName = serviceName.split('.')[0]\r\n    const service = serviceMap.get(serviceName)\r\n    if (service && checkServiceId(service.serviceId, ['uds'])) {\r\n      return new DiagResponse(testerName, service)\r\n    } else {\r\n      throw new Error(`service ${serviceName} not found`)\r\n    }\r\n  }\r\n  /**\r\n   * @param {DiagRequest} req\r\n   * @returns {DiagResponse}\r\n   *\r\n   * > req's type '{{{DiagRequest}}}' is the DiagRequest object.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.send', (v)=>{\r\n   *     const response = DiagResponse.fromDiagRequest(v)\r\n   * })\r\n   * ```\r\n   */\r\n  static fromDiagRequest(req: DiagRequest) {\r\n    return new DiagResponse(req.testerName, req.service)\r\n  }\r\n  /**\r\n   * This function will return whether the response is a positive response or not.\r\n   * @returns bool\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.recv', (v)=>{\r\n   *     console.log('response is positive:', v.diagIsPositiveResponse())\r\n   * })\r\n   * ```\r\n   *\r\n   */\r\n  diagIsPositiveResponse() {\r\n    return !this.service.isNegativeResponse\r\n  }\r\n  /**\r\n   * This function will return the response code of one response.\r\n   *\r\n   * > **NOTE**: Positive response does not have response code.\r\n   *\r\n   * @returns response code.\r\n   *\r\n   * @example\r\n   *\r\n   * // here testService2 is a RequestDownload(0x34) service\r\n   * Util.On('Can.testService2.recv', (v)=>{\r\n   *     console.log('response code', v.diagGetResponseCode())\r\n   * })\r\n   *\r\n   */\r\n  diagGetResponseCode() {\r\n    if (!this.diagIsPositiveResponse()) {\r\n      return this.service.nrc\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category UDS\r\n */\r\nexport class DiagRequest extends Service {\r\n  private addr?: UdsAddress\r\n  constructor(testerName: string, service: ServiceItem, addr?: UdsAddress) {\r\n    super(testerName, cloneDeep(service), true)\r\n    this.addr = addr\r\n  }\r\n  /**\r\n   * Get the UDS address of the request.\r\n   * @returns {UdsAddress | undefined} The UDS address if set, undefined otherwise\r\n   */\r\n  getUdsAddress() {\r\n    return this.addr\r\n  }\r\n  /**\r\n   * @param {string} serviceName\r\n   *\r\n   * > serviceName's type '{{{serviceName}}}' is the string configured by Service.\r\n   *\r\n   * @example\r\n   *\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *         // add param arrayParam in Service.\r\n   *         const testService = DiagRequest.from('Can.testService')\r\n   *         testService.On('send', ()=>{\r\n   *             console.log('send event happened.')\r\n   *         })\r\n   *     }\r\n   *     ```\r\n   */\r\n  static from(serviceName: ServiceName) {\r\n    const testerName = serviceName.split('.')[0]\r\n    const service = serviceMap.get(serviceName)\r\n    //request can accept job\r\n    if (service) {\r\n      return new DiagRequest(testerName, service)\r\n    } else {\r\n      throw new Error(`service ${serviceName} not found`)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @category Util\r\n */\r\nexport class UtilClass {\r\n  private isMain = workerpool.isMainThread\r\n  private event = new Emittery<EventMap>()\r\n  private funcMap = new Map<Function, any>()\r\n  private testerName?: string\r\n  /**\r\n   * Register a handler function for a job.\r\n   * @param jobs \r\n   * Job name, valid format is \\<tester name\\>.\\<job name\\>\r\n   * @param func \r\n   * Handler function for the job\r\n   * \r\n   * @example\r\n   * \r\n   * ```ts\r\n   * Util.Register('Can.testJob', async (v) => {\r\n  \r\n   *     const testService = new DiagRequest();\r\n   *     const newData = Buffer.from([0x10, 0x01, 0x00, 0x01, 0x02]);\r\n   *     await testService.diagSetRaw(newData);\r\n   *     return [testService];\r\n   * });\r\n   * ```\r\n   */\r\n  Register(jobs: JobName, func: Jobs[keyof Jobs]) {\r\n    if (!this.isMain) {\r\n      workerpool.worker({\r\n        [jobs]: async (...args: any[]) => {\r\n          const cargs = args.map((item) => {\r\n            if (item instanceof Uint8Array) {\r\n              return Buffer.from(item)\r\n            } else {\r\n              return item\r\n            }\r\n          })\r\n          const v = await (func as any)(...cargs)\r\n          if (Array.isArray(v)) {\r\n            //each item must be DiagRequest\r\n            if (v.every((item) => item instanceof DiagRequest || item instanceof DiagJob)) {\r\n              return v.map((item) => item.service)\r\n            } else {\r\n              throw new Error('return value must be array of DiagRequest')\r\n            }\r\n          } else {\r\n            throw new Error('return value must be array of DiagRequest')\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  private async workerOn(event: ServiceNameAll, data: any): Promise<boolean> {\r\n    if (this.event.listenerCount(event) > 0) {\r\n      await this.event.emit(event, data)\r\n      if (event.endsWith('.send') || event.endsWith('.recv')) {\r\n        const eventArray = event.split('.')\r\n        eventArray[1] = '*'\r\n        await this.event.emit(eventArray.join('.') as any, data)\r\n      }\r\n      return true\r\n    } else if (event.endsWith('.send') || event.endsWith('.recv')) {\r\n      const eventArray = event.split('.')\r\n      eventArray[1] = '*'\r\n      if (this.event.listenerCount(eventArray.join('.') as any) > 0) {\r\n        await this.event.emit(eventArray.join('.') as any, data)\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for CAN messages.\r\n   *\r\n   * @param id - The CAN message ID to listen for. If `true`, listens for all CAN messages.\r\n   * @param fc - The callback function to be invoked when a CAN message is received.\r\n   */\r\n  OnCan(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.on('can' as any, fc)\r\n    } else {\r\n      this.event.on(`can.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for signal updates from CAN/LIN databases.\r\n   * The signal will be emitted whenever the specified signal value changes.\r\n   *\r\n   * @param signal - The signal name to listen for (format: \"database.signalName\")\r\n   * @param fc - The callback function invoked when the signal is updated\r\n   * @param fc.rawValue - The raw signal value (number or Buffer)\r\n   * @param fc.physValue - The physical/scaled signal value (could be enum string or scaled number)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Listen for engine RPM signal updates\r\n   * OnSignal(\"Engine.EngineRPM\", ({ rawValue, physValue }) => {\r\n   *   console.log(`Engine RPM: ${physValue} (raw: ${rawValue})`)\r\n   * })\r\n   *\r\n   * // Listen for gear position signal with enum values\r\n   * OnSignal(\"Transmission.GearPosition\", ({ rawValue, physValue }) => {\r\n   *   console.log(`Gear: ${physValue}`) // Could be \"Park\", \"Drive\", \"Reverse\", etc.\r\n   * })\r\n   *\r\n   * // Async callback example\r\n   * OnSignal(\"Battery.Voltage\", async ({ rawValue, physValue }) => {\r\n   *   if (physValue < 12.0) {\r\n   *     await sendWarning(\"Low battery voltage detected!\")\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\r\n  OnSignal(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.on(signal as any, fc)\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener for signal updates from CAN/LIN databases.\r\n   * The listener will be automatically removed after the first signal update.\r\n   *\r\n   * @param signal - The signal name to listen for (format: \"database.signalName\")\r\n   * @param fc - The callback function invoked when the signal is updated (only once)\r\n   * @param fc.rawValue - The raw signal value (number or Buffer)\r\n   * @param fc.physValue - The physical/scaled signal value (could be enum string or scaled number)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Wait for the first engine start signal\r\n   * OnSignalOnce(\"Engine.EngineStatus\", ({ rawValue, physValue }) => {\r\n   *   if (physValue === \"Running\") {\r\n   *     console.log(\"Engine started successfully!\")\r\n   *   }\r\n   * })\r\n   *\r\n   * // Wait for initialization complete signal\r\n   * OnSignalOnce(\"System.InitStatus\", async ({ rawValue, physValue }) => {\r\n   *   if (physValue === \"Complete\") {\r\n   *     await startDiagnosticSequence()\r\n   *   }\r\n   * })\r\n   * ```\r\n   */\r\n  OnSignalOnce(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.once(signal as any).then(fc)\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener for signal updates from CAN/LIN databases.\r\n   * The specified callback function will no longer be invoked for signal updates.\r\n   *\r\n   * @param signal - The signal name to stop listening for (format: \"database.signalName\")\r\n   * @param fc - The exact callback function to remove (must be the same reference)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * // Define a callback function\r\n   * const rpmCallback = ({ rawValue, physValue }) => {\r\n   *   console.log(`RPM: ${physValue}`)\r\n   * }\r\n   *\r\n   * // Register the listener\r\n   * OnSignal(\"Engine.EngineRPM\", rpmCallback)\r\n   *\r\n   * // Later, remove the listener\r\n   * OffSignal(\"Engine.EngineRPM\", rpmCallback)\r\n   *\r\n   * // Anonymous functions cannot be removed easily, so use named functions:\r\n   * // ❌ This won't work for removal:\r\n   * // OnSignal(\"Engine.RPM\", ({ physValue }) => console.log(physValue))\r\n   *\r\n   * // ✅ This will work for removal:\r\n   * const callback = ({ physValue }) => console.log(physValue)\r\n   * OnSignal(\"Engine.RPM\", callback)\r\n   * OffSignal(\"Engine.RPM\", callback)\r\n   * ```\r\n   */\r\n  OffSignal(\r\n    signal: SignalName,\r\n    fc: ({\r\n      rawValue,\r\n      physValue\r\n    }: {\r\n      rawValue: number | Buffer\r\n      physValue: any\r\n    }) => void | Promise<void>\r\n  ) {\r\n    this.event.off(signal as any, fc)\r\n  }\r\n  /**\r\n   * Get the tester name, valid in Tester script\r\n   * @returns {string}\r\n   */\r\n  getTesterName() {\r\n    return this.testerName\r\n  }\r\n  /**\r\n   * Registers an event listener for CAN messages that will be invoked once.\r\n   *\r\n   * @param id - The CAN message ID to listen for. If `true`, listens for all CAN messages.\r\n   * @param fc - The callback function to be invoked when a CAN message is received.\r\n   */\r\n  OnCanOnce(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.once('can' as any).then(fc)\r\n    } else {\r\n      this.event.once(`can.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from CAN messages.\r\n   *\r\n   * @param id - The identifier of the CAN message to unsubscribe from. If `true`, unsubscribes from all CAN messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffCan(id: number | true, fc: (msg: CanMessage) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.off('can' as any, fc)\r\n    } else {\r\n      this.event.off(`can.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for LIN messages that will be invoked once.\r\n   *\r\n   * @param id - The LIN message ID or ${databaseName}.${frameName} to listen for. If `true`, listens for all LIN messages.\r\n   * @param fc - The callback function to be invoked when a LIN message is received.\r\n   */\r\n  OnLinOnce(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.once('lin' as any).then(fc)\r\n    } else {\r\n      this.event.once(`lin.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for LIN messages.\r\n   *\r\n   * @param id - The LIN message ID or ${databaseName}.${frameName} to listen for. If `true`, listens for all LIN messages.\r\n   * @param fc - The callback function to be invoked when a LIN message is received.\r\n   */\r\n  OnLin(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.on('lin' as any, fc)\r\n    } else {\r\n      this.event.on(`lin.${id}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from LIN messages.\r\n   *\r\n   * @param id - The identifier of the LIN message to unsubscribe from. If `true`, unsubscribes from all LIN messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffLin(id: number | string | true, fc: (msg: LinMsg) => void | Promise<void>) {\r\n    if (id === true) {\r\n      this.event.off('lin' as any, fc)\r\n    } else {\r\n      this.event.off(`lin.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener for SOMEIP messages.\r\n   *\r\n   * @param id - The SOMEIP message identifier in format \"service.instance.method\" or \"service.instance.*\". If `true`, listens for all SOMEIP messages.\r\n   * @param fc - The callback function to be invoked when a SOMEIP message is received.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen for all SOMEIP messages\r\n   * Util.OnSomeipMessage(true, (msg) => {\r\n   *   console.log('Received SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen for specific service/instance/method\r\n   * Util.OnSomeipMessage('0034.5678.90ab', (msg) => {\r\n   *   console.log('Received specific SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen for specific service/wildcard\r\n   * Util.OnSomeipMessage('0034.*.*', (msg) => {\r\n   *   console.log('Received specific SOMEIP message:', msg);\r\n   * });\r\n   * ```\r\n   */\r\n  OnSomeipMessage(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.on('someip' as any, fc)\r\n    } else {\r\n      this.event.on(`someip.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes from SOMEIP messages.\r\n   *\r\n   * @param id - The SOMEIP message identifier to unsubscribe from. If `true`, unsubscribes from all SOMEIP messages.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * const handler = (msg) => console.log(msg);\r\n   *\r\n   * // Unsubscribe from all SOMEIP messages\r\n   * Util.OffSomeipMessage(true, handler);\r\n   *\r\n   * // Unsubscribe from specific service/instance/method\r\n   * Util.OffSomeipMessage('1234.5678.90ab', handler);\r\n   * ```\r\n   */\r\n  OffSomeipMessage(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.off('someip' as any, fc)\r\n    } else {\r\n      this.event.off(`someip.${id}` as any, fc)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener for SOMEIP messages.\r\n   * The listener will be automatically removed after being invoked once.\r\n   *\r\n   * @param id - The SOMEIP message identifier in format \"service.instance.method\" or \"service.instance.*\". If `true`, listens for all SOMEIP messages.\r\n   * @param fc - The callback function to be invoked once when a SOMEIP message is received.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen once for any SOMEIP message\r\n   * Util.OnSomeipMessageOnce(true, (msg) => {\r\n   *   console.log('Received one SOMEIP message:', msg);\r\n   * });\r\n   *\r\n   * // Listen once for specific service/instance/method\r\n   * Util.OnSomeipMessageOnce('1234.5678.90ab', (msg) => {\r\n   *   console.log('Received one specific SOMEIP message:', msg);\r\n   * });\r\n   * ```\r\n   */\r\n  OnSomeipMessageOnce(\r\n    id: string | true,\r\n    fc: (msg: SomeipMessageRequest | SomeipMessageResponse) => void | Promise<void>\r\n  ) {\r\n    if (id === true) {\r\n      this.event.once('someip' as any).then(fc)\r\n    } else {\r\n      this.event.once(`someip.${id}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a specific key.\r\n   *\r\n   * @param key - The key to listen for. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the event is triggered.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   */\r\n  OnKey(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.on(`keyDown${key}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a specific key that will be invoked once.\r\n   *\r\n   * @param key - The key to listen for. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the event is triggered.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   */\r\n  OnKeyOnce(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.once(`keyDown${key}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from an event listener for a specific key.\r\n   *\r\n   * @param key - The key to unsubscribe from. Only the first character of the key is used, * is a wildcard.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffKey(key: string, fc: (key: string) => void | Promise<void>) {\r\n    key = key.slice(0, 1)\r\n    if (key) {\r\n      this.event.off(`keyDown${key}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a variable update.\r\n   *\r\n   * @param name - The name of the variable to listen for, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the variable is updated.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   *             The callback receives an object with name and value properties.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Listen for updates to a specific variable\r\n   * Util.OnVar('temperature', ({name, value}) => {\r\n   *   console.log(`${name} changed to ${value}`);\r\n   * });\r\n   *\r\n   * // Listen for all variable updates using wildcard\r\n   * Util.OnVar('*', ({name, value}) => {\r\n   *   console.log(`Variable ${name} updated to ${value}`);\r\n   * });\r\n   * ```\r\n   */\r\n  OnVar<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.on(`varUpdate${name}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Registers an event listener for a variable update that will be invoked once.\r\n   *\r\n   * @param name - The name of the variable to listen for, * is a wildcard.\r\n   * @param fc - The callback function to be executed when the variable is updated.\r\n   *             This can be a synchronous function or a function returning a Promise.\r\n   *             The callback receives an object with name and value properties.\r\n   */\r\n  OnVarOnce<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.once(`varUpdate${name}` as any).then(fc)\r\n    }\r\n  }\r\n  /**\r\n   * Unsubscribes from an event listener for a variable update.\r\n   *\r\n   * @param name - The name of the variable to unsubscribe from, * is a wildcard.\r\n   * @param fc - The callback function to remove from the event listeners.\r\n   */\r\n  OffVar<Name extends keyof VariableMap>(\r\n    name: Name,\r\n    fc: ({ name, value }: { name: Name; value: VariableMap[Name] }) => void | Promise<void>\r\n  ) {\r\n    if (name) {\r\n      this.event.off(`varUpdate${name}` as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Subscribe to an event once, invoking the registered function when the event is emitted.\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be called when the event is emitted\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.OnOnce('Can.testService.send', async (req) => {\r\n   *    // The req is a `DiagRequest`\r\n   *    console.log(req.getServiceName(), ': send once');\r\n   * });\r\n   * ```\r\n   */\r\n  OnOnce<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    if (eventName.endsWith('.send')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const req = new DiagRequest(testerName, v.service, v.addr)\r\n        await listener(req as any)\r\n      }\r\n      this.event.once(eventName).then(warpFunc)\r\n    } else if (eventName.endsWith('.recv')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const resp = new DiagResponse(testerName, v.service, v.addr)\r\n        await listener(resp as any)\r\n      }\r\n      this.event.once(eventName).then(warpFunc)\r\n    } else {\r\n      throw new Error(`event ${eventName} not support`)\r\n    }\r\n  }\r\n  /**\r\n   * Subscribe to an event, invoking the registered function when the event is emitted.\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be called when the event is emitted\r\n   *\r\n   * @example\r\n   *\r\n   * > The `UDS` is a UDSClass type and has already been created by Service.\r\n   *\r\n   * 1. *send functions*\r\n   *\r\n   *     ```ts\r\n   *     Util.On('Can.testService.send', async (req) => {\r\n   *        // The req is a `DiagRequest`\r\n   *        console.log(req.getServiceName(), ': send');\r\n   *     });\r\n   *     ```\r\n   * 2. *recv function*\r\n   *\r\n   *     ```ts\r\n   *     Util.On('Can.testService.recv', async (req) => {\r\n   *        // The req is a `DiagResponse`\r\n   *        console.log(req.getServiceName(), ':recv');\r\n   *     });\r\n   *     ```\r\n   *\r\n   */\r\n  On<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    if (eventName.endsWith('.send')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const req = new DiagRequest(testerName, v.service, v.addr)\r\n        await listener(req as any)\r\n      }\r\n      this.event.on(eventName, warpFunc)\r\n      this.funcMap.set(listener, warpFunc)\r\n    } else if (eventName.endsWith('.recv')) {\r\n      const warpFunc = async (v: any) => {\r\n        const testerName = eventName.split('.')[0]\r\n        const resp = new DiagResponse(testerName, v.service, v.addr)\r\n        await listener(resp as any)\r\n      }\r\n      this.event.on(eventName, warpFunc)\r\n      this.funcMap.set(listener, warpFunc)\r\n    } else {\r\n      throw new Error(`event ${eventName} not support`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from an event.\r\n   *\r\n   * > Only non-anonymous functions can be unsubscribed.\r\n   *\r\n   * @param eventName\r\n   * Service name, formatted as \\<tester name\\>.\\<service name\\>.\\<send|recv\\>\r\n   *\r\n   * @param listener\r\n   * Function to be unsubscribed\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * Util.On('Can.testService.send', ()=>{\r\n   *     console.log('this function will not be Off')\r\n   * })\r\n   *\r\n   * Util.Off('Can.testService.send', ()=>{\r\n   *     console.log('this function will not be Off')\r\n   * })\r\n   *\r\n   * ```\r\n   *\r\n   */\r\n  Off<Name extends keyof EventMap>(\r\n    eventName: Name,\r\n    listener: (eventData: EventMap[Name]) => void | Promise<void>\r\n  ) {\r\n    const func = this.funcMap.get(listener)\r\n    if (func) {\r\n      this.event.off(eventName, func)\r\n    }\r\n  }\r\n  private start(\r\n    val: Record<string, ServiceItem>,\r\n    testerName?: string,\r\n    testControl?: Record<number, boolean>\r\n  ) {\r\n    // process.chdir(projectPath)\r\n    this.testerName = testerName\r\n    global.vars = {}\r\n    if (global.dataSet) {\r\n      const vars: Record<string, VarItem> = cloneDeep(global.dataSet.vars)\r\n      const sysVars = getAllSysVar(\r\n        global.dataSet.devices,\r\n        global.dataSet.tester,\r\n        global.dataSet.database.orti\r\n      )\r\n      for (const v of Object.values(sysVars)) {\r\n        vars[v.id] = cloneDeep(v)\r\n      }\r\n      for (const key of Object.keys(vars)) {\r\n        const v = vars[key]\r\n\r\n        if (v.value) {\r\n          const parentName: string[] = []\r\n\r\n          // 递归查找所有父级名称\r\n          let currentVar = v\r\n          while (currentVar.parentId) {\r\n            const parent = vars[currentVar.parentId]\r\n            if (parent) {\r\n              parentName.unshift(parent.name) // 将父级名称添加到数组开头\r\n              currentVar = parent\r\n            } else {\r\n              break\r\n            }\r\n          }\r\n\r\n          parentName.push(v.name)\r\n          v.name = parentName.join('.')\r\n        }\r\n        global.vars[key] = v\r\n      }\r\n    }\r\n    for (const key of Object.keys(val)) {\r\n      //convert all param.value to buffer\r\n      const service = val[key]\r\n      for (const param of service.params) {\r\n        param.value = Buffer.from(param.value)\r\n      }\r\n      for (const param of service.respParams) {\r\n        param.value = Buffer.from(param.value)\r\n      }\r\n      serviceMap.set(key, service)\r\n    }\r\n    if (testControl) {\r\n      Object.assign(testEnableControl, testControl)\r\n    }\r\n  }\r\n  private async canMsg(msg: CanMessage) {\r\n    await this.event.emit(`can.${msg.id}` as any, msg)\r\n    await this.event.emit('can' as any, msg)\r\n    //signal emit\r\n\r\n    if (msg.device) {\r\n      const device = Object.values(global.dataSet.devices).find(\r\n        (device) => device.canDevice && device.canDevice.name == msg.device\r\n      )\r\n      if (device && device.canDevice!.database) {\r\n        const db = global.dataSet.database.can[device.canDevice!.database]\r\n        if (db) {\r\n          const message = db.messages[msg.id]\r\n          if (message) {\r\n            //apply message to signal\r\n            writeMessageData(message, msg.data, db)\r\n            //emit signal\r\n            for (const signal of Object.values(message.signals)) {\r\n              await this.event.emit(`${db.name}.${signal.name}` as any, {\r\n                rawValue: signal.value,\r\n                physValue: signal.physValueEnum || signal.physValue\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private async linMsg(msg: LinMsg) {\r\n    await this.event.emit(`lin.${msg.frameId}` as any, msg)\r\n    if (msg.database && msg.name) {\r\n      await this.event.emit(`lin.${msg.database}.${msg.name}` as any, msg)\r\n    }\r\n    await this.event.emit('lin' as any, msg)\r\n    //signal emit\r\n    if (msg.device) {\r\n      const device = Object.values(global.dataSet.devices).find(\r\n        (device) => device.linDevice && device.linDevice.name == msg.device\r\n      )\r\n      if (device && device.linDevice!.database) {\r\n        const db = global.dataSet.database.lin[device.linDevice!.database]\r\n\r\n        if (db) {\r\n          if (!msg.name) {\r\n            for (const frame of Object.values(db.frames)) {\r\n              if (frame.id === msg.frameId) {\r\n                msg.name = frame.name\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (msg.name) {\r\n            //find frame by frameId\r\n            const frame = db.frames[msg.name]\r\n            if (frame && frame.signals) {\r\n              //apply message to signal\r\n              writeLinMessageData(frame, msg.data, db)\r\n              //emit signal\r\n              for (const signal of Object.values(frame.signals)) {\r\n                const signalDef = db.signals[signal.name]\r\n                if (signalDef) {\r\n                  await this.event.emit(`${db.name}.${signal.name}` as any, {\r\n                    rawValue: signalDef.value,\r\n                    physValue: signalDef.physValueEnum || signalDef.physValue\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private async someipMsg(data: SomeipMessage) {\r\n    let someipMsg: SomeipMessageBase\r\n    if (data.messageType == SomeipMessageType.REQUEST) {\r\n      someipMsg = new SomeipMessageRequest(data)\r\n    } else if (data.messageType == SomeipMessageType.RESPONSE) {\r\n      someipMsg = new SomeipMessageResponse(data)\r\n    } else {\r\n      throw new Error(`someip message type not supported: ${data.messageType}`)\r\n    }\r\n\r\n    const msg = someipMsg.msg\r\n    msg.payload = Buffer.from(msg.payload)\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.*.*` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.${msg.instance.toString(16).padStart(4, '0')}.*` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit(\r\n      `someip.${msg.service.toString(16).padStart(4, '0')}.${msg.instance.toString(16).padStart(4, '0')}.${msg.method.toString(16).padStart(4, '0')}` as any,\r\n      someipMsg\r\n    )\r\n    await this.event.emit('someip' as any, someipMsg)\r\n  }\r\n  private async keyDown(key: string) {\r\n    await this.event.emit(`keyDown${key}` as any, key)\r\n    await this.event.emit(`keyDown*` as any, key)\r\n  }\r\n  private async varUpdate(data: VarUpdateItem | VarUpdateItem[]) {\r\n    if (Array.isArray(data)) {\r\n      const promiseList: Promise<void>[] = []\r\n      for (const item of data) {\r\n        setVarMain(item.name, item.value)\r\n        promiseList.push(this.event.emit(`varUpdate${item.name}` as any, item))\r\n        promiseList.push(this.event.emit(`varUpdate*` as any, item))\r\n      }\r\n      await Promise.all(promiseList)\r\n    } else {\r\n      setVarMain(data.name, data.value)\r\n      await this.event.emit(`varUpdate${data.name}` as any, data)\r\n      await this.event.emit(`varUpdate*` as any, data)\r\n    }\r\n  }\r\n  private evnetDone(\r\n    id: number,\r\n    resp?: {\r\n      err?: string\r\n      data?: any\r\n    }\r\n  ) {\r\n    const item = emitMap.get(id)\r\n    if (item) {\r\n      if (resp) {\r\n        if (resp.err) {\r\n          item.reject(resp.err)\r\n        } else {\r\n          item.resolve(resp.data)\r\n        }\r\n      } else {\r\n        item.resolve()\r\n      }\r\n      emitMap.delete(id)\r\n    }\r\n  }\r\n  constructor() {\r\n    if (!this.isMain) {\r\n      workerpool.worker({\r\n        __on: this.workerOn.bind(this),\r\n        __start: this.start.bind(this),\r\n        __eventDone: this.evnetDone.bind(this)\r\n      })\r\n      this.event.on('__canMsg' as any, this.canMsg.bind(this))\r\n      this.event.on('__linMsg' as any, this.linMsg.bind(this))\r\n      this.event.on('__someipMsg' as any, this.someipMsg.bind(this))\r\n      this.event.on('__keyDown' as any, this.keyDown.bind(this))\r\n      this.event.on('__varUpdate' as any, this.varUpdate.bind(this))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a function, this function will be invoked when UDSClass is initialized.\r\n   * @param fc Non-async or async function\r\n   *\r\n   * @example\r\n   *\r\n   * - Perform actions following UDS initialization using a normal function.\r\n   *     ```ts\r\n   *     Util.Init(()=>{\r\n   *       console.log('Hello UDS!')\r\n   *     })\r\n   *     ```\r\n   *\r\n   * - Perform actions following UDS initialization using an async function.\r\n   *     ```ts\r\n   *     Util.Init(async ()=>{\r\n   *       const file=await fs.readFile(path.join(process.env.PROJECT_ROOT,'file.bin'))\r\n   *       let length=file.length\r\n   *       console.log('Hello UDS file! file length is', length)\r\n   *     })\r\n   *     ```\r\n   *\r\n   * - The last registered function will override the previous ones.\r\n   *     ```ts\r\n   *     // The following code will be ignored\r\n   *     Util.Init(async ()=>{\r\n   *         console.log('1')\r\n   *     })\r\n   *\r\n   *     // The following code will take effect\r\n   *     Util.Init(async ()=>{\r\n   *         console.log('2')\r\n   *     })\r\n   *     ```\r\n   */\r\n  Init(fc: () => void | Promise<void>) {\r\n    this.event.clearListeners('__varFc' as any)\r\n    if (process.env.MODE == 'test') {\r\n      this.event.on('__varFc' as any, async () => {\r\n        try {\r\n          await fc()\r\n          initPromiseResolve()\r\n        } catch (e) {\r\n          initPromiseReject(e)\r\n        }\r\n      })\r\n    } else {\r\n      this.event.on('__varFc' as any, fc)\r\n    }\r\n  }\r\n  /**\r\n   * Register a function, this function will be invoked when UDSClass is terminated.\r\n   * @param fc Non-async or async function\r\n   *\r\n   * @example\r\n   *\r\n   *\r\n   */\r\n  End(fc: () => void | Promise<void>) {\r\n    this.event.clearListeners('__end' as any)\r\n    this.event.on('__end' as any, fc)\r\n  }\r\n}\r\n\r\n/**\r\n * Global instance of UDSClass, providing access to UDS functionality throughout the application.\r\n * Use this instance to interact with UDS features and services.\r\n *\r\n * @category Util\r\n * @type {UDSClass}\r\n *\r\n * @example\r\n * 1. *Init function*\r\n *     - Perform actions following UDS initialization using a normal function.\r\n *         ```ts\r\n *         Util.Init(()=>{\r\n *           console.log('Hello UDS!')\r\n *         })\r\n *         ```\r\n *\r\n *     - Perform actions following UDS initialization using an async function.\r\n *         ```ts\r\n *         Util.Init(async ()=>{\r\n *           const file=await fs.readFile(path.join(process.env.PROJECT_ROOT,'file.bin'))\r\n *           let length=file.length\r\n *           console.log('Hello UDS file! file length is', length)\r\n *         })\r\n *         ```\r\n *\r\n * 2. *send functions*\r\n *     > * This function will be called after the message has been sent.\r\n *     > * Please replace `Can.DiagRequest.send` with your own service item name. The format is `<tester name>.<service item name>.send`\r\n *\r\n *     ```ts\r\n *     Util.On('Can.DiagRequest.send', async (req) => {\r\n *        // The req is a `DiagRequest`\r\n *        console.log(req.getServiceName(), ': send');\r\n *     });\r\n *     ```\r\n *\r\n * 3. *recv function*\r\n *     > * This function will be called after the response message has been received.\r\n *     > * Please replace `Can.DiagRequest.recv` with your own service item name. The format is `<tester name>.<service item name>.recv`\r\n *\r\n *     ```ts\r\n *     Util.On('Can.DiagRequest.recv', async (req) => {\r\n *        // The req is a `DiagResponse`\r\n *        console.log(req.getServiceName(), ':recv');\r\n *     });\r\n *     ```\r\n *\r\n * 4. **More**\r\n *     > For more details, please refer to the {@link UtilClass | `UtilClass`} class.\r\n */\r\nexport const Util = new UtilClass()\r\nglobal.Util = Util\r\nUtil.Init(() => {\r\n  initPromiseResolve()\r\n})\r\n\r\n/**\r\n * Sends a CAN message\r\n *\r\n * @category CAN\r\n * @param {CanMessage} msg - The CAN message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n * @example\r\n * ```ts\r\n * // Send a standard CAN message with 8 bytes of data\r\n *  const canMsg: CanMessage = {\r\n      id: 0x111, // CAN ID in hex\r\n      data: Buffer.from([0,1,2,3,4,5,6,7]), // 8 bytes of data\r\n      dir: 'OUT', // Output direction\r\n      msgType: {\r\n        idType: CAN_ID_TYPE.STANDARD, // Standard CAN frame\r\n        remote: false, // Not a remote frame\r\n        brs: false, // No bit rate switching\r\n        canfd: false // Not a CAN FD frame\r\n      }\r\n    }\r\n   const timestamp = await output(canMsg) // Send and get timestamp\r\n * ```\r\n */\r\nexport async function output(msg: CanMessage): Promise<number>\r\n/**\r\n * Sends a LIN message\r\n *\r\n * @category LIN\r\n * @param {LinMsg} msg - The LIN message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n */\r\nexport async function output(msg: LinMsg): Promise<number>\r\n/**\r\n * Sends a SOMEIP message\r\n *\r\n * @category SOMEIP\r\n * @param {SomeipMessage} msg - The SOMEIP message to be sent\r\n * @returns {Promise<number>} - Returns a promise that resolves to sent timestamp\r\n */\r\nexport async function output(msg: SomeipMessageBase): Promise<number>\r\nexport async function output(msg: CanMessage | LinMsg | SomeipMessageBase): Promise<number> {\r\n  const p: Promise<number> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'output',\r\n      data: msg instanceof SomeipMessageBase ? msg.msg : msg\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\nexport { SomeipMessageRequest, SomeipMessageResponse }\r\n\r\n/**\r\n * Set a signal value\r\n *\r\n * @category LIN\r\n * @category CAN\r\n * @param {SignalName} signal - The signal to set, dbName.SignalName\r\n * @param {number|number[]} value - The value to set, can be single number or array\r\n * @returns {Promise<void>} - Returns a promise that resolves when value is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set single value signal\r\n * await setSignal(lin.xxxx', 123);\r\n *\r\n * // Set array value signal\r\n * await setSignal('lin.xxxx', [1, 2, 3, 4]);\r\n * ```\r\n */\r\nexport async function setSignal(\r\n  signal: SignalName,\r\n  value: number | number[] | string\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    try {\r\n      setSignalNode({ signal, value })\r\n    } catch (e) {\r\n      reject(e)\r\n      return\r\n    }\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'setSignal',\r\n      data: {\r\n        signal,\r\n        value\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Get a signal's raw value and physical value\r\n *\r\n * @category LIN\r\n * @category CAN\r\n * @param {SignalName} signal - The signal name in format 'dbName.signalName'\r\n * @returns {Object} Object containing raw value and physical value\r\n * @returns {number|number[]|undefined} rawValue - The raw value of the signal\r\n * @returns {any} physValue - The physical value or enum value of the signal\r\n *\r\n * @example\r\n * ```ts\r\n * // Get signal value for CAN signal\r\n * const canSignal = getSignal('can.engineSpeed');\r\n * console.log('Raw value:', canSignal.rawValue); // e.g. 1000\r\n * console.log('Physical value:', canSignal.physValue); // e.g. '1000 rpm'\r\n *\r\n * // Get signal value for LIN signal\r\n * const linSignal = getSignal('lin.temperature');\r\n * console.log('Raw value:', linSignal.rawValue); // e.g. 50\r\n * console.log('Physical value:', linSignal.physValue); // e.g. '25°C'\r\n * ```\r\n */\r\nexport function getSignal(signal: SignalName): {\r\n  rawValue: number | number[] | undefined\r\n  physValue: any\r\n} {\r\n  const s = signal.split('.')\r\n  // 验证数据库是否存在\r\n  const db = Object.values(global.dataSet.database.can).find((db) => db.name == s[0])\r\n  if (db) {\r\n    const signalName = s[1]\r\n    let ss: Signal | undefined\r\n    for (const msg of Object.values(db.messages)) {\r\n      for (const signal of Object.values(msg.signals)) {\r\n        if (signal.name == signalName) {\r\n          ss = signal\r\n          break\r\n        }\r\n      }\r\n      if (ss) {\r\n        break\r\n      }\r\n    }\r\n    if (!ss) {\r\n      throw new Error(`Signal ${signalName} not found`)\r\n    }\r\n    return {\r\n      rawValue: ss.value || ss.initValue,\r\n      physValue: ss.physValueEnum || ss.physValue\r\n    }\r\n  } else {\r\n    const linDb = Object.values(global.dataSet.database.lin).find((db) => db.name == s[0])\r\n    if (linDb) {\r\n      const signalName = s[1]\r\n\r\n      const signal = linDb.signals[signalName]\r\n      if (!signal) {\r\n        throw new Error(`Signal ${signalName} not found`)\r\n      }\r\n      return {\r\n        rawValue: signal.value || signal.initValue,\r\n        physValue: signal.physValueEnum || signal.physValue\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(`Signal ${signal} not found`)\r\n}\r\n\r\n/**\r\n * Set a variable value\r\n *\r\n * @category Variable\r\n * @param {keyof VariableMap} name - The variable name\r\n * @param {number|number[]|string} value - The value to set, can be single number or array\r\n * @returns {Promise<void>} - Returns a promise that resolves when value is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set single value signal\r\n * await setVar('var2', 123);\r\n *\r\n * // Set array value signal\r\n * await setVar('namespace.var1', [1, 2, 3, 4]);\r\n * ```\r\n */\r\nexport async function setVar<T extends keyof VariableMap>(\r\n  name: T,\r\n  value: VariableMap[T]\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    const { found, target } = setVarMain(name, value)\r\n    if (found && target) {\r\n      workerpool.workerEmit({\r\n        id: id,\r\n        event: 'varApi',\r\n        data: {\r\n          method: 'setVar',\r\n          name,\r\n          value\r\n        }\r\n      })\r\n      emitMap.set(id, { resolve, reject })\r\n\r\n      id++\r\n    } else {\r\n      reject(new Error(`var ${name} not found`))\r\n    }\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Get a variable value\r\n *\r\n * @category Variable\r\n * @param {string} varName - The name of the variable to get\r\n * @returns {VarItem} - Returns the variable value and metadata\r\n *\r\n * @example\r\n * ```ts\r\n * // Get a variable value\r\n * const var1 = getVar('namespace.var1');\r\n * console.log(var1.value); // Access the value\r\n * console.log(var1.type); // Access the type\r\n * ```\r\n */\r\nexport function getVar<T extends keyof VariableMap>(varName: T): VariableMap[T] {\r\n  return getVarMain(varName) as VariableMap[T]\r\n}\r\n\r\n/**\r\n * Run a UDS sequence\r\n *\r\n * @category UDS\r\n * @param {UdsSeqName} seqName - The name of the UDS sequence to run\r\n * @param {string} [device] - The optional device name to run the sequence on when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when sequence completes\r\n *\r\n * @example\r\n * ```ts\r\n * // Run a UDS sequence\r\n * await runUdsSeq('MySequence');\r\n *\r\n * // Run sequence on specific device\r\n * await runUdsSeq('MySequence', 'Device1');\r\n * ```\r\n */\r\nexport async function runUdsSeq(seqName: UdsSeqName, device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'runUdsSeq',\r\n      data: {\r\n        device,\r\n        name: seqName\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\n/**\r\n * Stop a running UDS sequence\r\n *\r\n * @category UDS\r\n * @param {UdsSeqName} seqName - The name of the UDS sequence to stop\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when sequence is stopped\r\n *\r\n * @example\r\n * ```ts\r\n * // Stop a UDS sequence\r\n * await stopUdsSeq('MySequence');\r\n * ```\r\n */\r\nexport async function stopUdsSeq(seqName: UdsSeqName, device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'stopUdsSeq',\r\n      data: {\r\n        device,\r\n        name: seqName\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n\r\n  return await p\r\n}\r\n\r\nlet rightEntity: EntityAddr | undefined\r\n\r\n/**\r\n * Register a virtual entity\r\n *\r\n * @deprecated This API is deprecated and not working, enable it through the simulate_by field in the tester config\r\n *\r\n * @category DOIP\r\n * @param {EntityAddr} entity - The entity to be registered.\r\n * @param {string} ip - The IP address of the entity, if node connected to multiple devices.\r\n * @returns {Promise<void>} - Returns a promise that resolves when the entity is registered.\r\n */\r\nexport async function RegisterEthVirtualEntity(entity: VinInfo, ip?: string) {\r\n  //Don't do anything\r\n}\r\n\r\n//get dot input param type\r\ntype TestEventGenerator = Parameters<typeof dot>[0]\r\n\r\n// eslint-disable-next-line require-yield\r\nexport async function* reporter(source: TestEventGenerator) {\r\n  for await (const event of source) {\r\n    if (\r\n      event.type === 'test:start' ||\r\n      event.type === 'test:pass' ||\r\n      event.type === 'test:fail' ||\r\n      event.type === 'test:dequeue'\r\n    ) {\r\n      workerpool.workerEmit({\r\n        event: 'test',\r\n        id: id,\r\n        data: event\r\n      })\r\n      id++\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with default settings\r\n * await linStartScheduler('MyScheduler');\r\n * ```\r\n */\r\nexport async function linStartScheduler(schName: string): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with specific slot\r\n * await linStartScheduler('MyScheduler', 0);\r\n * ```\r\n */\r\nexport async function linStartScheduler(schName: string, slot: number): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @param {string} device - The device name to start the scheduler on\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with slot and device\r\n * await linStartScheduler('MyScheduler', 0, 'LinDevice1');\r\n * ```\r\n */\r\nexport async function linStartScheduler(\r\n  schName: string,\r\n  slot: number,\r\n  device: string\r\n): Promise<void>\r\n/**\r\n * Start a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} schName - The name of the scheduler to start\r\n * @param {number} slot - The slot number for the scheduler\r\n * @param {string} device - The device name to start the scheduler on\r\n * @param {boolean[]} activeCtrl - The active control array for the scheduler\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is started\r\n *\r\n * @example\r\n * ```ts\r\n * // Start scheduler with all parameters\r\n * await linStartScheduler('MyScheduler', 0, 'LinDevice1', [true, false, true, false]);\r\n * ```\r\n */\r\nexport async function linStartScheduler(\r\n  schName: string,\r\n  slot?: number,\r\n  device?: string,\r\n  activeCtrl?: boolean[]\r\n): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'startSch',\r\n        device,\r\n        schName,\r\n        activeCtrl,\r\n        slot\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Control the power of a LIN device\r\n *\r\n * @category LIN\r\n * @param {boolean} power - The power state to set\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when power is set\r\n *\r\n * @note This function is only available on LinCable devices (https://app.whyengineer.com/docs/um/hardware/lincable.html)\r\n *\r\n * @example\r\n * ```ts\r\n * // Set power to true\r\n * await linPowerCtrl(true);\r\n *\r\n * // Set power to false on specific device\r\n * await linPowerCtrl(false, 'Device1');\r\n * ```\r\n */\r\nexport async function linPowerCtrl(power: boolean, device?: string) {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'powerCtrl',\r\n        device,\r\n        power\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Stop a LIN scheduler\r\n *\r\n * @category LIN\r\n * @param {string} [device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when scheduler is stopped\r\n *\r\n * @example\r\n * ```ts\r\n * // Stop LIN scheduler\r\n * await linStopScheduler();\r\n *\r\n * // Stop scheduler on specific device\r\n * await linStopScheduler('Device1');\r\n * ```\r\n */\r\nexport async function linStopScheduler(device?: string): Promise<void> {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'linApi',\r\n      data: {\r\n        method: 'stopSch',\r\n        device\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n\r\n/**\r\n * Set PWM duty cycle\r\n *\r\n * @category PWM\r\n * @param {Object} value - The PWM configuration object\r\n * @param {number} value.duty - Duty cycle percentage (0-100)\r\n * @param {string} [value.device] - The optional device name when multiple devices are connected\r\n * @returns {Promise<void>} - Returns a promise that resolves when duty cycle is set\r\n *\r\n * @example\r\n * ```ts\r\n * // Set duty cycle to 50%\r\n * await setPwmDuty({duty: 50});\r\n *\r\n * // Set duty cycle on specific device\r\n * await setPwmDuty({duty: 75, device: 'Device1'});\r\n * ```\r\n */\r\nexport async function setPwmDuty(value: { duty: number; device?: string }) {\r\n  const p: Promise<void> = new Promise((resolve, reject) => {\r\n    workerpool.workerEmit({\r\n      id: id,\r\n      event: 'pwmApi',\r\n      data: {\r\n        method: 'setDuty',\r\n        duty: value.duty,\r\n        device: value.device\r\n      }\r\n    })\r\n    emitMap.set(id, { resolve, reject })\r\n    id++\r\n  })\r\n  return await p\r\n}\r\n/**\r\n * Get a frame from database by name\r\n * \r\n * @category LIN\r\n * @param {('lin')} dbType - The type of database\r\n * @param {string} dbName - The name of the database\r\n * @param {string} frameName - The name of the frame to retrieve\r\n * \r\n * @returns {LinMsg} The frame object from the database\r\n * \r\n * @example\r\n * ```ts\r\n * // Get a LIN frame\r\n * const linFrame = getFrameFromDB('lin', 'myLinDb', 'Frame1');\r\n\r\n */\r\nexport function getFrameFromDB(dbType: 'lin', dbName: string, frameName: string): LinMsg\r\n\r\n/**\r\n * Get a frame from database by name\r\n *\r\n * @category CAN\r\n * @param {('can')} dbType - The type of database\r\n * @param {string} dbName - The name of the database\r\n * @param {string} frameName - The name of the frame to retrieve\r\n * @returns {CanMessage} The frame object from the database\r\n *\r\n * @example\r\n * ```ts\r\n * // Get a CAN frame\r\n * const canFrame = getFrameFromDB('can', 'myCanDb', 'Frame2');\r\n * ```\r\n */\r\nexport function getFrameFromDB(dbType: 'can', dbName: string, frameName: string): CanMessage\r\n// Implementation\r\nexport function getFrameFromDB(\r\n  dbType: 'lin' | 'can',\r\n  dbName: string,\r\n  frameName: string\r\n): LinMsg | CanMessage {\r\n  if (dbType == 'lin') {\r\n    const db = Object.values(global.dataSet.database.lin).find((db) => db.name == dbName)\r\n    if (db) {\r\n      const frame = db.frames[frameName]\r\n      if (frame) {\r\n        // 判断方向\r\n        let direction = LinDirection.RECV\r\n        if (frame.publishedBy === db.node.master.nodeName) {\r\n          direction = LinDirection.SEND\r\n        }\r\n\r\n        // 计算校验类型\r\n        const checksumType =\r\n          frame.id === 0x3c || frame.id === 0x3d\r\n            ? LinChecksumType.CLASSIC\r\n            : LinChecksumType.ENHANCED\r\n        const ret: LinMsg = {\r\n          frameId: frame.id,\r\n          data: getFrameData(db, frame),\r\n          direction,\r\n          checksumType,\r\n          database: db.id,\r\n          name: frame.name\r\n        }\r\n        return ret\r\n      } else {\r\n        // is event frame\r\n        const eventFrame = db.eventTriggeredFrames[frameName]\r\n        if (eventFrame) {\r\n          const containsFrame = eventFrame.frameNames[0]\r\n          const frame = db.frames[containsFrame]\r\n          if (frame) {\r\n            const ret: LinMsg = {\r\n              frameId: eventFrame.frameId,\r\n              data: Buffer.alloc(frame.frameSize + 1),\r\n              direction: LinDirection.RECV,\r\n              checksumType: LinChecksumType.CLASSIC,\r\n              database: db.id,\r\n              name: eventFrame.name,\r\n              isEvent: true\r\n            }\r\n            return ret\r\n          }\r\n        }\r\n\r\n        // const a = data.frameName.split('.')\r\n        // const slaveNodeName = a[0]\r\n        // const id = a[1]\r\n\r\n        // //find slave node\r\n        // const slaveNode = db.nodeAttrs[slaveNodeName]\r\n        // if (slaveNode) {\r\n        //   if (id === 'ReadByIdentifier') {\r\n        //     const data = Buffer.alloc(8)\r\n        //     data.writeUInt8(slaveNode.initial_NAD || 0, 0)\r\n        //     data.writeUInt8(0x6, 1)\r\n        //     data.writeUInt8(0xb2, 2)\r\n        //     data.writeUInt16LE(slaveNode.supplier_id, 4)\r\n        //     data.writeUInt16LE(slaveNode.function_id, 6)\r\n        //     const ret: LinMsg = {\r\n        //       frameId: 0x3c,\r\n        //       data,\r\n        //       direction: LinDirection.SEND,\r\n        //       checksumType: LinChecksumType.CLASSIC,\r\n        //       database: db.id,\r\n        //       name: 'ReadByIdentifier',\r\n        //       isEvent: false\r\n        //     }\r\n        //     return ret\r\n        //   } else if (id === 'AssignNAD') {\r\n        //     const data = Buffer.alloc(8)\r\n        //     data.writeUInt8(slaveNode.initial_NAD || 0, 0)\r\n        //     data.writeUInt8(0x6, 1)\r\n        //     data.writeUInt8(0xb0, 2)\r\n        //     data.writeUInt16LE(slaveNode.supplier_id, 3)\r\n        //     data.writeUInt16LE(slaveNode.function_id, 5)\r\n        //     const ret: LinMsg = {\r\n        //       frameId: 0x3c,\r\n        //       data,\r\n        //       direction: LinDirection.SEND,\r\n        //       checksumType: LinChecksumType.CLASSIC,\r\n        //       database: db.id,\r\n        //       name: 'AssignNAD',\r\n        //       isEvent: false\r\n        //     }\r\n        //     return ret\r\n        //   }\r\n        // }\r\n      }\r\n      throw new Error(`frame ${frameName} not found`)\r\n    } else {\r\n      throw new Error(`database ${dbName} not found`)\r\n    }\r\n  } else if (dbType == 'can') {\r\n    let ret: CanMessage | undefined\r\n    // 查找 CAN 数据库\r\n    const db = Object.values(global.dataSet.database.can).find((db) => db.name == dbName)\r\n    if (db) {\r\n      const msg = Object.values(db.messages).find((m) => m.name === frameName)\r\n\r\n      if (msg) {\r\n        // 构造 CanMessage\r\n        return {\r\n          id: msg.id,\r\n          name: msg.name,\r\n          dir: 'OUT',\r\n          data: getMessageData(msg),\r\n          msgType: {\r\n            idType: msg.extId ? CAN_ID_TYPE.EXTENDED : CAN_ID_TYPE.STANDARD,\r\n            brs: false,\r\n            canfd: msg.canfd || false,\r\n            remote: false\r\n          },\r\n          database: db.id\r\n        }\r\n      } else {\r\n        throw new Error(`CAN message ${frameName} not found`)\r\n      }\r\n    } else {\r\n      throw new Error(`CAN database ${dbName} not found`)\r\n    }\r\n  } else {\r\n    throw new Error(`database type ${dbType} not supported`)\r\n  }\r\n}\r\n"],"names":["Promise","handler","parent","me","this","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","message","stack","Error","prototype","all","promises","remaining","length","results","p","i","defer","resolver","promise","constructor","name","exports","process","dlopen","module","__dirname","require","WorkerHandler","environment","DEBUG_PORT_ALLOCATOR","Pool","script","options","workers","tasks","forkArgs","Object","freeze","forkOpts","workerOpts","workerThreadOpts","debugPortStart","nodeWorker","workerType","maxQueueSize","Infinity","workerTerminateTimeout","onCreateWorker","onTerminateWorker","emitStdStreams","maxWorkers","isNumber","isInteger","TypeError","validateMaxWorkers","Math","max","cpus","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","ensureWorkerThreads","value","round","exec","method","params","Array","isArray","task","originalTimeout","indexOf","call","String","proxy","arguments","pool","methods","slice","worker","_getWorker","shift","catch","terminated","_removeWorker","busy","_createWorkerHandler","releasePort","debugPort","_removeWorkerFromList","terminate","err","index","splice","force","removeWorker","termPromise","terminateAndNotify","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","nextAvailableStartingAt","transfer","isNode","nodeProcess","versions","node","platform","worker_threads","isMainThread","connected","Window","self","navigator","hardwareConcurrency","Transfer","exit","postMessage","addEventListener","on","event","data","send","WorkerThreads","code","parentPort","convertError","getOwnPropertyNames","reduce","product","defineProperty","enumerable","isPromise","run","args","Function","apply","keys","terminationHandler","undefined","cleanupAndExit","_exit","currentRequestId","request","id","register","hasOwnProperty","onTerminate","emit","payload","isEvent","add","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","root","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","types","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","n","baseTrim","string","trimmedEndIndex","replace","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","test","mapToArray","map","size","overArg","transform","arg","replaceHolders","placeholder","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","charAt","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","getNative","ctxClearTimeout","ctxNow","now","ctxSetTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","get","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","symbol","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInvoke","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","sort","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","baseSortBy","basePickBy","baseSet","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrStacked","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","rand","memoize","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","flush","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","nativeKeysIn","isProto","baseKeysIn","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","DebugPortAllocator","ports","starting","port","workerEmit","validateOptions","forkOptsNames","workerThreadOptsNames","workerOptsNames","TERMINATE_METHOD_ID","tryRequireWorkerThreads","ensureWebWorker","Worker","setupBrowserWorker","isBrowserWorker","setupWorkerThreadWorker","stdout","stderr","isWorkerThread","kill","disconnect","setupProcessWorker","child_process","fork","isChildProcess","resolveForkOptions","opts","processExecArgv","execArgv","inspectorActive","debugBrk","stdio","handleEmittedStdPayload","processing","_options","onError","Blob","window","URL","createObjectURL","blob","getDefaultWorker","setupWorker","ready","requestQueue","response","dispatchQueuedRequests","lastTask","terminating","obj","objectToError","globalOn","exitCode","signalCode","spawnargs","spawnfile","cleaning","lastId","cleanup","removeAllListeners","killed","cleanExitTimeout","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","allowedOptionNames","objectName","optionNames","unknownOptionName","optionName","illegalOptionName","allowedOptionName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","r","nmd","children","anyMap","eventsMap","producersMap","anyProducer","resolvedPromise","listenerAdded","listenerRemoved","canEmitMetaEvents","isGlobalDebugEnabled","isEventKeyType","assertEventName","eventName","assertListener","listener","getListeners","instance","events","getEventProducers","producers","eventNames","isFinished","queue","producer","enqueue","item","finish","delete","asyncIterator","defaultMethodNamesOrAssert","allEmitteryMethods","isMetaEvent","emitMetaEvent","emitter","eventData","Emittery","emitteryPropertyName","emitteryMethodCaller","isDebugEnabled","globalThis","env","DEBUG","debug","enabled","logger","debugName","JSON","stringify","currentTime","logTime","getHours","getMinutes","getSeconds","getMilliseconds","console","log","logIfDebugEnabled","signal","off","removeEventListener","aborted","off_","enqueueProducers","listeners","anyListeners","staticListeners","staticAnyListeners","async","emitSerial","onAny","offAny","anyEvent","clearListeners","listenerCount","bindMethods","v","writable","configurable","randomUUID","rnds8Pool","poolPtr","rng","byteToHex","buf","rnds","arr","unsafeStringify","checkServiceId","serviceId","need","param2raw","param","from","maxSIze","reallocBuffer","len","newBuffer","alloc","getParamBuffer","allLen","t","bitLen","subarray","getTxPdu","service","Number","getRxPdu","isNegativeResponse","nrc","respParams","paramSetValRaw","val","byte","readUInt8","phyValue","str","splitStr2","readFloatBE","readDoubleBE","CAN_ID_TYPE","CAN_ADDR_TYPE","CAN_ADDR_FORMAT","CAN_ERROR_ID","CAN_BUS_ERROR","CAN_READ_TIMEOUT","CAN_BUS_BUSY","CAN_INTERNAL_ERROR","CAN_BUS_CLOSED","CAN_PARAM_ERROR","CAN_DRIVER_SILENT","saNode","SecureAccessDll","_ref","dllPath","SeedKey","loadDll","IsLoaded","GenerateKeyExOpt","ipSeedArray","iSecurityLevel","ipVariant","ipOptions","seedArray","UINT8_ARRAY","setitem","variant","INT8_ARRAY","readInt8","KeyArray","KeySize","UINT32_PTR","ret","cast","retBuf","getitem","GenerateKeyEx","LoadDLL","LinDirection","LinMode","LinChecksumType","LIN_ERROR_ID","LIN_ADDR_TYPE","LIN_SCH_TYPE","getCheckSum","checksumType","pid","checksum","CLASSIC","getFrameData","db","frame","frameSize","signals","signalDef","singleType","initValues","initValue","bytesToCopy","signalSizeBits","startBit","bitOffset","tempValue","targetBit","LIN_BUS_ERROR","LIN_READ_TIMEOUT","LIN_BUS_BUSY","LIN_INTERNAL_ERROR","LIN_BUS_CLOSED","LIN_PARAM_ERROR","getPhysicalValue","rawValue","encodingTypes","numVal","strVal","usedEncode","encodingType","physicalValue","minValue","maxValue","scale","physValue","toFixed","tt","textInfo","logicalValue","signalValue","acc","digit","getMaxRawValue","pow","physToRaw","phys","row","factor","maxRaw","isSigned","bits","readSignalFromBuffer","isLittleEndian","startByte","startBitInByte","remainingBits","valueIndex","bitsInThisByte","mask","currentBit","valueShift","currentByte","bitInByte","valueType","Float32Array","Uint32Array","Float64Array","valueTable","physValueEnum","label","vt","valueTables","getMessageData","multiplexer","multiplexerValue","multiplexerIndicator","writeSignalToBuffer","multiplexerRange","bitValue","bitMask","setSignal","dataSet","database","can","signalName","ss","msg","messages","setFloat32","getUint32","setFloat64","clampedPhysValue","minimum","maximum","updateSignalPhys","setUint32","getFloat32","getFloat64","newPhysValue","raw","actualValue","rawToPhys","updateSignalRaw","linDb","lin","lastValue","updateLinSignalVal","PrecisionTimer","timerName","isCreated","timerMap","callCallback","taskId","addTask","delayMicrosec","intervalMicrosec","cancelTask","destroy","setVar","found","vars","SomeipMessageType","TaskStatus","IsrStatus","TaskType","SpinlockStatus","ResourceStatus","REQUEST","REQUEST_NO_RETURN","NOTIFICATION","RESPONSE","REQUEST_ACK","NOTIFICATION_ACK","ERROR","RESPONSE_ACK","ERROR_ACK","UNKNOWN","SomeipMessageBase","setPayload","SomeipMessageRequest","messageType","super","SomeipMessageResponse","fromSomeipRequest","ACTIVE","START","WAIT","RELEASE","PREEMPT","TERMINATE","TASK","ISR","SPINLOCK","RESOURCE","HOOK","SERVICE","LINE","STOP","MonitorVar","parentId","desc","unit","init","ONLY","initPromiseResolve","initPromiseReject","initPromise","testCnt","testEnableControl","preserveErrorStack","atLine","line","selfTest","beforeEach","afterEach","workerData","selfDescribe","only","describe","emitMap","serviceMap","Service","isRequest","testerName","changeService","asyncEmit","getServiceName","On","Util","Once","OnOnce","Off","getServiceDesc","diagGetParameter","paramName","diagGetParameterRaw","diagGetParameterSize","diagGetParameterNames","diagSetParameterSize","bitSize","lastByte","minLen","paramSetSize","diagSetParameter","writeUInt8","tb","b","writeFloatBE","writeDoubleBE","paramSetVal","diagSetParameterRaw","outputDiag","deviceName","addressName","device","address","isReq","diagSetRaw","sid","paramLen","subData","applyBuffer","diagGetRaw","DiagJob","jobName","DiagResponse","addr","getUdsAddress","serviceName","fromDiagRequest","req","diagIsPositiveResponse","diagGetResponseCode","DiagRequest","UtilClass","isMain","funcMap","Register","jobs","cargs","workerOn","eventArray","OnCan","fc","OnSignal","OnSignalOnce","OffSignal","getTesterName","OnCanOnce","OffCan","OnLinOnce","OnLin","OffLin","OnSomeipMessage","OffSomeipMessage","OnSomeipMessageOnce","OnKey","OnKeyOnce","OffKey","OnVar","OnVarOnce","OffVar","warpFunc","resp","testControl","sysVars","devices","testers","orti","list","Statistics","OsTrace","buslist","BusLoad","BusLoadMin","BusLoadMax","BusLoadAvg","FrameSentFreq","FrameRecvFreq","FrameFreq","SentCnt","RecvCnt","canDevice","tester","seqList","seq","Ortilist","DelayTimeMin","DelayTimeMax","DelayTimeAvg","ActivationIntervalMin","ActivationIntervalMax","ActivationIntervalAvg","StartIntervalMin","StartIntervalMax","StartIntervalAvg","ExecutionTimeMin","ExecutionTimeMax","ExecutionTimeAvg","StartCount","Status","enum","ActiveCount","RunningRate","Jitter","ISRList","RunCount","CallIntervalMin","CallIntervalMax","CallIntervalAvg","ResourceList","AcquireCount","ReleaseCount","ServiceList","Count","LastStatus","HookList","coreNum","core","coreConfigs","coreId","vitem","vkey","resource","resourceConfigs","resourceKey","serviceConfigs","serviceKey","hook","hostConfigs","hookKey","coreList","LoadPercent","ExecutionTime","TotalTime","getAllSysVar","parentName","currentVar","unshift","canMsg","linMsg","frameId","linDevice","frames","tempBuffer","readUInt16BE","readUInt32BE","nextByte","encodeKey","signalRep","encodeInfo","signalEncodeTypes","someipMsg","keyDown","varUpdate","promiseList","evnetDone","__on","__start","__eventDone","Init","MODE","End","output","getSignal","varName","getVar","runUdsSeq","seqName","stopUdsSeq","RegisterEthVirtualEntity","entity","ip","reporter","linStartScheduler","schName","slot","activeCtrl","linPowerCtrl","power","linStopScheduler","setPwmDuty","duty","getFrameFromDB","dbType","dbName","frameName","direction","RECV","publishedBy","master","nodeName","SEND","ENHANCED","eventFrame","eventTriggeredFrames","containsFrame","frameNames","m","msgType","idType","extId","EXTENDED","STANDARD","brs","canfd","remote"],"sourceRoot":""}